{
  "source_base_path": "D:/a/1/s/source",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      }
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.aspnet/LinqToDB.AspNet.Logging.LinqToDBLoggerFactoryAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.aspnet/LinqToDB.AspNet.Logging.LinqToDBLoggerFactoryAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.AspNet.Logging.LinqToDBLoggerFactoryAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.aspnet/LinqToDB.AspNet.Logging.OptionsBuilderExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.aspnet/LinqToDB.AspNet.Logging.OptionsBuilderExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.AspNet.Logging.OptionsBuilderExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.aspnet/LinqToDB.AspNet.Logging.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.aspnet/LinqToDB.AspNet.Logging.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.AspNet.Logging",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.aspnet/LinqToDB.AspNet.ServiceConfigurationExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.aspnet/LinqToDB.AspNet.ServiceConfigurationExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.AspNet.ServiceConfigurationExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.aspnet/LinqToDB.AspNet.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.aspnet/LinqToDB.AspNet.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.AspNet",
      "Summary": null
    },
    {
      "type": "Toc",
      "source_relative_path": "api/linq2db.aspnet/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.aspnet/toc.html"
        },
        ".json": {
          "relative_path": "api/linq2db.aspnet/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.EFConnectionInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.EFConnectionInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.EFConnectionInfo",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.EFConnectionInfo.yml\" sourcestartlinenumber=\"1\">Contains database connectivity information, extracted from EF.Core.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.EFForEFExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.EFForEFExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.EFForEFExtensions",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.EFForEFExtensions.yml\" sourcestartlinenumber=\"1\">Provides conflict-less mappings to <xref href=\"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions\" data-throw-if-not-resolved=\"false\"></xref> extensions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.EFProviderInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.EFProviderInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.EFProviderInfo",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.EFProviderInfo.yml\" sourcestartlinenumber=\"1\">Required integration information about underlying database provider, extracted from EF.Core.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.ILinqToDBForEFTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.ILinqToDBForEFTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.ILinqToDBForEFTools",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.ILinqToDBForEFTools.yml\" sourcestartlinenumber=\"1\">Interface for EF Core - LINQ To DB integration bridge.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.EFCoreExpressionAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.EFCoreExpressionAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.Internal.EFCoreExpressionAttribute",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.EFCoreExpressionAttribute.yml\" sourcestartlinenumber=\"1\">Maps Linq To DB expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.LinqToDBForEFQueryProvider-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.LinqToDBForEFQueryProvider-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.Internal.LinqToDBForEFQueryProvider<T>",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.LinqToDBForEFQueryProvider-1.yml\" sourcestartlinenumber=\"1\">Adapter for <xref href=\"Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider\" data-throw-if-not-resolved=\"false\"></xref>\nThis is internal API and is not intended for use by Linq To DB applications.\nIt may change or be removed without further notice.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.LinqToDBOptionsExtension.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.LinqToDBOptionsExtension.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.Internal.LinqToDBOptionsExtension",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.LinqToDBOptionsExtension.yml\" sourcestartlinenumber=\"1\">Model containing LinqToDB related context options.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.Internal.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.Internal",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBContextOptionsBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBContextOptionsBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.LinqToDBContextOptionsBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBContextOptionsBuilder.yml\" sourcestartlinenumber=\"1\">Linq To DB context options builder</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBExtensionsAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBExtensionsAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.LinqToDBExtensionsAdapter",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBExtensionsAdapter.yml\" sourcestartlinenumber=\"1\">LINQ To DB async extensions adapter to call EF.Core functionality instead of default implementation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.LinqToDBForEFExtensions",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFExtensions.yml\" sourcestartlinenumber=\"1\">Provides conflict-less mappings to <xref href=\"LinqToDB.AsyncExtensions\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.LinqToDBForEFTools",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFTools.yml\" sourcestartlinenumber=\"1\">EF Core <xref href=\"Microsoft.EntityFrameworkCore.DbContext\" data-throw-if-not-resolved=\"false\"></xref> extensions to call LINQ To DB functionality.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsDataConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsDataConnection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsDataConnection",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsDataConnection.yml\" sourcestartlinenumber=\"1\">Linq To DB EF.Core data connection.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsDataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsDataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsDataContext",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsDataContext.yml\" sourcestartlinenumber=\"1\">Linq To DB EF.Core data context.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsException.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsException",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsException.yml\" sourcestartlinenumber=\"1\">Exception class for EF.Core to LINQ To DB integration issues.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsImplDefault.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsImplDefault.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsImplDefault",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBForEFToolsImplDefault.yml\" sourcestartlinenumber=\"1\">Default EF Core - LINQ To DB integration bridge implementation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBProviderInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBProviderInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore.LinqToDBProviderInfo",
      "Summary": "<p sourcefile=\"api/linq2db.efcore/LinqToDB.EntityFrameworkCore.LinqToDBProviderInfo.yml\" sourcestartlinenumber=\"1\">Stores LINQ To DB database provider information.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/LinqToDB.EntityFrameworkCore.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityFrameworkCore",
      "Summary": null
    },
    {
      "type": "Toc",
      "source_relative_path": "api/linq2db.efcore/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.efcore/toc.html"
        },
        ".json": {
          "relative_path": "api/linq2db.efcore/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.DefaultConnectionFactory.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.DefaultConnectionFactory.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.DefaultConnectionFactory",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.DefaultConnectionFactory.yml\" sourcestartlinenumber=\"1\">Represents default <xref href=\"LinqToDB.Identity.IConnectionFactory\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IClameConverter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IClameConverter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IClameConverter",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IClameConverter.yml\" sourcestartlinenumber=\"1\">Provides methods to convert from\\to <xref href=\"System.Security.Claims.Claim\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IConcurrency-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IConcurrency-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IConcurrency<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IConcurrency-1.yml\" sourcestartlinenumber=\"1\">Concurrency interface for <xref href=\"LinqToDB.Identity.IIdentityRole%601\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"LinqToDB.Identity.IIdentityUser%601\" data-throw-if-not-resolved=\"false\"></xref>/&gt;</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IConnectionFactory.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IConnectionFactory.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IConnectionFactory",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IConnectionFactory.yml\" sourcestartlinenumber=\"1\">Represents connection factory</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityRole-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityRole-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IIdentityRole<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IIdentityRole-1.yml\" sourcestartlinenumber=\"1\">Represents a role in the identity system</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityRoleClaim-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityRoleClaim-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IIdentityRoleClaim<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IIdentityRoleClaim-1.yml\" sourcestartlinenumber=\"1\">Represents a claim that is granted to all users within a role.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityUser-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityUser-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IIdentityUser<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IIdentityUser-1.yml\" sourcestartlinenumber=\"1\">Represents a user in the identity system</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityUserClaim-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityUserClaim-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IIdentityUserClaim<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IIdentityUserClaim-1.yml\" sourcestartlinenumber=\"1\">Represents a claim that a user possesses.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityUserLogin-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityUserLogin-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IIdentityUserLogin<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IIdentityUserLogin-1.yml\" sourcestartlinenumber=\"1\">Represents a login and its associated provider for a user.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityUserRole-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityUserRole-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IIdentityUserRole<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IIdentityUserRole-1.yml\" sourcestartlinenumber=\"1\">Represents the link between a user and a role.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityUserToken-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IIdentityUserToken-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IIdentityUserToken<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IIdentityUserToken-1.yml\" sourcestartlinenumber=\"1\">Represents an authentication token for a user.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityDataConnection<TUser>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection-1.yml\" sourcestartlinenumber=\"1\">Base class for the LinqToDB database context used for identity.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection-3.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection-3.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityDataConnection<TUser, TRole, TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection-3.yml\" sourcestartlinenumber=\"1\">Base class for the LinqToDB database context used for identity.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection-8.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection-8.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityDataConnection<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection-8.yml\" sourcestartlinenumber=\"1\">Base class for the LinqToDB database context used for identity.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityDataConnection",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityDataConnection.yml\" sourcestartlinenumber=\"1\">Base class for the LinqToDB database context used for identity.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityRole-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityRole-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityRole<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityRole-1.yml\" sourcestartlinenumber=\"1\">Represents a role in the identity system</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityRole-3.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityRole-3.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityRole<TKey, TUserRole, TRoleClaim>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityRole-3.yml\" sourcestartlinenumber=\"1\">Represents a role in the identity system</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityRole.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityRole.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityRole",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityRole.yml\" sourcestartlinenumber=\"1\">The default implementation of <xref href=\"LinqToDB.Identity.IdentityRole%601\" data-throw-if-not-resolved=\"false\"></xref> which uses a string as the primary key.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityRoleClaim-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityRoleClaim-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityRoleClaim<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityRoleClaim-1.yml\" sourcestartlinenumber=\"1\">Represents a claim that is granted to all users within a role.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUser-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUser-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityUser<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityUser-1.yml\" sourcestartlinenumber=\"1\">Represents a user in the identity system</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUser-4.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUser-4.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityUser<TKey, TUserClaim, TUserRole, TUserLogin>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityUser-4.yml\" sourcestartlinenumber=\"1\">Represents a user in the identity system</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUser.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUser.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityUser",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityUser.yml\" sourcestartlinenumber=\"1\">The default implementation of <xref href=\"LinqToDB.Identity.IdentityUser%601\" data-throw-if-not-resolved=\"false\"></xref> which uses a string as a primary key.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUserClaim-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUserClaim-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityUserClaim<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityUserClaim-1.yml\" sourcestartlinenumber=\"1\">Represents a claim that a user possesses.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUserLogin-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUserLogin-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityUserLogin<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityUserLogin-1.yml\" sourcestartlinenumber=\"1\">Represents a login and its associated provider for a user.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUserRole-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUserRole-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityUserRole<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityUserRole-1.yml\" sourcestartlinenumber=\"1\">Represents the link between a user and a role.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUserToken-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.IdentityUserToken-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.IdentityUserToken<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.IdentityUserToken-1.yml\" sourcestartlinenumber=\"1\">Represents an authentication token for a user.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.Resources.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.Resources.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.Resources",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.Resources.yml\" sourcestartlinenumber=\"1\">A strongly-typed resource class, for looking up localized strings, etc.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.RoleStore-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.RoleStore-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.RoleStore<TRole>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.RoleStore-1.yml\" sourcestartlinenumber=\"1\">Creates a new instance of a persistence store for roles.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.RoleStore-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.RoleStore-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.RoleStore<TKey, TRole>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.RoleStore-2.yml\" sourcestartlinenumber=\"1\">Creates a new instance of a persistence store for roles.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.RoleStore-3.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.RoleStore-3.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.RoleStore<TKey, TRole, TRoleClaim>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.RoleStore-3.yml\" sourcestartlinenumber=\"1\">Creates a new instance of a persistence store for roles.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.UserStore-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.UserStore-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.UserStore<TUser>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.UserStore-1.yml\" sourcestartlinenumber=\"1\">Creates a new instance of a persistence store for the specified user type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.UserStore-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.UserStore-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.UserStore<TUser, TRole>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.UserStore-2.yml\" sourcestartlinenumber=\"1\">Represents a new instance of a persistence store for the specified user and role types.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.UserStore-3.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.UserStore-3.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.UserStore<TKey, TUser, TRole>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.UserStore-3.yml\" sourcestartlinenumber=\"1\">Represents a new instance of a persistence store for the specified user and role types.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.UserStore-7.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.UserStore-7.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity.UserStore<TKey, TUser, TRole, TUserClaim, TUserRole, TUserLogin, TUserToken>",
      "Summary": "<p sourcefile=\"api/linq2db.identity/LinqToDB.Identity.UserStore-7.yml\" sourcestartlinenumber=\"1\">Represents a new instance of a persistence store for the specified user and role types.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/LinqToDB.Identity.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/LinqToDB.Identity.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Identity",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/Microsoft.Extensions.DependencyInjection.IdentityLinqToDbBuilderExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/Microsoft.Extensions.DependencyInjection.IdentityLinqToDbBuilderExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Microsoft.Extensions.DependencyInjection.IdentityLinqToDbBuilderExtensions",
      "Summary": "<p sourcefile=\"api/linq2db.identity/Microsoft.Extensions.DependencyInjection.IdentityLinqToDbBuilderExtensions.yml\" sourcestartlinenumber=\"1\">Contains extension methods to <xref href=\"Microsoft.AspNetCore.Identity.IdentityBuilder\" data-throw-if-not-resolved=\"false\"></xref> for adding linq2db stores.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.identity/Microsoft.Extensions.DependencyInjection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/Microsoft.Extensions.DependencyInjection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Microsoft.Extensions.DependencyInjection",
      "Summary": null
    },
    {
      "type": "Toc",
      "source_relative_path": "api/linq2db.identity/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.identity/toc.html"
        },
        ".json": {
          "relative_path": "api/linq2db.identity/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.GrpcConfiguration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.GrpcConfiguration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Grpc.Dto.GrpcConfiguration",
      "Summary": "<p sourcefile=\"api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.GrpcConfiguration.yml\" sourcestartlinenumber=\"1\">Context configuration data contract.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.GrpcConfigurationQuery.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.GrpcConfigurationQuery.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Grpc.Dto.GrpcConfigurationQuery",
      "Summary": "<p sourcefile=\"api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.GrpcConfigurationQuery.yml\" sourcestartlinenumber=\"1\">Query configuration data contract.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.GrpcInt.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.GrpcInt.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Grpc.Dto.GrpcInt",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.GrpcString.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.GrpcString.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Grpc.Dto.GrpcString",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.Dto.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Grpc.Dto",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.GrpcDataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.GrpcDataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Grpc.GrpcDataContext",
      "Summary": "<p sourcefile=\"api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.GrpcDataContext.yml\" sourcestartlinenumber=\"1\">Remote data context implementation over GRPC.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.GrpcLinqService.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.GrpcLinqService.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Grpc.GrpcLinqService",
      "Summary": "<p sourcefile=\"api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.GrpcLinqService.yml\" sourcestartlinenumber=\"1\">grpc-based remote data context server implementation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.GrpcLinqServiceClient.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.GrpcLinqServiceClient.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Grpc.GrpcLinqServiceClient",
      "Summary": "<p sourcefile=\"api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.GrpcLinqServiceClient.yml\" sourcestartlinenumber=\"1\">grpc-base remote data context client.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.IGrpcLinqService.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.IGrpcLinqService.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Grpc.IGrpcLinqService",
      "Summary": "<p sourcefile=\"api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.IGrpcLinqService.yml\" sourcestartlinenumber=\"1\">grpc-based remote context service contract.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/LinqToDB.Remote.Grpc.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Grpc",
      "Summary": null
    },
    {
      "type": "Toc",
      "source_relative_path": "api/linq2db.remote.grpc/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.grpc/toc.html"
        },
        ".json": {
          "relative_path": "api/linq2db.remote.grpc/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.wcf/LinqToDB.Remote.Wcf.IWcfLinqService.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.wcf/LinqToDB.Remote.Wcf.IWcfLinqService.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Wcf.IWcfLinqService",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.wcf/LinqToDB.Remote.Wcf.WcfDataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.wcf/LinqToDB.Remote.Wcf.WcfDataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Wcf.WcfDataContext",
      "Summary": "<p sourcefile=\"api/linq2db.remote.wcf/LinqToDB.Remote.Wcf.WcfDataContext.yml\" sourcestartlinenumber=\"1\">WCF-based remote data context implementation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.wcf/LinqToDB.Remote.Wcf.WcfLinqService.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.wcf/LinqToDB.Remote.Wcf.WcfLinqService.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Wcf.WcfLinqService",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.remote.wcf/LinqToDB.Remote.Wcf.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.wcf/LinqToDB.Remote.Wcf.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.Wcf",
      "Summary": null
    },
    {
      "type": "Toc",
      "source_relative_path": "api/linq2db.remote.wcf/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.remote.wcf/toc.html"
        },
        ".json": {
          "relative_path": "api/linq2db.remote.wcf/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.AstExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.AstExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.AstExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.AttributeBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.AttributeBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.AttributeBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.AttributeBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeAttribute\" data-throw-if-not-resolved=\"false\"></xref> custom attribute object builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.AttributeOwner.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.AttributeOwner.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.AttributeOwner",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.AttributeOwner.yml\" sourcestartlinenumber=\"1\">Base class for elements with custom attributes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.BinaryOperation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.BinaryOperation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.BinaryOperation",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.BinaryOperation.yml\" sourcestartlinenumber=\"1\">Binary operation type.\nList of operations limited to those we currently use for code generation and could be extended in future.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.BlockBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.BlockBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.BlockBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.BlockBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeBlock\" data-throw-if-not-resolved=\"false\"></xref> object builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ClassBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ClassBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ClassBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ClassBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeClass\" data-throw-if-not-resolved=\"false\"></xref> object builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ClassGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ClassGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ClassGroup",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ClassGroup.yml\" sourcestartlinenumber=\"1\">Group of classes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAsOperator.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAsOperator.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeAsOperator",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeAsOperator.yml\" sourcestartlinenumber=\"1\">Type convert expression using <code>as</code> operator.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAssignmentBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAssignmentBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeAssignmentBase",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeAssignmentBase.yml\" sourcestartlinenumber=\"1\">Assignment expression or statement.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAssignmentExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAssignmentExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeAssignmentExpression",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeAssignmentExpression.yml\" sourcestartlinenumber=\"1\">Assignment expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAssignmentStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAssignmentStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeAssignmentStatement",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeAssignmentStatement.yml\" sourcestartlinenumber=\"1\">Assignment statement.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAttribute.CodeNamedParameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAttribute.CodeNamedParameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeAttribute.CodeNamedParameter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeAttribute",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeAttribute.yml\" sourcestartlinenumber=\"1\">Custom attribute declaration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAwaitExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAwaitExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeAwaitExpression",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeAwaitExpression.yml\" sourcestartlinenumber=\"1\">Await expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAwaitStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeAwaitStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeAwaitStatement",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeAwaitStatement.yml\" sourcestartlinenumber=\"1\">Await statement.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeBinary.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeBinary.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeBinary",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeBlock.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeBlock.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeBlock",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeBlock.yml\" sourcestartlinenumber=\"1\">Code block statement.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeBuilder.yml\" sourcestartlinenumber=\"1\">AST builder class with helpers to create various AST nodes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeCallBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeCallBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeCallBase",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeCallBase.yml\" sourcestartlinenumber=\"1\">Method call statement.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeCallExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeCallExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeCallExpression",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeCallExpression.yml\" sourcestartlinenumber=\"1\">Method call expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeCallStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeCallStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeCallStatement",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeCallStatement.yml\" sourcestartlinenumber=\"1\">Method call statement.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeClass.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeClass.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeClass",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeComment.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeComment.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeComment",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeConstant.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeConstant.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeConstant",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeConstant.yml\" sourcestartlinenumber=\"1\">Constant expression. E.g. literal (including <code>null</code> literal) or enumeration value.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeConstructor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeConstructor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeConstructor",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeConstructor.yml\" sourcestartlinenumber=\"1\">Class constructor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeDefault.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeDefault.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeDefault",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeDefault.yml\" sourcestartlinenumber=\"1\">Default value expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeElementList-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeElementList-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeElementList<TElement>",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeElementList-1.yml\" sourcestartlinenumber=\"1\">Base class for collection of code nodes of specific type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeElementType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeElementType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeElementType",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeElementType.yml\" sourcestartlinenumber=\"1\">Element types for code AST elements.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeEmptyLine.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeEmptyLine.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeEmptyLine",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeEmptyLine.yml\" sourcestartlinenumber=\"1\">Empty line element. Used for explicit formatting.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeExternalPropertyOrField.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeExternalPropertyOrField.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeExternalPropertyOrField",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeExternalPropertyOrField.yml\" sourcestartlinenumber=\"1\">Defines reference to property or field of existing type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeField.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeField.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeField",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeField.yml\" sourcestartlinenumber=\"1\">Class field definition.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeFile.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeFile.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeFile",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeFile.yml\" sourcestartlinenumber=\"1\">File-level code unit.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeGenerationVisitor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeGenerationVisitor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeGenerationVisitor",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeGenerationVisitor.yml\" sourcestartlinenumber=\"1\">Base code generation visitor that contains public API for code generation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeIdentifier.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeIdentifier.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeIdentifier",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeIdentifier.yml\" sourcestartlinenumber=\"1\">Reference to identifier value. Used instead of string to allow identifier mutation in existing AST\n(e.g. because initial value is not valid in target language or conflicts with existing identifiers).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeImport.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeImport.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeImport",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeImport.yml\" sourcestartlinenumber=\"1\">Import (using) statement.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeIndex.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeIndex.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeIndex",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeIndex.yml\" sourcestartlinenumber=\"1\">Indexed access expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeLambda.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeLambda.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeLambda",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeLambda.yml\" sourcestartlinenumber=\"1\">Lambda method.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeMember.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeMember.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeMember",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeMember.yml\" sourcestartlinenumber=\"1\">Member access expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeMethod.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeMethod.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeMethod",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeMethod.yml\" sourcestartlinenumber=\"1\">Class method definition.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeModelVisitor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeModelVisitor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeModelVisitor",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeModelVisitor.yml\" sourcestartlinenumber=\"1\">Base AST visitor class without node visit methods implementation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeNameOf.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeNameOf.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeNameOf",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeNameOf.yml\" sourcestartlinenumber=\"1\"><code>nameof(...)</code> expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeNamespace.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeNamespace.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeNamespace",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeNamespace.yml\" sourcestartlinenumber=\"1\">Namespace declaration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeNew.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeNew.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeNew",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeNew.yml\" sourcestartlinenumber=\"1\">New object instantiation expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeNewArray.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeNewArray.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeNewArray",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeNewArray.yml\" sourcestartlinenumber=\"1\">Expression, describing new one-dimensional array declaration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeParameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeParameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeParameter",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeParameter.yml\" sourcestartlinenumber=\"1\">Method parameter.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeParameterDirection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeParameterDirection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeParameterDirection",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeParameterDirection.yml\" sourcestartlinenumber=\"1\">Parameter direction.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodePragma.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodePragma.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodePragma",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodePragma.yml\" sourcestartlinenumber=\"1\">Compiler pragma directive.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeProperty.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeProperty.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeProperty",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeProperty.yml\" sourcestartlinenumber=\"1\">Class property declaration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeReference.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeReference.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeReference",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeReference.yml\" sourcestartlinenumber=\"1\">Defines reference to parameter or variable inside of current method/property or simple (without owner type/instance) reference to field/property.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeRegion.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeRegion.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeRegion",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeRegion.yml\" sourcestartlinenumber=\"1\">Code region.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeReturn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeReturn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeReturn",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeReturn.yml\" sourcestartlinenumber=\"1\">Return statement.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeSuppressNull.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeSuppressNull.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeSuppressNull",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeSuppressNull.yml\" sourcestartlinenumber=\"1\">null-forgiving operator.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTernary.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTernary.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeTernary",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeThis.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeThis.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeThis",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeThis.yml\" sourcestartlinenumber=\"1\"><code>this</code> reference.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeThrowBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeThrowBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeThrowBase",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeThrowBase.yml\" sourcestartlinenumber=\"1\">Throw expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeThrowExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeThrowExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeThrowExpression",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeThrowExpression.yml\" sourcestartlinenumber=\"1\">Throw expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeThrowStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeThrowStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeThrowStatement",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeThrowStatement.yml\" sourcestartlinenumber=\"1\">Throw statement.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTypeCast.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTypeCast.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeTypeCast",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeTypeCast.yml\" sourcestartlinenumber=\"1\">Type cast expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTypeInitializer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTypeInitializer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeTypeInitializer",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeTypeInitializer.yml\" sourcestartlinenumber=\"1\">Type initializer (static constructor).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTypeReference.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTypeReference.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeTypeReference",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeTypeReference.yml\" sourcestartlinenumber=\"1\">Type, used in expression context.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTypeToken.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTypeToken.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeTypeToken",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeTypeToken.yml\" sourcestartlinenumber=\"1\">Type reference, used in type-only context.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTypedName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeTypedName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeTypedName",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeTypedName.yml\" sourcestartlinenumber=\"1\">Typed named entity (parameter, variable, field or property).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeUnary.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeUnary.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeUnary",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeVariable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeVariable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeVariable",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeVariable.yml\" sourcestartlinenumber=\"1\">Variable declaration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeXmlComment.ParameterComment.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeXmlComment.ParameterComment.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeXmlComment.ParameterComment",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeXmlComment.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.CodeXmlComment.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.CodeXmlComment",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.CodeXmlComment.yml\" sourcestartlinenumber=\"1\">XML-doc commentary.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ConstructorBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ConstructorBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ConstructorBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ConstructorBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeConstructor\" data-throw-if-not-resolved=\"false\"></xref> builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ConstructorGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ConstructorGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ConstructorGroup",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ConstructorGroup.yml\" sourcestartlinenumber=\"1\">Group of constructors.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ConvertCodeModelVisitor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ConvertCodeModelVisitor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ConvertCodeModelVisitor",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ConvertCodeModelVisitor.yml\" sourcestartlinenumber=\"1\">Base AST rewrite visitor class with noop node visit methods implementation with root-to-leaf visit order.\nEach node could be replaced with any other node type and this is visitor implementor's responsibility\nto ensure new node type is compatible with node owner.\nOtherwise parent node visit method will generate type cast exception trying to consume incompatible child node.\nImportant note: node visitors should visit only child nodes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.FieldBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.FieldBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.FieldBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.FieldBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeField\" data-throw-if-not-resolved=\"false\"></xref> object builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.FieldGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.FieldGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.FieldGroup",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.FieldGroup.yml\" sourcestartlinenumber=\"1\">Group of fields.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ICodeElement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ICodeElement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ICodeElement",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ICodeElement.yml\" sourcestartlinenumber=\"1\">Base interface, implemented by all AST nodes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ICodeExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ICodeExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ICodeExpression",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ICodeExpression.yml\" sourcestartlinenumber=\"1\">Marker interface for expression nodes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ICodeStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ICodeStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ICodeStatement",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ICodeStatement.yml\" sourcestartlinenumber=\"1\">Marker interface for statement nodes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.IGroupElement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.IGroupElement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.IGroupElement",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.IGroupElement.yml\" sourcestartlinenumber=\"1\">Marker interface for members of node groups.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ILValue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ILValue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ILValue",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ILValue.yml\" sourcestartlinenumber=\"1\">Marker interface for l-value nodes (nodes, that could be used as assignment targets).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ILanguageProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ILanguageProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ILanguageProvider",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ILanguageProvider.yml\" sourcestartlinenumber=\"1\">Provides access to language-specific functionality.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.IMemberGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.IMemberGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.IMemberGroup",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.IMemberGroup.yml\" sourcestartlinenumber=\"1\">Non-generic interface for member groups.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ITopLevelElement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ITopLevelElement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ITopLevelElement",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ITopLevelElement.yml\" sourcestartlinenumber=\"1\">Marker insterface to elements, that could be used as top-level file element (doesn't require nesting into\nsome other element to be valid).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.IType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.IType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.IType",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.IType.yml\" sourcestartlinenumber=\"1\">Type descriptor interface.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ITypeParser.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ITypeParser.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ITypeParser",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ITypeParser.yml\" sourcestartlinenumber=\"1\">Provides helpers to create <xref href=\"LinqToDB.CodeModel.IType\" data-throw-if-not-resolved=\"false\"></xref> type descriptor from <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> or string with type name.\nAlso provides helpers to parse namespace names.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ITypedName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ITypedName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ITypedName",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ITypedName.yml\" sourcestartlinenumber=\"1\">Represents code element, that have type and name (e.g. class field).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.LambdaMethodBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.LambdaMethodBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.LambdaMethodBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.LambdaMethodBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeLambda\" data-throw-if-not-resolved=\"false\"></xref> object builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.LanguageProviders.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.LanguageProviders.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.LanguageProviders",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.LanguageProviders.yml\" sourcestartlinenumber=\"1\">Provides access to built-in language providers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.MemberGroup-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.MemberGroup-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.MemberGroup<TMember>",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.MemberGroup-1.yml\" sourcestartlinenumber=\"1\">Base class for node groups.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.MethodBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.MethodBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.MethodBase",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.MethodBase.yml\" sourcestartlinenumber=\"1\">Base class for method-like nodes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.MethodBaseBuilder-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.MethodBaseBuilder-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.MethodBaseBuilder<TBuilder, TMethod>",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.MethodBaseBuilder-2.yml\" sourcestartlinenumber=\"1\">Base class for method-like object builders.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.MethodBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.MethodBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.MethodBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.MethodBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeMethod\" data-throw-if-not-resolved=\"false\"></xref> object builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.MethodGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.MethodGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.MethodGroup",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.MethodGroup.yml\" sourcestartlinenumber=\"1\">Group of methods.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.Modifiers.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.Modifiers.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.Modifiers",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.Modifiers.yml\" sourcestartlinenumber=\"1\">Explicit type and type member attributes and modifiers.\nWe don't check if set flag match defaults for applied member or type and always generate modifier if it set by this enum.\nAlso we don't check wether modifier is valid on member/type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.NameFixOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.NameFixOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.NameFixOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.NameFixType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.NameFixType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.NameFixType",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.NameFixType.yml\" sourcestartlinenumber=\"1\">Specify available options for name fix logic.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.NamespaceBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.NamespaceBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.NamespaceBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.NamespaceBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeNamespace\" data-throw-if-not-resolved=\"false\"></xref> object builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.NoopCodeModelVisitor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.NoopCodeModelVisitor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.NoopCodeModelVisitor",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.NoopCodeModelVisitor.yml\" sourcestartlinenumber=\"1\">Base class for AST visitors with default implementation for all nodes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.PragmaGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.PragmaGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.PragmaGroup",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.PragmaGroup.yml\" sourcestartlinenumber=\"1\">Group of compiler pragmas.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.PragmaType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.PragmaType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.PragmaType",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.PragmaType.yml\" sourcestartlinenumber=\"1\">Compiler pragma directive type.\nList of pragmas limited to one we currently support.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.PropertyBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.PropertyBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.PropertyBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.PropertyBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeProperty\" data-throw-if-not-resolved=\"false\"></xref> object builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.PropertyGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.PropertyGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.PropertyGroup",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.PropertyGroup.yml\" sourcestartlinenumber=\"1\">Group of properties.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ProviderSpecificStructsEqualityFixer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.ProviderSpecificStructsEqualityFixer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.ProviderSpecificStructsEqualityFixer",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.ProviderSpecificStructsEqualityFixer.yml\" sourcestartlinenumber=\"1\">This visitor overrides equality operation for some well-known types which doesn't implement &quot;bool operator==&quot; and &quot;bool operator!=&quot;.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.RegionBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.RegionBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.RegionBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.RegionBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeRegion\" data-throw-if-not-resolved=\"false\"></xref> object builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.RegionGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.RegionGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.RegionGroup",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.RegionGroup.yml\" sourcestartlinenumber=\"1\">Group of regions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.SimpleTrivia.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.SimpleTrivia.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.SimpleTrivia",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.SimpleTrivia.yml\" sourcestartlinenumber=\"1\">Simple trivia element.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.TypeBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.TypeBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.TypeBase",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.TypeBase.yml\" sourcestartlinenumber=\"1\">Base class for types.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.TypeBuilder-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.TypeBuilder-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.TypeBuilder<TBuilder, TType>",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.TypeBuilder-2.yml\" sourcestartlinenumber=\"1\">Base class for type builders.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.TypeInitializerBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.TypeInitializerBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.TypeInitializerBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.TypeInitializerBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeTypeInitializer\" data-throw-if-not-resolved=\"false\"></xref> method builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.TypeKind.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.TypeKind.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.TypeKind",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.TypeKind.yml\" sourcestartlinenumber=\"1\">Type kind.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.UnaryOperation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.UnaryOperation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.UnaryOperation",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.UnaryOperation.yml\" sourcestartlinenumber=\"1\">Unary operation type.\nList of operations limited to those we currently use for code generation and could be extended in future.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Common.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Common.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Common",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Configuration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Configuration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Configuration",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Data.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Data.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Data",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Expressions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Expressions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Expressions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Mapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Mapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Mapping",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Tools.Comparers.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Tools.Comparers.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Tools.Comparers",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Tools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Tools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.LinqToDB.Tools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.LinqToDB.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.LinqToDB",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.Microsoft.SqlServer.Types.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.Microsoft.SqlServer.Types.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.Microsoft.SqlServer.Types",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.Microsoft.SqlServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.Microsoft.SqlServer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.Microsoft.SqlServer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.Microsoft.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.Microsoft.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.Microsoft",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Collections.Generic.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Collections.Generic.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System.Collections.Generic",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Collections.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Collections.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System.Collections",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Data.Common.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Data.Common.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System.Data.Common",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Data.SqlTypes.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Data.SqlTypes.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System.Data.SqlTypes",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Data.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Data.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System.Data",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Linq.Expressions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Linq.Expressions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System.Linq.Expressions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Linq.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Linq.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System.Linq",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Reflection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Reflection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System.Reflection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Threading.Tasks.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Threading.Tasks.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System.Threading.Tasks",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Threading.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.Threading.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System.Threading",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.System.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes.System",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.WellKnownTypes",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.WellKnownTypes.yml\" sourcestartlinenumber=\"1\">This class contains pre-parsed <xref href=\"LinqToDB.CodeModel.IType\" data-throw-if-not-resolved=\"false\"></xref> definitions and member references for well-known system and Linq To DB types,\nused during code generation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.XmlDocBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.XmlDocBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel.XmlDocBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.CodeModel.XmlDocBuilder.yml\" sourcestartlinenumber=\"1\"><xref href=\"LinqToDB.CodeModel.CodeXmlComment\" data-throw-if-not-resolved=\"false\"></xref> object builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.CodeModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.CodeModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CodeModel",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.AdditionalSchemaModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.AdditionalSchemaModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.AdditionalSchemaModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.AdditionalSchemaModel.yml\" sourcestartlinenumber=\"1\">Non-default schema model.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.AggregateFunctionModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.AggregateFunctionModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.AggregateFunctionModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.AggregateFunctionModel.yml\" sourcestartlinenumber=\"1\">Aggregate function model.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.AssociationModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.AssociationModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.AssociationModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.AssociationModel.yml\" sourcestartlinenumber=\"1\">Association (e.g. foreign key relation) model. Defines whole relation (both sides).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.AsyncProcedureResult.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.AsyncProcedureResult.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.AsyncProcedureResult",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.AsyncProcedureResult.yml\" sourcestartlinenumber=\"1\">This model defines results wrapper class for async stored procedure mapper in cases when procedure returns multiple values:</p>\n<ul><li>result set table and one or more return, out or ref parameter</li><li>rowcount and one or more return, out or ref parameter</li><li>two or more return, out or ref parameters</li></ul>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.ClassModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.ClassModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.ClassModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.ClassModel.yml\" sourcestartlinenumber=\"1\">Contains basic properties of class.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.ColumnModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.ColumnModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.ColumnModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.ColumnModel.yml\" sourcestartlinenumber=\"1\">Entity column model.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.DataContextModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.DataContextModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.DataContextModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.DataContextModel.yml\" sourcestartlinenumber=\"1\">Main database context descriptor. Also contains data model for current/default database schema.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.DataModelGenerator.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.DataModelGenerator.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.DataModelGenerator",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.DataModelGenerator.yml\" sourcestartlinenumber=\"1\">Implements code model AST generation for database model and produce AST for:</p>\n<ul><li>database context class</li><li>table mappings</li><li>procedures and functions mappings</li><li>classes for non-default schemas</li></ul>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.DatabaseModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.DatabaseModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.DatabaseModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.DatabaseModel.yml\" sourcestartlinenumber=\"1\">Root object for database model. Contains reference to data model and various model options.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.EntityModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.EntityModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.EntityModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.EntityModel.yml\" sourcestartlinenumber=\"1\">Contains mapping entity attributes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.FileData.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.FileData.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.FileData",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.FileData.yml\" sourcestartlinenumber=\"1\">Stores code model file node with containing namespace groups.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.FindTypes.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.FindTypes.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.FindTypes",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.FindTypes.yml\" sourcestartlinenumber=\"1\">Defines which Find method signatures should be generated.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.FunctionModelBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.FunctionModelBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.FunctionModelBase",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.FunctionModelBase.yml\" sourcestartlinenumber=\"1\">Base class for stored procedure or function descriptors.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.FunctionParameterModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.FunctionParameterModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.FunctionParameterModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.FunctionParameterModel.yml\" sourcestartlinenumber=\"1\">Function or procedure parameter descriptor (also for return parameter).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.FunctionResult.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.FunctionResult.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.FunctionResult",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.FunctionResult.yml\" sourcestartlinenumber=\"1\">Descriptor of table function or stored procedure return record.\nEither <code class=\"paramref\">CustomTable</code> or <code class=\"paramref\">Entity</code> must be specified, but not both.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.IDataModelGenerationContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.IDataModelGenerationContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.IDataModelGenerationContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.MethodModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.MethodModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.MethodModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.MethodModel.yml\" sourcestartlinenumber=\"1\">Contains basic method (including lambda methods and constructors) attributes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.ParameterModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.ParameterModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.ParameterModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.ParameterModel.yml\" sourcestartlinenumber=\"1\">Contains method (including constructors and lambdas) parameter basic attributes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.PropertyModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.PropertyModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.PropertyModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.PropertyModel.yml\" sourcestartlinenumber=\"1\">Contains basic class property attributes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.ResultTableModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.ResultTableModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.ResultTableModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.ResultTableModel.yml\" sourcestartlinenumber=\"1\">Custom mapping class descriptor for procedure or table function return record.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.ScalarFunctionModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.ScalarFunctionModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.ScalarFunctionModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.ScalarFunctionModel.yml\" sourcestartlinenumber=\"1\">Scalar function descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.ScalarFunctionModelBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.ScalarFunctionModelBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.ScalarFunctionModelBase",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.ScalarFunctionModelBase.yml\" sourcestartlinenumber=\"1\">Base class for scalar or aggregate function descriptors (methods with scalar return value).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.SchemaModelBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.SchemaModelBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.SchemaModelBase",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.SchemaModelBase.yml\" sourcestartlinenumber=\"1\">Base class for schema model.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.StoredProcedureModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.StoredProcedureModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.StoredProcedureModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.StoredProcedureModel.yml\" sourcestartlinenumber=\"1\">Stored procedure descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.TableFunctionModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.TableFunctionModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.TableFunctionModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.TableFunctionModel.yml\" sourcestartlinenumber=\"1\">Table function model.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.TableFunctionModelBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.TableFunctionModelBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.TableFunctionModelBase",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.TableFunctionModelBase.yml\" sourcestartlinenumber=\"1\">Base class for table function and stored procedure descriptors (database methods with table-like results).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.TupleFieldModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.TupleFieldModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.TupleFieldModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.TupleFieldModel.yml\" sourcestartlinenumber=\"1\">Scalar function return tuple field descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.TupleModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.TupleModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel.TupleModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.DataModel.TupleModel.yml\" sourcestartlinenumber=\"1\">Tuple class descriptor for specific scalar function return value, when function returns tuple.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.DataModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.DataModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataModel",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.EntityCreatedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.EntityCreatedEventArgs.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.EntityCreatedEventArgs",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Metadata.AssociationMetadata.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Metadata.AssociationMetadata.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.AssociationMetadata",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Metadata.AssociationMetadata.yml\" sourcestartlinenumber=\"1\">Association (foreign key relation) mapping attributes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Metadata.ColumnMetadata.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Metadata.ColumnMetadata.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.ColumnMetadata",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Metadata.ColumnMetadata.yml\" sourcestartlinenumber=\"1\">Column mapping attributes, used with <xref href=\"LinqToDB.Mapping.ColumnAttribute\" data-throw-if-not-resolved=\"false\"></xref> mapping attribute.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Metadata.EntityMetadata.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Metadata.EntityMetadata.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.EntityMetadata",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Metadata.EntityMetadata.yml\" sourcestartlinenumber=\"1\">Entity mapping attributes for table or view.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Metadata.FunctionMetadata.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Metadata.FunctionMetadata.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.FunctionMetadata",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Metadata.FunctionMetadata.yml\" sourcestartlinenumber=\"1\">Scalar, aggregate or window (analytic) function mapping attributes, used\nwith <xref href=\"LinqToDB.Sql.FunctionAttribute\" data-throw-if-not-resolved=\"false\"></xref> mapping attribute.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Metadata.IMetadataBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Metadata.IMetadataBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.IMetadataBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Metadata.IMetadataBuilder.yml\" sourcestartlinenumber=\"1\">Provides database model metadata generator abstraction.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Metadata.MetadataBuilders.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Metadata.MetadataBuilders.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.MetadataBuilders",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Metadata.MetadataBuilders.yml\" sourcestartlinenumber=\"1\">Provides access to built-in metadata generators.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Metadata.MetadataSource.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Metadata.MetadataSource.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.MetadataSource",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Metadata.MetadataSource.yml\" sourcestartlinenumber=\"1\">Defines generated metadata source.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Metadata.TableFunctionMetadata.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Metadata.TableFunctionMetadata.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.TableFunctionMetadata",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Metadata.TableFunctionMetadata.yml\" sourcestartlinenumber=\"1\">Table function mapping attributes, used with <xref href=\"LinqToDB.Sql.TableFunctionAttribute\" data-throw-if-not-resolved=\"false\"></xref> mapping attribute.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Metadata.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Metadata.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Naming.HumanizerNameConverter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Naming.HumanizerNameConverter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Naming.HumanizerNameConverter",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Naming.HumanizerNameConverter.yml\" sourcestartlinenumber=\"1\">Name conversion provider implementation using\n<a href=\"https://github.com/Humanizr/Humanizer\">Humanizer</a> library.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Naming.INameConversionProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Naming.INameConversionProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Naming.INameConversionProvider",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Naming.INameConversionProvider.yml\" sourcestartlinenumber=\"1\">Name conversion provider.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Naming.NameCasing.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Naming.NameCasing.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Naming.NameCasing",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Naming.NameCasing.yml\" sourcestartlinenumber=\"1\">Define name casing formats.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Naming.NameConverterBase.NameParts.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Naming.NameConverterBase.NameParts.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Naming.NameConverterBase.NameParts",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Naming.NameConverterBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Naming.NameConverterBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Naming.NameConverterBase",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Naming.NameConverterBase.yml\" sourcestartlinenumber=\"1\">Base class for name converters.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Naming.NameTransformation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Naming.NameTransformation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Naming.NameTransformation",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Naming.NameTransformation.yml\" sourcestartlinenumber=\"1\">Defines name transformation modes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Naming.NamingServices.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Naming.NamingServices.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Naming.NamingServices",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Naming.NamingServices.yml\" sourcestartlinenumber=\"1\">Identifier names normalization service. Identify separate words in name and apply requested\npluralization and casing modes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Naming.NormalizationOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Naming.NormalizationOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Naming.NormalizationOptions",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Naming.NormalizationOptions.yml\" sourcestartlinenumber=\"1\">Multi-word identifier normalization options.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Naming.Pluralization.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Naming.Pluralization.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Naming.Pluralization",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Naming.Pluralization.yml\" sourcestartlinenumber=\"1\">Defines pluralization-related word conversions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Naming.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Naming.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Naming",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.CodeGenerationOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.CodeGenerationOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.CodeGenerationOptions",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Scaffold.CodeGenerationOptions.yml\" sourcestartlinenumber=\"1\">General code-generation options, not related to data model directly.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.DataModelLoader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.DataModelLoader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.DataModelLoader",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Scaffold.DataModelLoader.yml\" sourcestartlinenumber=\"1\">Implements database schema load and conversion to data model.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.DataModelOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.DataModelOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.DataModelOptions",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Scaffold.DataModelOptions.yml\" sourcestartlinenumber=\"1\">Data model-related options.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.FinalDataModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.FinalDataModel.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.FinalDataModel",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Scaffold.FinalDataModel.yml\" sourcestartlinenumber=\"1\">Contains data model, used for scaffolding with final types and names, used in generated code, set.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.Internal.NameGenerationServices.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.Internal.NameGenerationServices.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.Internal.NameGenerationServices",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Scaffold.Internal.NameGenerationServices.yml\" sourcestartlinenumber=\"1\">Internal API.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.Internal.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.Internal.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.Internal",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.ScaffoldInterceptors.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.ScaffoldInterceptors.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.ScaffoldInterceptors",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Scaffold.ScaffoldInterceptors.yml\" sourcestartlinenumber=\"1\">Base class for scaffold customizations.\nConstains virtual methods with no-op implementation for each customization point.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.ScaffoldOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.ScaffoldOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.ScaffoldOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.Scaffolder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.Scaffolder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.Scaffolder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Scaffold.Scaffolder.yml\" sourcestartlinenumber=\"1\">Helper class to simplify common scenario of data model generation from database.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.SchemaOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.SchemaOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.SchemaOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.SourceCodeFile.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.SourceCodeFile.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold.SourceCodeFile",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Scaffold.SourceCodeFile.yml\" sourcestartlinenumber=\"1\">Single-file source code with file name.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Scaffold.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Scaffold.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Scaffold",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.AggregateFunction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.AggregateFunction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.AggregateFunction",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.AggregateFunction.yml\" sourcestartlinenumber=\"1\">Aggregate function descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.AggregateTypeMappingsProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.AggregateTypeMappingsProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.AggregateTypeMappingsProvider",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.AggregateTypeMappingsProvider.yml\" sourcestartlinenumber=\"1\">Implements aggregated <xref href=\"LinqToDB.Schema.ITypeMappingProvider\" data-throw-if-not-resolved=\"false\"></xref> provider.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.CallableKind.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.CallableKind.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.CallableKind",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.CallableKind.yml\" sourcestartlinenumber=\"1\">Kind of callable object.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.CallableObject.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.CallableObject.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.CallableObject",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.CallableObject.yml\" sourcestartlinenumber=\"1\">Describes callable database object, e.g. stored procedure or function.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.Column.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.Column.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.Column",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.Column.yml\" sourcestartlinenumber=\"1\">Table or view column descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.DatabaseOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.DatabaseOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.DatabaseOptions",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.DatabaseOptions.yml\" sourcestartlinenumber=\"1\">Database-specific scaffold options. Defines default values.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.DatabaseType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.DatabaseType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.DatabaseType",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.DatabaseType.yml\" sourcestartlinenumber=\"1\">Database type descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.ForeignKey.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.ForeignKey.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.ForeignKey",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.ForeignKey.yml\" sourcestartlinenumber=\"1\">Describes foreign key relation between tables.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.ForeignKeyColumnMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.ForeignKeyColumnMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.ForeignKeyColumnMapping",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.ForeignKeyColumnMapping.yml\" sourcestartlinenumber=\"1\">Foreign key source-target column pair.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.ISchemaProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.ISchemaProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.ISchemaProvider",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.ISchemaProvider.yml\" sourcestartlinenumber=\"1\">Database schema provider.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.ITypeMappingProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.ITypeMappingProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.ITypeMappingProvider",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.ITypeMappingProvider.yml\" sourcestartlinenumber=\"1\">Service to map database type to .net type with <xref href=\"LinqToDB.DataType\" data-throw-if-not-resolved=\"false\"></xref> hint.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.Identity.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.Identity.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.Identity",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.Identity.yml\" sourcestartlinenumber=\"1\">Identity column descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.LegacySchemaProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.LegacySchemaProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.LegacySchemaProvider",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.LegacySchemaProvider.yml\" sourcestartlinenumber=\"1\">Default schema provider implementation over existing <xref href=\"LinqToDB.SchemaProvider.ISchemaProvider.GetSchema(LinqToDB.Data.DataConnection%2cLinqToDB.SchemaProvider.GetSchemaOptions)\" data-throw-if-not-resolved=\"false\"></xref> API.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.MergedAccessSchemaProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.MergedAccessSchemaProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.MergedAccessSchemaProvider",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.MergedAccessSchemaProvider.yml\" sourcestartlinenumber=\"1\">Implements schema provider for MS Access, that takes schema from OLE DB and ODBC providers and merge it into single schema\nwithout errors, existing in both providers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.Parameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.Parameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.Parameter",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.Parameter.yml\" sourcestartlinenumber=\"1\">Function or procedure parameter descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.ParameterDirection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.ParameterDirection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.ParameterDirection",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.ParameterDirection.yml\" sourcestartlinenumber=\"1\">Function or procedure parameter direction.\nUsually applies to procedures only as most of databases support only input parameters for functions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.PrimaryKey.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.PrimaryKey.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.PrimaryKey",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.PrimaryKey.yml\" sourcestartlinenumber=\"1\">Table primary key constraint descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.Result.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.Result.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.Result",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.Result.yml\" sourcestartlinenumber=\"1\">Base function result descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.ResultColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.ResultColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.ResultColumn",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.ResultColumn.yml\" sourcestartlinenumber=\"1\">Column descriptor for table function or procedure result set.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.ResultKind.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.ResultKind.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.ResultKind",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.ResultKind.yml\" sourcestartlinenumber=\"1\">Type of scalar result for function or procedure.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.ScalarFunction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.ScalarFunction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.ScalarFunction",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.ScalarFunction.yml\" sourcestartlinenumber=\"1\">Scalar function descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.ScalarResult.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.ScalarResult.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.ScalarResult",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.ScalarResult.yml\" sourcestartlinenumber=\"1\">Scalar return value descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.SchemaObjects.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.SchemaObjects.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.SchemaObjects",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.SchemaObjects.yml\" sourcestartlinenumber=\"1\">Defines loadable database objects.\nUsed to specify types of database objects that should be loaded from schema.\nDoesn't include dependent objects like parameters or columns.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.Sequence.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.Sequence.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.Sequence",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.Sequence.yml\" sourcestartlinenumber=\"1\">Sequence definition.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.SqlServerDatabaseOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.SqlServerDatabaseOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.SqlServerDatabaseOptions",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.SqlServerDatabaseOptions.yml\" sourcestartlinenumber=\"1\">SQL Server database-specific scaffold options.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.StoredProcedure.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.StoredProcedure.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.StoredProcedure",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.StoredProcedure.yml\" sourcestartlinenumber=\"1\">Stored procedure descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.Table.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.Table.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.Table",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.Table.yml\" sourcestartlinenumber=\"1\">Table descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.TableFunction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.TableFunction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.TableFunction",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.TableFunction.yml\" sourcestartlinenumber=\"1\">Table function descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.TableLikeObject.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.TableLikeObject.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.TableLikeObject",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.TableLikeObject.yml\" sourcestartlinenumber=\"1\">Queryable table-like object descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.TupleResult.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.TupleResult.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.TupleResult",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.TupleResult.yml\" sourcestartlinenumber=\"1\">Tuple-like return type descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.TypeMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.TypeMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.TypeMapping",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.TypeMapping.yml\" sourcestartlinenumber=\"1\">Type mapping information.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.View.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.View.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.View",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.View.yml\" sourcestartlinenumber=\"1\">View descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.VoidResult.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.VoidResult.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema.VoidResult",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Schema.VoidResult.yml\" sourcestartlinenumber=\"1\">Void return type descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Schema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Schema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Schema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Activity.ActivityHierarchy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Activity.ActivityHierarchy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Activity.ActivityHierarchy",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Tools.Activity.ActivityHierarchy.yml\" sourcestartlinenumber=\"1\">Collects LinqToDB call hierarchy information.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Activity.ActivityStatistics.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Activity.ActivityStatistics.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Activity.ActivityStatistics",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Tools.Activity.ActivityStatistics.yml\" sourcestartlinenumber=\"1\">Collects LinqToDB call statistics.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Activity.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Activity.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Activity",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Comparers.ComparerBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Comparers.ComparerBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Comparers.ComparerBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Tools.Comparers.ComparerBuilder.yml\" sourcestartlinenumber=\"1\">Builds comparer functions and comparers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Comparers.IgnoreComparisonAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Comparers.IgnoreComparisonAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Comparers.IgnoreComparisonAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Comparers.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Comparers.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Comparers",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityDatabasesCluster.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityDatabasesCluster.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityDatabasesCluster",
      "Summary": "<p><strong>sys.availability_databases_cluster (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each availability database on the instance of SQL Server that is hosting an availability replica for any Always On availability group in the Windows Server Failover Clustering (WSFC) cluster, regardless of whether the local copy database has been joined to the availability group yet.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nWhen a database is added to an availability group, the primary database is automatically joined to the group. Secondary databases must be prepared on each secondary replica before they can be joined to the availability group. <br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-databases-cluster-transact-sql\">sys.availability_databases_cluster</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroup",
      "Summary": "<p><strong>sys.availability_groups (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each availability group for which the local instance of SQL Server hosts an availability replica. Each row contains a cached copy of the availability group metadata.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-groups-transact-sql\">sys.availability_groups</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroupListener.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroupListener.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroupListener",
      "Summary": "<p><strong>sys.availability_group_listeners (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>For each Always On availability group, returns either zero rows indicating that no network name is associated with the availability group, or returns a row for each availability-group listener configuration in the Windows Server Failover Clustering (WSFC) cluster. This view displays the real-time configuration gathered from cluster.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nThis catalog view does not describe details of an IP configuration, that was defined in the WSFC cluster.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-group-listeners-transact-sql\">sys.availability_group_listeners</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroupListenerIpAddress.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroupListenerIpAddress.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroupListenerIpAddress",
      "Summary": "<p><strong>sys.availability_group_listener_ip_addresses (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for every IP address that is associated with any Always On availability group listener in the Windows Server Failover Clustering (WSFC) cluster.<br>\n Primary key:  <strong>listener_id</strong> + <strong>ip_address</strong> + <strong>ip_sub_mask</strong></p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-group-listener-ip-addresses-transact-sql\">sys.availability_group_listener_ip_addresses</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroupsCluster.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroupsCluster.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityGroupsCluster",
      "Summary": "<p><strong>sys.availability_groups_cluster (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each Always On availability group in the Windows Server Failover Clustering (WSFC) . Each row contains the availability group metadata from the WSFC cluster.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-groups-cluster-transact-sql\">sys.availability_groups_cluster</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityReadOnlyRoutingList.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityReadOnlyRoutingList.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityReadOnlyRoutingList",
      "Summary": "<p><strong>sys.availability_read_only_routing_lists (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for the read only routing list of each availability replica in an Always On availability group in the WSFC failover cluster.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-read-only-routing-lists-transact-sql\">sys.availability_read_only_routing_lists</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityReplica.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityReplica.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.AvailabilityReplica",
      "Summary": "<p><strong>sys.availability_replicas (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each of the availability replicas that belong to any Always On availability group in the WSFC failover cluster.<br>\nIf the local server instance is unable to talk to the WSFC failover cluster, for example because the cluster is down or quorum has been lost, only rows for local availability replicas are returned. These rows will contain only the columns of data that are cached locally in metadata.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-replicas-transact-sql\">sys.availability_replicas</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AvailabilitySchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.BandwidthUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.BandwidthUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.BandwidthUsage",
      "Summary": "<p><strong>sys.bandwidth_usage (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p><div class=\"NOTE\"><h5>note</h5><p><br>\nThis applies only to Azure SQL DatabaseV11.<br>\n</p></div><br>\n Returns information about the network bandwidth used by each database in a <strong>Azure SQL Database V11 database server</strong>, . Each row returned for a given database summarizes a single direction and class of usage over a one-hour period.<br>\n <strong>This has been deprecated in a Azure SQL Database.</strong><br>\n The <strong>sys.bandwidth_usage</strong> view contains the following columns.<br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-bandwidth-usage-azure-sql-database\">sys.bandwidth_usage</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseConnectionStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseConnectionStat.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseConnectionStat",
      "Summary": "<p><strong>sys.database_connection_stats (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database</p>\n<p>Contains statistics for SQL Database database <strong>connectivity</strong> events, providing an overview of database connection successes and failures. For more information about connectivity events, see Event Types in <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-log-azure-sql-database\">sys.event_log (Azure SQL Database)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-connection-stats-azure-sql-database\">sys.database_connection_stats</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseFirewallRule.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseFirewallRule.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseFirewallRule",
      "Summary": "<p><strong>sys.database_firewall_rules (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns information about the database-level firewall settings associated with your Microsoft Azure SQL Database. Database-level firewall settings are particularly useful when using contained database users. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/security/contained-database-users-making-your-database-portable\">Contained Database Users - Making Your Database Portable</a>.<br>\n The <code>sys.database_firewall_rules</code> view contains the following columns:</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-firewall-rules-azure-sql-database\">sys.database_firewall_rules</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseServiceObjective.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseServiceObjective.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseServiceObjective",
      "Summary": "<p><strong>sys.database_service_objectives (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Returns the edition (service tier), service objective (pricing tier) and elastic pool name, if any, for an Azure SQL database or an Azure Synapse Analytics. If logged on to the master database in an Azure SQL Database server, returns information on all databases. For Azure Synapse Analytics, you must be connected to the master database.<br>\n<br>\n For information on pricing, see <a href=\"https://azure.microsoft.com/pricing/details/sql-database/\">SQL Database options and performance: SQL Database Pricing</a> and <a href=\"https://azure.microsoft.com/pricing/details/sql-data-warehouse/\">Azure Synapse Analytics Pricing</a>.<br>\n To change the service settings, see <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql\">ALTER DATABASE (Azure SQL Database)</a> and <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql?view=azure-sqldw-latest&amp;preserve-view=true\">ALTER DATABASE (Azure Synapse Analytics)</a>.<br>\n The sys.database_service_objectives view contains the following columns.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-service-objectives-azure-sql-database\">sys.database_service_objectives</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.DatabaseUsage",
      "Summary": "<p><strong>sys.database_usage (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p><strong>Note: This applies only to Azure SQL Database V11.</strong><br>\n Lists the number, type, and duration of databases on the SQL Database server.<br>\n The <strong>sys.database_usage</strong> view contains the following columns.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-usage-azure-sql-database\">sys.database_usage</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ElasticPoolResourceStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ElasticPoolResourceStat.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ElasticPoolResourceStat",
      "Summary": "<p><strong>sys.elastic_pool_resource_stats (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns resource usage statistics for all the elastic pools in a SQL Database server. For each elastic pool, there is one row for each 15 second reporting window (four rows per minute). This includes CPU, IO, Log, storage consumption and concurrent request/session utilization by all databases in the pool. This data is retained for 14 days. <br>\n||<br>\n|-|<br>\n|<strong>Applies to</strong>:  SQL Database V12.|</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-elastic-pool-resource-stats-azure-sql-database\">sys.elastic_pool_resource_stats</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.EventLog.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.EventLog.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.EventLog",
      "Summary": "<p><strong>sys.event_log (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database</p>\n<p>Returns successful Azure SQL Database database connections, connection failures, and deadlocks. You can use this information to track or troubleshoot your database activity with SQL Database.<br>\n> [!CAUTION]<br>\n> For installations having a large number of databases or high numbers of logins, activity in sys.event_log can cause limitations in performance, high CPU usage, and possibly result in login failures. Queries of sys.event_log can contribute to the problem. Microsoft is working to resolve this issue. In the meantime, to reduce the impact of this issue, limit queries of sys.event_log. Users of the NewRelic SQL Server plugin should visit <a href=\"https://discuss.newrelic.com/t/microsoft-azure-sql-database-plugin-tuning-performance-tweaks/30729\">Microsoft Azure SQL Database plugin tuning &amp; performance tweaks</a> for additional configuration information.<br>\n The <code>sys.event_log</code> view contains the following columns.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-log-azure-sql-database\">sys.event_log</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.FirewallRule.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.FirewallRule.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.FirewallRule",
      "Summary": "<p><strong>sys.firewall_rules (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns information about the server-level firewall settings associated with your Microsoft Azure SQL Database.<br>\n The <code>sys.firewall_rules</code> view contains the following columns:</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-firewall-rules-azure-sql-database\">sys.firewall_rules</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ResourceStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ResourceStat.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ResourceStat",
      "Summary": "<p><strong>sys.resource_stats (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database</p>\n<p>Returns CPU usage and storage data for an Azure SQL Database. The data is collected and aggregated within five-minute intervals. For each user database, there is one row for every five-minute reporting window in which there is a change in resource consumption. The data returned includes CPU usage, storage size change, and database SKU modification. Idle databases with no changes may not have rows for every five-minute interval. Historical data is retained for approximately 14 days.<br>\n The <code>sys.resource_stats</code> view has different definitions depending on the version of the Azure SQL Database Server that the database is associated with. Consider these differences and any modifications your application requires when upgrading to a new server version.<br>\n <br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nThis dynamic management view applies to Azure SQL Database only. For an equivalent view for Azure SQL Managed Instance, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-resource-stats-azure-sql-database\">sys.server_resource_stats</a>.<br>\n</p></div><br>\n The following table describes the columns available in a v12 server:<br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-stats-azure-sql-database\">sys.resource_stats</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ResourceUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ResourceUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ResourceUsage",
      "Summary": "<p><strong>sys.resource_usage (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p><br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis feature is in a preview state. Do not take a dependency on the specific implementation of this feature because the feature might be changed or removed in a future release.<br>\nWhile in a preview state, the Azure SQL Database operations team might turn data collection off and on for this DMV:<br>\n-   When turned on, the DMV returns current data as it is aggregated.<br>\n-   When turned off, the DMV returns historical data, which might be stale.<br>\n</p></div><br>\n Provides hourly summary of resource usage data for user databases in the current server. Historical data is retained for 90 days.<br>\n For each user database, there is one row for every hour in continuous fashion. Even if the database was idle during that hour, there is one row, and the usage_in_seconds value for that database will be 0. Storage usage and SKU information is rolled up for the hour appropriately.<br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-usage-azure-sql-database\">sys.resource_usage</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ServerResourceStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ServerResourceStat.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.ServerResourceStat",
      "Summary": "<p><strong>sys.server_resource_stats (Azure SQL Managed Instance)</strong></p>\n√ Azure SQL Managed Instance<br>\nReturns CPU usage, IO, and storage data for Azure SQL Managed Instance. The data is collected, aggregated and updated within 5 to 10 minutes intervals. There is one row for every 15 seconds reporting. The data returned includes CPU usage, storage size, IO utilization, and SKU. Historical data is retained for approximately 14 days.<br>\nThe <code>sys.server_resource_stats</code> view has different definitions depending on the version of the Azure SQL Managed Instance that the database is associated with. Consider these differences and any modifications your application requires when upgrading to a new server version.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nThis dynamic management view applies to Azure SQL Managed Instance only. For an equivalent view for Azure SQL Database, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-stats-azure-sql-database\">sys.resource_stats</a>.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-resource-stats-azure-sql-database\">sys.server_resource_stats</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSQLDatabaseSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.ColumnDistributionProperty.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.ColumnDistributionProperty.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.ColumnDistributionProperty",
      "Summary": "<p><strong>sys.pdw_column_distribution_properties (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Holds distribution information for columns.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-column-distribution-properties-transact-sql\">sys.pdw_column_distribution_properties</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DatabaseMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DatabaseMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DatabaseMapping",
      "Summary": "<p><strong>sys.pdw_database_mappings (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Maps the <strong>database_id</strong>s of databases to the physical name used on Compute nodes, and provides the <strong>principal id</strong> of the database owner on the system. Join <strong>sys.pdw_database_mappings</strong> to <strong>sys.databases</strong> and <strong>sys.pdw_nodes_pdw_physical_databases</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-database-mappings-transact-sql\">sys.pdw_database_mappings</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DiagEvent.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DiagEvent.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DiagEvent",
      "Summary": "<p><strong>sys.pdw_diag_events (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Holds information about events that can be included in diagnostic sessions on the system.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-diag-events-transact-sql\">sys.pdw_diag_events</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DiagEventProperty.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DiagEventProperty.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DiagEventProperty",
      "Summary": "<p><strong>sys.pdw_diag_event_properties (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Holds information about which properties are associated with diagnostic events.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-diag-event-properties-transact-sql\">sys.pdw_diag_event_properties</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DiagSession.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DiagSession.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.DiagSession",
      "Summary": "<p><strong>sys.pdw_diag_sessions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Holds information regarding the various diagnostic sessions that have been created on the system.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-diag-sessions-transact-sql\">sys.pdw_diag_sessions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.Distribution.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.Distribution.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.Distribution",
      "Summary": "<p><strong>sys.pdw_distributions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Holds information about the distributions on the appliance. It lists one row per appliance distribution.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-distributions-transact-sql\">sys.pdw_distributions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthAlert.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthAlert.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthAlert",
      "Summary": "<p><strong>sys.pdw_health_alerts (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Stores properties for the different alerts that can occur on the system; this is a catalog table for alerts.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-alerts-transact-sql\">sys.pdw_health_alerts</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponent.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponent.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponent",
      "Summary": "<p><strong>sys.pdw_health_components (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Stores information about all components and devices that exist in the system. These include hardware, storage devices, and network devices.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-components-transact-sql\">sys.pdw_health_components</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponentGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponentGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponentGroup",
      "Summary": "<p><strong>sys.pdw_health_component_groups (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Stores information about logical groupings of components and devices.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-component-groups-transact-sql\">sys.pdw_health_component_groups</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponentProperty.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponentProperty.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponentProperty",
      "Summary": "<p><strong>sys.pdw_health_component_properties (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Stores properties that describe a device. Some properties show device status and some properties describe the device itself.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-component-properties-transact-sql\">sys.pdw_health_component_properties</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponentStatusMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponentStatusMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.HealthComponentStatusMapping",
      "Summary": "<p><strong>sys.pdw_health_component_status_mappings (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Defines the mapping between the Microsoft Azure Synapse Analytics component statuses and the manufacturer-defined component names.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-component-status-mappings-transact-sql\">sys.pdw_health_component_status_mappings</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.IndexMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.IndexMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.IndexMapping",
      "Summary": "<p><strong>sys.pdw_index_mappings (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Maps the logical indexes to the physical name used on Compute nodes as reflected by a unique combination of <strong>object_id</strong> of the table holding the index and the <strong>index_id</strong> of a particular index within that table.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-index-mappings-transact-sql\">sys.pdw_index_mappings</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.LoaderBackupRun.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.LoaderBackupRun.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.LoaderBackupRun",
      "Summary": "<p><strong>sys.pdw_loader_backup_runs (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains information about ongoing and completed backup and restore operations in Azure Synapse Analytics, and about ongoing and completed backup, restore, and load operations in Analytics Platform System (PDW). The information persists across system restarts.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-loader-backup-runs-transact-sql\">sys.pdw_loader_backup_runs</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.LoaderBackupRunDetail.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.LoaderBackupRunDetail.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.LoaderBackupRunDetail",
      "Summary": "<p><strong>sys.pdw_loader_backup_run_details (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains further detailed information, beyond the information in <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-loader-backup-runs-transact-sql\">sys.pdw_loader_backup_runs (Transact-SQL)</a>, about ongoing and completed backup and restore operations in Azure Synapse Analytics and about ongoing and completed backup, restore, and load operations in Analytics Platform System (PDW). The information persists across system restarts.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-loader-backup-run-details-transact-sql\">sys.pdw_loader_backup_run_details</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.LoaderRunStage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.LoaderRunStage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.LoaderRunStage",
      "Summary": "<p><strong>sys.pdw_loader_run_stages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Contains information about ongoing and completed load operations in Analytics Platform System (PDW). The information persists across system restarts.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-loader-run-stages-transact-sql\">sys.pdw_loader_run_stages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.MaterializedViewColumnDistributionProperty.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.MaterializedViewColumnDistributionProperty.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.MaterializedViewColumnDistributionProperty",
      "Summary": "<p><strong>sys.pdw_materialized_view_column_distribution_properties (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics</p>\n<p>Displays distribution information for columns in a materialized view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-materialized-view-column-distribution-properties-transact-sql\">sys.pdw_materialized_view_column_distribution_properties</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.MaterializedViewDistributionProperty.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.MaterializedViewDistributionProperty.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.MaterializedViewDistributionProperty",
      "Summary": "<p><strong>sys.pdw_materialized_view_distribution_properties (Transact-SQL) (preview)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics</p>\n<p>Displays distribution information materialized views.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-materialized-view-distribution-properties-transact-sql\">sys.pdw_materialized_view_distribution_properties</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.MaterializedViewMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.MaterializedViewMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.MaterializedViewMapping",
      "Summary": "<p><strong>sys.pdw_materialized_view_mappings (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics</p>\n<p>Ties the materialized view to internal object names by object_id.<br>\nThe columns physical_name and object_id form the key for this catalog view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-materialized-view-mappings-transact-sql\">sys.pdw_materialized_view_mappings</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumn",
      "Summary": "<p><strong>sys.pdw_nodes_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Shows columns for user-defined tables and user-defined views.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-columns-transact-sql\">sys.pdw_nodes_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumnStoreDictionary.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumnStoreDictionary.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumnStoreDictionary",
      "Summary": "<p><strong>sys.pdw_nodes_column_store_dictionaries (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each dictionary used in columnstore indexes. Dictionaries are used to encode some, but not all data types, therefore not all columns in a columnstore index have dictionaries. A dictionary can exist as a primary dictionary (for all segments) and possibly for other secondary dictionaries used for a subset of the column's segments.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-column-store-dictionaries-transact-sql\">sys.pdw_nodes_column_store_dictionaries</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumnStoreRowGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumnStoreRowGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumnStoreRowGroup",
      "Summary": "<p><strong>sys.pdw_nodes_column_store_row_groups (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Provides clustered columnstore index information on a per-segment basis to help the administrator make system management decisions in Azure Synapse Analytics. <strong>sys.pdw_nodes_column_store_row_groups</strong> has a column for the total number of rows physically stored (including those marked as deleted) and a column for the number of rows marked as deleted. Use <strong>sys.pdw_nodes_column_store_row_groups</strong> to determine which row groups have a high percentage of deleted rows and should be rebuilt.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-column-store-row-groups-transact-sql\">sys.pdw_nodes_column_store_row_groups</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumnStoreSegment.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumnStoreSegment.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesColumnStoreSegment",
      "Summary": "<p><strong>sys.pdw_nodes_column_store_segments (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each column in a columnstore index.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-column-store-segments-transact-sql\">sys.pdw_nodes_column_store_segments</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesIndex.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesIndex.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesIndex",
      "Summary": "<p><strong>sys.pdw_nodes_indexes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns indexes for Azure Synapse Analytics.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-indexes-transact-sql\">sys.pdw_nodes_indexes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesPartition.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesPartition.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesPartition",
      "Summary": "<p><strong>sys.pdw_nodes_partitions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each partition of all the tables, and most types of indexes in a Azure Synapse Analytics database. All tables and indexes contain at least one partition, whether or not they are explicitly partitioned.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-partitions-transact-sql\">sys.pdw_nodes_partitions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesPhysicalDatabase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesPhysicalDatabase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesPhysicalDatabase",
      "Summary": "<p><strong>sys.pdw_nodes_pdw_physical_databases (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each physical database on a compute node. Aggregate physical database information to get detailed information about databases. To combine information, join the <code>sys.pdw_nodes_pdw_physical_databases</code> to the <code>sys.pdw_database_mappings</code> and <code>sys.databases</code> tables.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-pdw-physical-databases-transact-sql\">sys.pdw_nodes_pdw_physical_databases</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.NodesTable",
      "Summary": "<p><strong>sys.pdw_nodes_tables (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each table object that a principal either owns or on which the principal has been granted some permission.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-tables-transact-sql\">sys.pdw_nodes_tables</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.PermanentTableMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.PermanentTableMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.PermanentTableMapping",
      "Summary": "<p><strong>sys.pdw_permanent_table_mappings (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics</p>\n<p>Ties permanent user tables to internal object names by <strong>object_id</strong>.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\n<strong>sys.pdw_permanent_table_mappings</strong> holds mappings to permanent tables and does not include temporary or external table mappings.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-permanent-table-mappings-transact-sql\">sys.pdw_permanent_table_mappings</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.ReplicatedTableCacheState.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.ReplicatedTableCacheState.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.ReplicatedTableCacheState",
      "Summary": "<p><strong>sys.pdw_replicated_table_cache_state (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics</p>\n<p>Returns the state of the cache associated with a replicated table by <strong>object_id</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-replicated-table-cache-state-transact-sql\">sys.pdw_replicated_table_cache_state</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.TableDistributionProperty.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.TableDistributionProperty.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.TableDistributionProperty",
      "Summary": "<p><strong>sys.pdw_table_distribution_properties (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Holds distribution information for tables.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-table-distribution-properties-transact-sql\">sys.pdw_table_distribution_properties</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.TableMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.TableMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.TableMapping",
      "Summary": "<p><strong>sys.pdw_table_mappings (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Ties user tables to internal object names by <strong>object_id</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-table-mappings-transact-sql\">sys.pdw_table_mappings</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.WorkloadManagementWorkloadClassifier.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.WorkloadManagementWorkloadClassifier.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.WorkloadManagementWorkloadClassifier",
      "Summary": "<p><strong>sys.workload_management_workload_classifiers (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics</p>\n<p> Returns details for workload classifiers.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-workload-management-workload-classifiers-transact-sql\">sys.workload-management-workload-classifiers</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.WorkloadManagementWorkloadClassifierDetail.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.WorkloadManagementWorkloadClassifierDetail.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.WorkloadManagementWorkloadClassifierDetail",
      "Summary": "<p><strong>sys.workload_management_workload_classifier_details (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure Synapse Analytics</p>\n<p>Returns details for each classifier.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-workload-management-workload-classifier-details-transact-sql\">sys.workload-management-workload-classifier-details</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.AzureSynapseAnalyticsSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.Assembly.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.Assembly.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.Assembly",
      "Summary": "<p><strong>sys.assemblies (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns a row for each assembly.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assemblies-transact-sql\">sys.assemblies</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.AssemblyFile.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.AssemblyFile.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.AssemblyFile",
      "Summary": "<p><strong>sys.assembly_files (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each file that makes up an assembly.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assembly-files-transact-sql\">sys.assembly_files</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.AssemblyReference.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.AssemblyReference.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.AssemblyReference",
      "Summary": "<p><strong>sys.assembly_references (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each pair of assemblies where one is directly referencing another.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assembly-references-transact-sql\">sys.assembly_references</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.TrustedAssembly.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.TrustedAssembly.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.TrustedAssembly",
      "Summary": "<p><strong>sys.trusted_assemblies (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2017 (14.x) and later</p>\n<p>Contains a row for each trusted assembly for the server.<br>\n <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/language-elements/transact-sql-syntax-conventions-transact-sql\">Transact-SQL Syntax Conventions</a></p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trusted-assemblies-transact-sql\">sys.trusted_assemblies</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CLRAssemblySchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.ChangeTrackingDatabase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.ChangeTrackingDatabase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.ChangeTrackingDatabase",
      "Summary": "<p><strong>Change Tracking Catalog Views - sys.change_tracking_databases</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each database that has change tracking enabled.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/change-tracking-catalog-views-sys-change-tracking-databases\">sys.change_tracking_databases</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.ChangeTrackingTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.ChangeTrackingTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.ChangeTrackingTable",
      "Summary": "<p><strong>Change Tracking Catalog Views - sys.change_tracking_tables</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each table in the current database that has change tracking enabled.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/change-tracking-catalog-views-sys-change-tracking-tables\">sys.change_tracking_tables</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ChangeTrackingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.AltFile.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.AltFile.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.AltFile",
      "Summary": "<p><strong>sys.sysaltfiles (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Under special circumstances, contains rows corresponding to the files in a database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysaltfiles-transact-sql\">sys.sysaltfiles</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.CacheObject.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.CacheObject.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.CacheObject",
      "Summary": "<p><strong>sys.syscacheobjects (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about how the cache is used.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syscacheobjects-transact-sql\">sys.syscacheobjects</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Charset.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Charset.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Charset",
      "Summary": "<p><strong>sys.syscharsets (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains one row for each character set and sort order defined for use by the SQL Server Database Engine. One of the sort orders is marked in <strong>sysconfigures</strong> as the default sort order. This is the only one actually being used.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syscharsets-transact-sql\">sys.syscharsets</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Column.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Column.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Column",
      "Summary": "<p><strong>sys.syscolumns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for every column in every table and view, and a row for each parameter in a stored procedure in the database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syscolumns-transact-sql\">sys.syscolumns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Comment.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Comment.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Comment",
      "Summary": "<p><strong>sys.syscomments (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains entries for each view, rule, default, trigger, CHECK constraint, DEFAULT constraint, and stored procedure within the database. The <strong>text</strong> column contains the original SQL definition statements.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. We recommend that you use sys.sql_modules instead. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-modules-transact-sql\">sys.sql_modules (Transact-SQL)</a>.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syscomments-transact-sql\">sys.syscomments</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Configure.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Configure.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Configure",
      "Summary": "<p><strong>sys.sysconfigures (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each configuration option set by a user. <strong>sysconfigures</strong> contains the configuration options that are defined before the most recent startup of SQL Server, plus any dynamic configuration options set since then.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysconfigures-transact-sql\">sys.sysconfigures</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Constraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Constraint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Constraint",
      "Summary": "<p><strong>sys.sysconstraints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains mappings of constraints to the objects that own the constraints within the database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysconstraints-transact-sql\">sys.sysconstraints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.CurConfig.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.CurConfig.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.CurConfig",
      "Summary": "<p><strong>sys.syscurconfigs (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains an entry for each current configuration option. Also, this view contains four entries that describe the configuration structure. <strong>syscurconfigs</strong> is built dynamically when queried by a user. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysconfigures-transact-sql\">sys.sysconfigures (Transact-SQL)</a>.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syscurconfigs-transact-sql\">sys.syscurconfigs</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Database.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Database.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Database",
      "Summary": "<p><strong>sys.sysdatabases (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains one row for each database in an instance of Microsoft SQL Server. When SQL Server is first installed, <strong>sysdatabases</strong> contains entries for the <strong>master</strong>, <strong>model</strong>, <strong>msdb</strong>, and <strong>tempdb</strong> databases.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysdatabases-transact-sql\">sys.sysdatabases</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Depend.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Depend.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Depend",
      "Summary": "<p><strong>sys.sysdepends (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains dependency information between objects (views, procedures, and triggers) in the database, and the objects (tables, views, and procedures) that are contained in their definition.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysdepends-transact-sql\">sys.sysdepends</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Device.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Device.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Device",
      "Summary": "<p><strong>sys.sysdevices (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each disk backup file, tape backup file, and database file.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysdevices-transact-sql\">sys.sysdevices</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.ETable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.ETable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.ETable",
      "Summary": "<p><strong>sys.systypes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each system-supplied and each user-defined data type defined in the database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-systypes-transact-sql\">sys.systypes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.File.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.File.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.File",
      "Summary": "<p><strong>sys.sysfiles (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each file in a database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysfiles-transact-sql\">sys.sysfiles</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.FileGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.FileGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.FileGroup",
      "Summary": "<p><strong>sys.sysfilegroups (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each file group in a database. There is at least one entry in this table that is for the primary file group.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysfilegroups-transact-sql\">sys.sysfilegroups</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.ForeignKey.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.ForeignKey.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.ForeignKey",
      "Summary": "<p><strong>sys.sysforeignkeys (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about the FOREIGN KEY constraints that are in the definitions of tables in the database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysforeignkeys-transact-sql\">sys.sysforeignkeys</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.FullTextCatalog.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.FullTextCatalog.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.FullTextCatalog",
      "Summary": "<p><strong>sys.sysfulltextcatalogs (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Analytics Platform System (PDW)</p>\n<p>Contains information about the full-text catalogs.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysfulltextcatalogs-transact-sql\">sys.sysfulltextcatalogs</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Index.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Index.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Index",
      "Summary": "<p><strong>sys.sysindexes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each index and table in the current database. XML indexes are not supported in this view. Partitioned tables and indexes are not fully supported in this view; use the <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql\">sys.indexes</a> catalog view instead.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysindexes-transact-sql\">sys.sysindexes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.IndexKey.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.IndexKey.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.IndexKey",
      "Summary": "<p><strong>sys.sysindexkeys (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about the keys or columns in an index of the database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysindexkeys-transact-sql\">sys.sysindexkeys</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Language.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Language.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Language",
      "Summary": "<p><strong>sys.syslanguages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains one row for each language present in the instance of SQL Server.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syslanguages-transact-sql\">sys.syslanguages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.LockInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.LockInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.LockInfo",
      "Summary": "<p><strong>sys.syslockinfo (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about all granted, converting, and waiting lock requests.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis feature has changed from earlier versions of SQL Server. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/database-engine/breaking-changes-to-database-engine-features-in-sql-server-2016\">Breaking Changes to Database Engine Features in SQL Server 2016</a>.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syslockinfo-transact-sql\">sys.syslockinfo</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Login.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Login.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Login",
      "Summary": "<p><strong>sys.syslogins (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each login account.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<strong>Applies to</strong>: SQL Server ( SQL Server 2008 through [current version](/troubleshoot/sql/general/determine-version-edition-update-level)).<br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syslogins-transact-sql\">sys.syslogins</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Member.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Member.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Member",
      "Summary": "<p><strong>sys.sysmembers (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each member of a database role.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysmembers-transact-sql\">sys.sysmembers</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Message.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Message.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Message",
      "Summary": "<p><strong>sys.sysmessages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each system error or warning that can be returned by the SQL Server Database Engine. The Database Engine displays the error description on the user's screen.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysmessages-transact-sql\">sys.sysmessages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Object.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Object.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Object",
      "Summary": "<p><strong>sys.sysobjects (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains one row for each object that is created within a database, such as a constraint, default, log, rule, and stored procedure.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysobjects-transact-sql\">sys.sysobjects</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.OleDBUser.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.OleDBUser.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.OleDBUser",
      "Summary": "<p><strong>sys.sysoledbusers (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p><br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 (8.x) system table is included in SQL Server as a view for backward compatibility only. We recommend that you use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/catalog-views-transact-sql\">catalog views</a> instead.<br>\n</p></div><br>\n Contains one row for each user and password mapping for the specified linked server. <strong>sysoledbusers</strong> is stored in the <strong>master</strong> database.<br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysoledbusers-transact-sql\">sys.sysoledbusers</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.PerfInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.PerfInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.PerfInfo",
      "Summary": "<p><strong>sys.sysperfinfo (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a Microsoft SQL Server Database Engine representation of the internal performance counters that can be displayed through the Windows System Monitor.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysperfinfo-transact-sql\">sys.sysperfinfo</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Permission.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Permission.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Permission",
      "Summary": "<p><strong>sys.syspermissions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about permissions granted and denied to users, groups, and roles in the database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syspermissions-transact-sql\">sys.syspermissions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Process.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Process.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Process",
      "Summary": "<p><strong>sys.sysprocesses (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about processes that are running on an instance of SQL Server. These processes can be client processes or system processes. To access sysprocesses, you must be in the master database context, or you must use the master.dbo.sysprocesses three-part name.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysprocesses-transact-sql\">sys.sysprocesses</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Protect.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Protect.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Protect",
      "Summary": "<p><strong>sys.sysprotects (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about permissions that have been applied to security accounts in the database by using the GRANT and DENY statements.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysprotects-transact-sql\">sys.sysprotects</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Reference.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Reference.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Reference",
      "Summary": "<p><strong>sys.sysreferences (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains mappings of the FOREIGN KEY constraint definitions to the referenced columns within the database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysreferences-transact-sql\">sys.sysreferences</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.RemoteLogin.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.RemoteLogin.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.RemoteLogin",
      "Summary": "<p><strong>sys.sysremotelogins (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each remote user that is permitted to call remote stored procedures on an instance of Microsoft SQL Server.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysremotelogins-transact-sql\">sys.sysremotelogins</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Server.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.Server",
      "Summary": "<p><strong>sys.sysservers (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each server that an instance of SQL Server can access as an OLE DB data source.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysservers-transact-sql\">sys.sysservers</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.User.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.User.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.User",
      "Summary": "<p><strong>sys.sysusers (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains one row for each Microsoft Windows user, Windows group, Microsoft SQL Server user, or SQL Server role in the database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql\">Mapping System Tables to System Views (Transact-SQL)</a>. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysusers-transact-sql\">sys.sysusers</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.CompatibilitySchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.CollectionItem.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.CollectionItem.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.CollectionItem",
      "Summary": "<p><strong>syscollector_collection_items (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns information about an item in a collection set.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-collection-items-transact-sql\">dbo.syscollector_collection_items</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.CollectionSet.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.CollectionSet.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.CollectionSet",
      "Summary": "<p><strong>syscollector_collection_sets (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Provides information about a collection set, including schedule, collection mode, and its state.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-collection-sets-transact-sql\">dbo.syscollector_collection_sets</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.CollectorType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.CollectorType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.CollectorType",
      "Summary": "<p><strong>syscollector_collector_types (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Provides information about a collector type for a collection item.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-collector-types-transact-sql\">dbo.syscollector_collector_types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ConfigStore.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ConfigStore.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ConfigStore",
      "Summary": "<p><strong>syscollector_config_store (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns properties that apply to the entire data collector, as opposed to a collection set instance. Each row in this view describes a specific data collector property, such as the name of the management data warehouse, and the instance name where the management data warehouse is located.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-config-store-transact-sql\">dbo.syscollector_config_store</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ExecutionLog.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ExecutionLog.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ExecutionLog",
      "Summary": "<p><strong>syscollector_execution_log (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Provides information from the execution log for a collection set or package.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-execution-log-transact-sql\">dbo.syscollector_execution_log</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ExecutionLogFull.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ExecutionLogFull.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ExecutionLogFull",
      "Summary": "<p><strong>syscollector_execution_log_full (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Provides information about a collection set or package when the execution log is full.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-execution-log-full-transact-sql\">dbo.syscollector_execution_log_full</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ExecutionStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ExecutionStat.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.ExecutionStat",
      "Summary": "<p><strong>syscollector_execution_stats (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Provides information about task execution for a collection set or package.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-execution-stats-transact-sql\">dbo.syscollector_execution_stats</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataCollectorSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.DataSpace.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.DataSpace.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.DataSpace",
      "Summary": "<p><strong>sys.data_spaces (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each data space. This can be a filegroup, partition scheme, or FILESTREAM data filegroup.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-data-spaces-transact-sql\">sys.data_spaces</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.DestinationDataSpace.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.DestinationDataSpace.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.DestinationDataSpace",
      "Summary": "<p><strong>sys.destination_data_spaces (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each data space destination of a partition scheme.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-destination-data-spaces-transact-sql\">sys.destination_data_spaces</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.FileGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.FileGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.FileGroup",
      "Summary": "<p><strong>sys.filegroups (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each data space that is a filegroup.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-filegroups-transact-sql\">sys.filegroups</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.PartitionScheme.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.PartitionScheme.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.PartitionScheme",
      "Summary": "<p><strong>sys.partition_schemes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each Data Space that is a partition scheme, with <strong>type</strong> = PS.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partition-schemes-transact-sql\">sys.partition_schemes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataSpacesSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataTierApplicationsSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataTierApplicationsSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataTierApplicationsSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataTierApplicationsSchema.Instance.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataTierApplicationsSchema.Instance.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataTierApplicationsSchema.Instance",
      "Summary": "<p><strong>Data-tier Application Views - dbo.sysdac_instances</strong></p>\n <p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Displays one row for each data-tier application (DAC) instance deployed to an instance of the Database Engine. sysdac_instances belongs to the dbo schema in the msdb database. The following table describes the columns in the sysdac_instances view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/data-tier-application-views-dbo-sysdac-instances\">dbo.sysdac_instances</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataTierApplicationsSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataTierApplicationsSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DataTierApplicationsSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.AllItem.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.AllItem.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.AllItem",
      "Summary": "<p><strong>sysmail_allitems (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance</p>\n<p>Contains one row for each message processed by Database Mail. Use this view when you want to see the status of all messages.<br>\n To see only messages with the failed status, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-faileditems-transact-sql\">sysmail_faileditems (Transact-SQL)</a>. To see only unsent messages, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-unsentitems-transact-sql\">sysmail_unsentitems (Transact-SQL)</a>. To see only messages that were sent, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-sentitems-transact-sql\">sysmail_sentitems (Transact-SQL)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-allitems-transact-sql\">dbo.sysmail_allitems</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.EventLog.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.EventLog.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.EventLog",
      "Summary": "<p><strong>sysmail_event_log (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each Windows or SQL Server message returned by the Database Mail system. (Message in this context refers to a message such as an error message, not an e-mail message.) Configure the <strong>Logging Level</strong> parameter by using the <strong>Configure System Parameters</strong> dialog box of the Database Mail Configuration Wizard, or the <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sysmail-configure-sp-transact-sql\">sysmail_configure_sp</a> stored procedure, to determine which messages are returned.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-event-log-transact-sql\">dbo.sysmail_event_log</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.FailedItem.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.FailedItem.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.FailedItem",
      "Summary": "<p><strong>sysmail_faileditems (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each Database Mail message with the <strong>failed</strong> status. Use this view to determine which messages were not successfully sent.<br>\n To see all messages processed by Database Mail, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-allitems-transact-sql\">sysmail_allitems (Transact-SQL)</a>. To see only unsent messages, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-unsentitems-transact-sql\">sysmail_unsentitems (Transact-SQL)</a>. To see only messages that were sent, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-sentitems-transact-sql\">sysmail_sentitems (Transact-SQL)</a>. To view e-mail attachments, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-mailattachments-transact-sql\">sysmail_mailattachments (Transact-SQL)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-faileditems-transact-sql\">dbo.sysmail_faileditems</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.MailAttachment.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.MailAttachment.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.MailAttachment",
      "Summary": "<p><strong>sysmail_mailattachments (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each attachment submitted to Database Mail. Use this view when you want information about Database Mail attachments. To review all e-mails processed by Database Mail use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-allitems-transact-sql\">sysmail_allitems (Transact-SQL)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-mailattachments-transact-sql\">dbo.sysmail_mailattachments</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.SentItem.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.SentItem.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.SentItem",
      "Summary": "<p><strong>sysmail_sentitems (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance</p>\n<p>Contains one row for each message sent by Database Mail. Use <strong>sysmail_sentitems</strong> when you want to see which messages were successfully sent.<br>\n To see all messages processed by Database Mail, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-allitems-transact-sql\">sysmail_allitems (Transact-SQL)</a>. To see only messages with the failed status, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-faileditems-transact-sql\">sysmail_faileditems (Transact-SQL)</a>. To see only unsent or retrying messages, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-unsentitems-transact-sql\">sysmail_unsentitems (Transact-SQL)</a>. To see e-mail attachments, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-mailattachments-transact-sql\">sysmail_mailattachments (Transact-SQL)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-sentitems-transact-sql\">dbo.sysmail_sentitems</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.UnsentItem.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.UnsentItem.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.UnsentItem",
      "Summary": "<p><strong>sysmail_unsentitems (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance</p>\n<p>Contains one row for each Database Mail message with the <strong>unsent</strong> or <strong>retrying</strong> status. Messages with unsent or retrying status are still in the mail queue and may be sent at any time. Messages can have the <strong>unsent</strong> status for the following reasons:<br>\n-   The message is new, and though the message has been placed on the mail queue, Database Mail is working on other messages and has not yet reached this message.<br>\n-   The Database Mail external program is not running and no mail is being sent.<br>\n Messages can have the <strong>retrying</strong> status for the following reasons:<br>\n-   Database Mail has attempted to send the mail, but the SMTP mail server could not be contacted. Database Mail will continue to attempt to send the message using other Database Mail accounts assigned to the profile that sent the message. If no accounts can send the mail, Database Mail will wait for the length of time configured for the <strong>Account Retry Delay</strong> parameter and then attempt to send the message again. Database Mail uses the <strong>Account Retry Attempts</strong> parameter to determine how many times to attempt to send the message. Messages retain <strong>retrying</strong> status as long as Database Mail is attempting to send the message.<br>\n Use this view when you want to see how many messages are waiting to be sent and how long they have been in the mail queue. Normally the number of <strong>unsent</strong> messages will be low. Conduct a benchmark test during normal operations to determine a reasonable number of messages in the message queue for your operations.<br>\n To see all messages processed by Database Mail, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-allitems-transact-sql\">sysmail_allitems (Transact-SQL)</a>. To see only messages with the failed status, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-faileditems-transact-sql\">sysmail_faileditems (Transact-SQL)</a>. To see only messages that were sent, use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-sentitems-transact-sql\">sysmail_sentitems (Transact-SQL)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-unsentitems-transact-sql\">dbo.sysmail_unsentitems</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMailSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMirroringSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMirroringSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMirroringSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMirroringSchema.DatabaseMirroringWitness.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMirroringSchema.DatabaseMirroringWitness.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMirroringSchema.DatabaseMirroringWitness",
      "Summary": "<p><strong>Database Mirroring Witness Catalog Views - sys.database_mirroring_witnesses</strong></p>\n <p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for every witness role that a server plays in a database mirroring partnership. <br>\nIn a database mirroring session, automatic failover requires a witness server. Ideally, the witness resides on a separate computer from both the principal and mirror servers. The witness does not serve the database. Instead, it monitors the status of the principal and mirror servers. If the principal server fails, the witness may initiate automatic failover to the mirror server.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/database-mirroring-witness-catalog-views-sys-database-mirroring-witnesses\">sys.database_mirroring_witnesses</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMirroringSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMirroringSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabaseMirroringSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.BackupDevice.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.BackupDevice.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.BackupDevice",
      "Summary": "<p><strong>sys.backup_devices (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each backup-device registered by using <strong>sp_addumpdevice</strong> or created in SQL Server Management Studio.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-backup-devices-transact-sql\">sys.backup_devices</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.Database.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.Database.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.Database",
      "Summary": "<p><strong>sys.databases (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains one row per database in the instance of SQL Server.<br>\nIf a database is not <code>ONLINE</code>, or <code>AUTO_CLOSE</code> is set to <code>ON</code> and the database is closed, the values of some columns may be <code>NULL</code>. If a database is <code>OFFLINE</code>, the corresponding row is not visible to low-privileged users. To see the corresponding row if the database is <code>OFFLINE</code>, a user must have at least the <code>ALTER ANY DATABASE</code> server-level permission, or the <code>CREATE DATABASE</code> permission in the <code>master</code> database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-databases-transact-sql\">sys.databases</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseAutomaticTuningMode.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseAutomaticTuningMode.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseAutomaticTuningMode",
      "Summary": "<p><strong>sys.database\\_automatic\\_tuning_mode (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2017 (14.x) and later  √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns the Automatic Tuning mode for this database. Refer to <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql-set-options#auto_tuning\">ALTER DATABASE SET AUTOMATIC_TUNING (Transact-SQL)</a> for available options.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-automatic-tuning-mode-transact-sql\">sys.database_automatic_tuning_mode</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseAutomaticTuningOption.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseAutomaticTuningOption.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseAutomaticTuningOption",
      "Summary": "<p><strong>sys.database\\_automatic\\_tuning_options (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2017 (14.x) and later  √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns the Automatic Tuning options for this database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-automatic-tuning-options-transact-sql\">sys.database_automatic_tuning_options</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseFile.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseFile.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseFile",
      "Summary": "<p><strong>sys.database_files (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row per file of a database as stored in the database itself. This is a per-database view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-files-transact-sql\">sys.database_files</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseMirroring.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseMirroring.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseMirroring",
      "Summary": "<p><strong>sys.database_mirroring (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each database in the instance of SQL Server. If the database is not ONLINE or database mirroring is not enabled, the values of all columns except database_id will be NULL.<br>\n To see the row for a database other than master or tempdb, you must either be the database owner or have at least ALTER ANY DATABASE or VIEW ANY DATABASE server-level permission or CREATE DATABASE permission in the master database. To see non-NULL values on a mirror database, you must be a member of the <strong>sysadmin</strong> fixed server role.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nIf a database does not participate in mirroring, all columns prefixed with 'mirroring_' are NULL.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-mirroring-transact-sql\">sys.database_mirroring</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseRecoveryStatus.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseRecoveryStatus.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseRecoveryStatus",
      "Summary": "<p><strong>sys.database_recovery_status (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row per database. If the database is not opened, the SQL Server Database Engine tries to start it.<br>\n To see the row for a database other than <strong>master</strong> or <strong>tempdb</strong>, one of the following must apply:<br>\n-   Be the owner of the database.<br>\n-   Have ALTER ANY DATABASE or VIEW ANY DATABASE server-level permissions.<br>\n-   Have CREATE DATABASE permission in the <strong>master</strong> database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-recovery-status-transact-sql\">sys.database_recovery_status</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseScopedConfiguration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseScopedConfiguration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.DatabaseScopedConfiguration",
      "Summary": "<p><strong>sys.database_scoped_configurations (Transact-SQL)</strong></p>\n<p><strong>APPLIES TO:</strong> (Yes) SQL Server 2016 and later (Yes) Azure SQL Database (Yes) Azure Synapse Analytics (No) Parallel Data Warehouse</p>\n<p>Contains one row per configuration.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-scoped-configurations-transact-sql\">sys.database_scoped_configurations</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.MasterFile.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.MasterFile.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.MasterFile",
      "Summary": "<p><strong>sys.master_files (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Analytics Platform System (PDW)</p>\n<p>Contains a row per file of a database as stored in the master database. This is a single, system-wide view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-master-files-transact-sql\">sys.master_files</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.DatabasesAndFilesSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.DatabaseMirroringEndpoint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.DatabaseMirroringEndpoint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.DatabaseMirroringEndpoint",
      "Summary": "<p><strong>sys.database_mirroring_endpoints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for the database mirroring endpoint of an instance of SQL Server.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nThe database mirroring endpoint supports both sessions between database mirroring partners and with witnesses and sessions between the primary replica of a Always On availability group and its secondary replicas.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-mirroring-endpoints-transact-sql\">sys.database_mirroring_endpoints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.Endpoint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.Endpoint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.Endpoint",
      "Summary": "<p><strong>sys.endpoints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row per endpoint that is created in the system. There is always exactly one SYSTEM endpoint.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-endpoints-transact-sql\">sys.endpoints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.EndpointWebMethod.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.EndpointWebMethod.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.EndpointWebMethod",
      "Summary": "<p><strong>sys.endpoint_webmethods (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n Contains a row FOR EACH SOAP method defined on a SOAP-enabled HTTP endpoint. The combination of the endpoint_id and namespace columns is unique.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-endpoint-webmethods-transact-sql\">sys.endpoint_webmethods</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.HttpEndpoint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.HttpEndpoint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.HttpEndpoint",
      "Summary": "<p><strong>sys.http_endpoints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p> This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\nContains a row for each endpoint created in the server that uses the HTTP protocol.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-http-endpoints-transact-sql\">sys.http_endpoints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.ServiceBrokerEndpoint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.ServiceBrokerEndpoint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.ServiceBrokerEndpoint",
      "Summary": "<p><strong>sys.service_broker_endpoints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view contains one row for the Service Broker endpoint. For every row in this view, there is a corresponding row with the same <strong>endpoint_id</strong> in the <strong>sys.tcp_endpoints</strong> view that contains the TCP configuration metadata. TCP is the only allowed protocol for Service Broker.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-broker-endpoints-transact-sql\">sys.service_broker_endpoints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.SoapEndpoint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.SoapEndpoint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.SoapEndpoint",
      "Summary": "<p><strong>sys.soap_endpoints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.<br>\n Contains one row for each endpoint in the server that carries a SOAP-type payload. For every row in this view, there is a corresponding row with the same <strong>endpoint_id</strong> in the <strong>sys.http_endpoints</strong> catalog view that carries the HTTP configuration metadata.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-soap-endpoints-transact-sql\">sys.soap_endpoints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.TcpEndpoint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.TcpEndpoint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.TcpEndpoint",
      "Summary": "<p><strong>sys.tcp_endpoints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each TCP endpoint that is in the system. The endpoints that are described by <strong>sys.tcp_endpoints</strong> provide an object to grant and revoke the connection privilege. The information that is displayed regarding ports and IP addresses is not used to configure the protocols and may not match the actual protocol configuration. To view and configure protocols, use SQL Server Configuration Manager.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-tcp-endpoints-transact-sql\">sys.tcp_endpoints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.EndpointsSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSession.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSession.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSession",
      "Summary": "<p><strong>sys.database_event_sessions (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Lists all the event session definitions that exist in the current database, in Azure SQL Database.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nThe similar catalog view named <code>sys.server_event_sessions</code> applies only to MicrosoftSQL Server.<br>\n</p></div><br>\n||<br>\n|-|<br>\n|<strong>Applies to</strong>: SQL Database, and to any later versions.|<br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-event-sessions-azure-sql-database\">sys.database_event_sessions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionAction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionAction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionAction",
      "Summary": "<p><strong>sys.database_event_session_actions (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns a row for each action on each event of an event session.<br>\n||<br>\n|-|<br>\n|<strong>Applies to</strong>: Azure SQL Database V12 and any later versions.|</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-event-session-actions-azure-sql-database\">sys.database_event_session_actions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionEvent.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionEvent.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionEvent",
      "Summary": "<p><strong>sys.database_event_session_events (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns a row for each event in an event session.<br>\n||<br>\n|-|<br>\n|<strong>Applies to</strong>: Azure SQL Database V12 and any later versions.|</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-event-session-events-azure-sql-database\">sys.database_event_session_events</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionField.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionField.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionField",
      "Summary": "<p><strong>sys.database_event_session_fields (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns a row for each customizable column that was explicitly set on events and targets.<br>\n||<br>\n|-|<br>\n|<strong>Applies to</strong>: Azure SQL Database V12 and any later versions.|</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-event-session-fields-azure-sql-database\">sys.database_event_session_fields</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionTarget.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionTarget.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.DatabaseEventSessionTarget",
      "Summary": "<p><strong>sys.database_event_session_targets (Azure SQL Database)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns a row for each event target for an event session.<br>\n||<br>\n|-|<br>\n|<strong>Applies to</strong>: Azure SQL Database V12 and any later versions.|</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-event-session-targets-azure-sql-database\">sys.database_event_session_targets</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSession.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSession.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSession",
      "Summary": "<p><strong>sys.server_event_sessions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Lists all the event session definitions that exist in SQL Server.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-sessions-transact-sql\">sys.server_event_sessions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionAction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionAction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionAction",
      "Summary": "<p><strong>sys.server_event_session_actions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each action on each event of an event session.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-session-actions-transact-sql\">sys.server_event_session_actions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionEvent.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionEvent.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionEvent",
      "Summary": "<p><strong>sys.server_event_session_events (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each event in an event session.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-session-events-transact-sql\">sys.server_event_session_events</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionField.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionField.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionField",
      "Summary": "<p><strong>sys.server_event_session_fields (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each customizable column that was explicitly set on events and targets.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-session-fields-transact-sql\">sys.server_event_session_fields</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionTarget.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionTarget.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.ServerEventSessionTarget",
      "Summary": "<p><strong>sys.server_event_session_targets (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each event target for an event session.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-session-targets-transact-sql\">sys.server_event_session_targets</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExtendedEventsSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.ExternalDataSource.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.ExternalDataSource.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.ExternalDataSource",
      "Summary": "<p><strong>sys.external_data_sources (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each external data source in the current database for SQL Server, SQL Database, and Azure Synapse Analytics.<br>\n Contains a row for each external data source on the server for Analytics Platform System (PDW).</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-data-sources-transact-sql\">sys.external_data_sources</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.ExternalFileFormat.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.ExternalFileFormat.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.ExternalFileFormat",
      "Summary": "<p><strong>sys.external_file_formats (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each external file format in the current database for SQL Server, SQL Database, and Azure Synapse Analytics.<br>\n Contains a row for each external file format on the server for Analytics Platform System (PDW).</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-file-formats-transact-sql\">sys.external_file_formats</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.ExternalTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.ExternalTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.ExternalTable",
      "Summary": "<p><strong>sys.external_tables (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each external table in the current database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-tables-transact-sql\">sys.external_tables</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ExternalOperationsSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.DatabaseFilestreamOption.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.DatabaseFilestreamOption.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.DatabaseFilestreamOption",
      "Summary": "<p><strong>sys.database_filestream_options (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Displays information about the level of non-transactional access to FILESTREAM data in FileTables that is enabled. Contains one row for each database in the SQL Server instance.<br>\n For more information about FileTables, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/blob/filetables-sql-server\">FileTables (SQL Server)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-filestream-options-transact-sql\">sys.database_filestream_options</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.FileTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.FileTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.FileTable",
      "Summary": "<p><strong>sys.filetables (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each FileTable in SQL Server. For more information about FileTables, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/blob/filetables-sql-server\">FileTables (SQL Server)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-filetables-transact-sql\">sys.filetables</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.FileTableSystemDefinedObject.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.FileTableSystemDefinedObject.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.FileTableSystemDefinedObject",
      "Summary": "<p><strong>sys.filetable_system_defined_objects (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Displays a list of the system-defined objects that are related to FileTables. Contains one row for each system-defined object.<br>\n When you create a FileTable, related objects such as constraints and indexes are created at the same time. You cannot alter or drop these objects; they disappear only when the FileTable itself is dropped.<br>\n For more information about FileTables, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/blob/filetables-sql-server\">FileTables (SQL Server)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-filetable-system-defined-objects-transact-sql\">sys.filetable_system_defined_objects</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FilestreamAndFileTableSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Catalog.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Catalog.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Catalog",
      "Summary": "<p><strong>sys.fulltext_catalogs (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each full-text catalog.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nThe following columns will be removed in a future release of SQL Server: <strong>data_space_id</strong>, <strong>file_id</strong>, and <strong>path</strong>. Do not use these columns in new development work, and modify applications that currently use any of these columns as soon as possible.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-catalogs-transact-sql\">sys.fulltext_catalogs</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.DocumentType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.DocumentType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.DocumentType",
      "Summary": "<p><strong>sys.fulltext_document_types (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns a row for each document type that is available for full-text indexing operations. Each row represents the IFilter interface that is registered in the instance of SQL Server.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-document-types-transact-sql\">sys.fulltext_document_types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Index.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Index.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Index",
      "Summary": "<p><strong>sys.fulltext_indexes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row per full-text index of a tabular object.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-indexes-transact-sql\">sys.fulltext_indexes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.IndexCatalogUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.IndexCatalogUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.IndexCatalogUsage",
      "Summary": "<p><strong>sys.fulltext_index_catalog_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns a row for each full-text catalog to full-text index reference.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-index-catalog-usages-transact-sql\">sys.fulltext_index_catalog_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.IndexColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.IndexColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.IndexColumn",
      "Summary": "<p><strong>sys.fulltext_index_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row for each column that is part of a full-text index.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-index-columns-transact-sql\">sys.fulltext_index_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.IndexFragment.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.IndexFragment.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.IndexFragment",
      "Summary": "<p><strong>sys.fulltext_index_fragments (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>A fulltext index uses internal tables called *full-text index fragments* to store the inverted index data. This view can be used to query the metadata about these fragments. This view contains a row for each full-text index fragment in every table that contains a full-text index.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-index-fragments-transact-sql\">sys.fulltext_index_fragments</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Language.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Language.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Language",
      "Summary": "<p><strong>sys.fulltext_languages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>This catalog view contains one row per language whose word breakers are registered with SQL Server. Each row displays the LCID and name of the language. When word breakers are registered for a language, its other linguistic resources-stemmers, noise words (stopwords), and thesaurus files-become available to full-text indexing/querying operations. The value of <strong>name</strong> or <strong>lcid</strong> can be specified in the full-text queries and full-text index Transact\\-SQL statements.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-languages-transact-sql\">sys.fulltext_languages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.RegisteredSearchProperty.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.RegisteredSearchProperty.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.RegisteredSearchProperty",
      "Summary": "<p><strong>sys.registered_search_properties (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row for each search property contained by any search property list on the current database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-registered-search-properties-transact-sql\">sys.registered_search_properties</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.RegisteredSearchPropertyList.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.RegisteredSearchPropertyList.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.RegisteredSearchPropertyList",
      "Summary": "<p><strong>sys.registered_search_property_lists (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each search property list on the current database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-registered-search-property-lists-transact-sql\">sys.registered_search_property_lists</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.SemanticLanguage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.SemanticLanguage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.SemanticLanguage",
      "Summary": "<p><strong>sys.fulltext_semantic_languages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each language whose statistics model is registered with the instance of SQL Server. When a language model is registered, that language is enabled for semantic indexing.<br>\n This catalog view is similar to <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-languages-transact-sql\">sys.fulltext_languages (Transact-SQL)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-semantic-languages-transact-sql\">sys.fulltext_semantic_languages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.SemanticLanguageStatisticsDatabase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.SemanticLanguageStatisticsDatabase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.SemanticLanguageStatisticsDatabase",
      "Summary": "<p><strong>sys.fulltext_semantic_language_statistics_database (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row about the semantic language statistics database installed on the current instance of SQL Server.<br>\n You can query this view to find out about the semantic language statistics component required for semantic processing.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-semantic-language-statistics-database-transact-sql\">sys.fulltext_semantic_language_statistics_database</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.StopWord.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.StopWord.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.StopWord",
      "Summary": "<p><strong>sys.fulltext_stopwords (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row per stopword for all stoplists in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-stopwords-transact-sql\">sys.fulltext_stopwords</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Stoplist.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Stoplist.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.Stoplist",
      "Summary": "<p><strong>sys.fulltext_stoplists (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row per full-text stoplist in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-stoplists-transact-sql\">sys.fulltext_stoplists</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.SystemStopWord.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.SystemStopWord.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.SystemStopWord",
      "Summary": "<p><strong>sys.fulltext_system_stopwords (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Provides access to the system stoplist.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-system-stopwords-transact-sql\">sys.fulltext_system_stopwords</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.FullTextSearchSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.CheckConstraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.CheckConstraint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.CheckConstraint",
      "Summary": "<p><strong>CHECK_CONSTRAINTS (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each CHECK constraint in the current database. This information schema view returns information about the objects to which the current user has permissions.<br>\nTo retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/check-constraints-transact-sql\">INFORMATION_SCHEMA.CHECK_CONSTRAINTS</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Column.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Column.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Column",
      "Summary": "<p><strong>COLUMNS (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each column that can be accessed by the current user in the current database.<br>\nTo retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA</strong>_.view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/columns-transact-sql\">INFORMATION_SCHEMA.COLUMNS</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ColumnDomainUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ColumnDomainUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ColumnDomainUsage",
      "Summary": "<p><strong>COLUMN_DOMAIN_USAGE (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each column in the current database that has an alias data type. This information schema view returns information about the objects to which the current user has permissions.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/column-domain-usage-transact-sql\">INFORMATION_SCHEMA.COLUMN_DOMAIN_USAGE</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ColumnPrivilege.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ColumnPrivilege.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ColumnPrivilege",
      "Summary": "<p><strong>COLUMN_PRIVILEGES (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each column that has a privilege that is either granted to or granted by the current user in the current database.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/column-privileges-transact-sql\">INFORMATION_SCHEMA.COLUMN_PRIVILEGES</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ConstraintColumnUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ConstraintColumnUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ConstraintColumnUsage",
      "Summary": "<p><strong>CONSTRAINT_COLUMN_USAGE (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each column in the current database that has a constraint defined on the column. This information schema view returns information about the objects to which the current user has permissions.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/constraint-column-usage-transact-sql\">INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ConstraintTableUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ConstraintTableUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ConstraintTableUsage",
      "Summary": "<p><strong>CONSTRAINT_TABLE_USAGE (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each table in the current database that has a constraint defined on the table. This information schema view returns information about the objects to which the current user has permissions.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/constraint-table-usage-transact-sql\">INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Domain.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Domain.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Domain",
      "Summary": "<p><strong>DOMAINS (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each alias data type that can be accessed by the current user in the current database.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/domains-transact-sql\">INFORMATION_SCHEMA.DOMAINS</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.DomainConstraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.DomainConstraint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.DomainConstraint",
      "Summary": "<p><strong>DOMAIN_CONSTRAINTS (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each alias data type in the current database that has a rule bound to it and that can be accessed by current user.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/domain-constraints-transact-sql\">INFORMATION_SCHEMA.DOMAIN_CONSTRAINTS</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.KeyColumnUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.KeyColumnUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.KeyColumnUsage",
      "Summary": "<p><strong>KEY_COLUMN_USAGE (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each column that is constrained as a key in the current database. This information schema view returns information about the objects to which the current user has permissions.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/key-column-usage-transact-sql\">INFORMATION_SCHEMA.KEY_COLUMN_USAGE</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Parameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Parameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Parameter",
      "Summary": "<p><strong>PARAMETERS (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each parameter of a user-defined function or stored procedure that can be accessed by the current user in the current database. For functions, this view also returns one row with return value information.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/parameters-transact-sql\">INFORMATION_SCHEMA.PARAMETERS</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ReferentialConstraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ReferentialConstraint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ReferentialConstraint",
      "Summary": "<p><strong>REFERENTIAL_CONSTRAINTS (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each FOREIGN KEY constraint in the current database. This information schema view returns information about the objects to which the current user has permissions.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/referential-constraints-transact-sql\">INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Routine.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Routine.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Routine",
      "Summary": "<p><strong>ROUTINES (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each stored procedure and function that can be accessed by the current user in the current database. The columns that describe the return value apply only to functions. For stored procedures, these columns will be NULL.<br>\n To retrieve information from these views, specify the fully qualified name of INFORMATION_SCHEMA.*view_name*.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nThe ROUTINE_DEFINITION column contains the source statements that created the function or stored procedure. These source statements are likely to contain embedded carriage returns. If you are returning this column to an application that displays the results in a text format, the embedded carriage returns in the ROUTINE_DEFINITION results may affect the formatting of the overall result set. If you select the ROUTINE_DEFINITION column, you must adjust for the embedded carriage returns; for example, by returning the result set into a grid or returning ROUTINE_DEFINITION into its own text box.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/routines-transact-sql\">INFORMATION_SCHEMA.ROUTINES</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.RoutineColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.RoutineColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.RoutineColumn",
      "Summary": "<p><strong>ROUTINE_COLUMNS (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each column returned by the table-valued functions that can be accessed by the current user in the current database.<br>\n To retrieve information from this view, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/routine-columns-transact-sql\">INFORMATION_SCHEMA.ROUTINE_COLUMNS</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Schema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Schema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Schema",
      "Summary": "<p><strong>SCHEMATA (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each schema in the current database. To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_. To retrieve information about all databases in an instance of SQL Server, query the <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-databases-transact-sql\">sys.databases (Transact-SQL)</a> catalog view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/schemata-transact-sql\">INFORMATION_SCHEMA.SCHEMATA</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Table.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Table.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.Table",
      "Summary": "<p><strong>TABLES (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each table or view in the current database for which the current user has permissions.<br>\nTo retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/tables-transact-sql\">INFORMATION_SCHEMA.TABLES</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.TableConstraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.TableConstraint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.TableConstraint",
      "Summary": "<p><strong>TABLE_CONSTRAINTS (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each table constraint in the current database. This information schema view returns information about the objects to which the current user has permissions.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/table-constraints-transact-sql\">INFORMATION_SCHEMA.TABLE_CONSTRAINTS</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.TablePrivilege.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.TablePrivilege.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.TablePrivilege",
      "Summary": "<p><strong>TABLE_PRIVILEGES (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each table privilege that is granted to or granted by the current user in the current database.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/table-privileges-transact-sql\">INFORMATION_SCHEMA.TABLE_PRIVILEGES</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.View.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.View.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.View",
      "Summary": "<p><strong>VIEWS (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for views that can be accessed by the current user in the current database.<br>\nTo retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/views-transact-sql\">INFORMATION_SCHEMA.VIEWS</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ViewColumnUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ViewColumnUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ViewColumnUsage",
      "Summary": "<p><strong>VIEW_COLUMN_USAGE (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each column in the current database that is used in a view definition. This information schema view returns information about the objects to which the current user has permissions.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/view-column-usage-transact-sql\">INFORMATION_SCHEMA.VIEW_COLUMN_USAGE</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ViewTableUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ViewTableUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.ViewTableUsage",
      "Summary": "<p><strong>VIEW_TABLE_USAGE (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each table in the current database that is used in a view. This information schema view returns information about the objects to which the current user has permissions.<br>\n To retrieve information from these views, specify the fully qualified name of <strong>INFORMATION_SCHEMA.</strong>_view_name_.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/view-table-usage-transact-sql\">INFORMATION_SCHEMA.VIEW_TABLE_USAGE</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.InformationSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.LinkedLogin.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.LinkedLogin.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.LinkedLogin",
      "Summary": "<p><strong>sys.linked_logins (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per linked-server-login mapping, for use by RPC and distributed queries from local server to the corresponding linked server.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-linked-logins-transact-sql\">sys.linked_logins</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.RemoteLogin.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.RemoteLogin.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.RemoteLogin",
      "Summary": "<p><strong>sys.remote_logins (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per remote-login mapping. This catalog view is used to map incoming local logins that claim to be coming from a corresponding server to an actual local login.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-remote-logins-transact-sql\">sys.remote_logins</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.Server.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.Server.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.Server",
      "Summary": "<p><strong>sys.servers (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance</p>\n<p>Contains a row per linked or remote server registered, and a row for the local server that has <strong>server_id</strong> = 0.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-servers-transact-sql\">sys.servers</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.LinkedServersSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllColumn",
      "Summary": "<p><strong>sys.all_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Shows the union of all columns belonging to user-defined objects and system objects.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-columns-transact-sql\">sys.all_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllObject.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllObject.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllObject",
      "Summary": "<p><strong>sys.all_objects (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Shows the UNION of all schema-scoped user-defined objects and system objects.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-objects-transact-sql\">sys.all_objects</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllParameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllParameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllParameter",
      "Summary": "<p><strong>sys.all_parameters (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Shows the union of all parameters that belong to user-defined or system objects.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-parameters-transact-sql\">sys.all_parameters</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllSqlModule.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllSqlModule.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllSqlModule",
      "Summary": "<p><strong>sys.all_sql_modules (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns the union of <strong>sys.sql_modules</strong> and <strong>sys.system_sql_modules</strong>.<br>\n The view returns a row for each natively compiled, scalar user-defined function. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/scalar-user-defined-functions-for-in-memory-oltp\">Scalar User-Defined Functions for In-Memory OLTP</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-sql-modules-transact-sql\">sys.all_sql_modules</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllView.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllView.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllView",
      "Summary": "<p><strong>sys.all_views (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Shows the UNION of all user-defined and system views.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-views-transact-sql\">sys.all_views</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllocationUnit.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllocationUnit.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AllocationUnit",
      "Summary": "<p><strong>sys.allocation_units (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row for each allocation unit in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-allocation-units-transact-sql\">sys.allocation_units</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AssemblyModule.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AssemblyModule.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.AssemblyModule",
      "Summary": "<p><strong>sys.assembly_modules (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each function, procedure or trigger that is defined by a common language runtime (CLR) assembly. This catalog view maps CLR stored procedures, CLR triggers, or CLR functions to their underlying implementation. Objects of type TA, AF, PC, FS, and FT have an associated assembly module. To find the association between the object and the assembly, you can join this catalog view to other catalog views. For example, when you create a CLR stored procedure, it is represented by one row in <strong>sys.objects</strong>, one row in <strong>sys.procedures</strong> (which inherits from <strong>sys.objects</strong>), and one row in <strong>sys.assembly_modules</strong>. The stored procedure itself is represented by the metadata in <strong>sys.objects</strong> and <strong>sys.procedures</strong>. References to the procedure's underlying CLR implementation are found in <strong>sys.assembly_modules</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assembly-modules-transact-sql\">sys.assembly_modules</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.CheckConstraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.CheckConstraint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.CheckConstraint",
      "Summary": "<p><strong>sys.check_constraints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row for each object that is a CHECK constraint, with <strong>sys.objects.type</strong> = 'C'.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-check-constraints-transact-sql\">sys.check_constraints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Column.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Column.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Column",
      "Summary": "<p><strong>sys.columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns a row for each column of an object that has columns, such as views or tables. The following is a list of object types that have columns:<br>\n- Table-valued assembly functions (FT)<br>\n- Inline table-valued SQL functions (IF)<br>\n- Internal tables (IT)<br>\n- System tables (S)<br>\n- Table-valued SQL functions (TF)<br>\n- User tables (U)<br>\n- Views (V)</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-columns-transact-sql\">sys.columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ColumnStoreDictionary.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ColumnStoreDictionary.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ColumnStoreDictionary",
      "Summary": "<p><strong>sys.column_store_dictionaries (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each dictionary used in xVelocity memory optimized columnstore indexes. Dictionaries are used to encode some, but not all data types, therefore not all columns in a columnstore index have dictionaries. A dictionary can exist as a primary dictionary (for all segments) and possibly for other secondary dictionaries used for a subset of the column's segments.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-store-dictionaries-transact-sql\">sys.column_store_dictionaries</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ColumnStoreRowGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ColumnStoreRowGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ColumnStoreRowGroup",
      "Summary": "<p><strong>sys.column_store_row_groups (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Provides clustered columnstore index information on a per-segment basis to help the administrator make system management decisions. <strong>sys.column_store_row_groups</strong> has a column for the total number of rows physically stored (including those marked as deleted) and a column for the number of rows marked as deleted. Use <strong>sys.column_store_row_groups</strong> to determine which row groups have a high percentage of deleted rows and should be rebuilt.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-store-row-groups-transact-sql\">sys.column_store_row_groups</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ColumnStoreSegment.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ColumnStoreSegment.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ColumnStoreSegment",
      "Summary": "<p><strong>sys.column_store_segments (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns one row for each column segment in a columnstore index. There is one column segment per column per rowgroup. For example, a table with 10 rowgroups and 34 columns returns 340 rows.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-store-segments-transact-sql\">sys.column_store_segments</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ComputedColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ComputedColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ComputedColumn",
      "Summary": "<p><strong>sys.computed_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each column found in <strong>sys.columns</strong> that is a computed-column.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-computed-columns-transact-sql\">sys.computed_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.DefaultConstraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.DefaultConstraint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.DefaultConstraint",
      "Summary": "<p><strong>sys.default_constraints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each object that is a default definition (created as part of a CREATE TABLE or ALTER TABLE statement instead of a CREATE DEFAULT statement), with <strong>sys.objects.type</strong> = D.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-default-constraints-transact-sql\">sys.default_constraints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Event.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Event.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Event",
      "Summary": "<p><strong>sys.events (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row for each event for which a trigger or event notification fires. These events represent the event types that are specified when the trigger or event notification is created by using <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/statements/create-trigger-transact-sql\">CREATE TRIGGER</a> or <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/statements/create-event-notification-transact-sql\">CREATE EVENT NOTIFICATION</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-events-transact-sql\">sys.events</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.EventNotification.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.EventNotification.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.EventNotification",
      "Summary": "<p><strong>sys.event_notifications (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns a row for each object that is an event notification, with <strong>sys.objects.type</strong> = EN.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-notifications-transact-sql\">sys.event_notifications</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.EventNotificationEventType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.EventNotificationEventType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.EventNotificationEventType",
      "Summary": "<p><strong>sys.event_notification_event_types (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns a row for each event or event group on which an event notification can fire.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-notification-event-types-transact-sql\">sys.event_notification_event_types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExtendedProcedure.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExtendedProcedure.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExtendedProcedure",
      "Summary": "<p><strong>sys.extended_procedures (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each object that is an extended stored procedure, with <strong>sys.objects.type</strong> = X. Because extended stored procedures are installed into the <strong>master</strong> database, they are only visible from that database context. Selecting from the <strong>sys.extended_procedures</strong> view in any other database context will return an empty result set.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-extended-procedures-transact-sql\">sys.extended_procedures</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLanguage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLanguage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLanguage",
      "Summary": "<p><strong>sys.external_languages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2019 (15.x)</p>\n<p>This catalog view provides a list of the external languages in the database. <strong>R</strong> and <strong>Python</strong> are reserved names and no external language can be created with those specific names.<br>\n## sys.external_languages<br>\nThe catalog view sys.external_languages lists a row for each external language in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-languages-transact-sql\">sys.external_languages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLanguageFile.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLanguageFile.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLanguageFile",
      "Summary": "<p><strong>sys.external_language_files (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2019 (15.x)</p>\n<p>This catalog view provides a list of the external language extension files in the database. <strong>R</strong> and <strong>Python</strong> are reserved names and no external language can be created with those specific names.<br>\nWhen an external language is created from a file_spec, the extension itself and its properties are listed in this view. This view will contain one entry per language, per OS.<br>\n## sys.external_language_files<br>\nThe catalog view sys.external_language_files lists a row for each external language extension in the database. Parameters</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-language-files-transact-sql\">sys.external_language_files</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLibrary.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLibrary.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLibrary",
      "Summary": "<p><strong>sys.external_libraries (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2017 (14.x) and later √ Azure SQL Managed Instance</p>\n<p>Supports the management of package libraries related to external runtimes such as R, Python, and Java.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nIn SQL Server 2017, R language and Windows platform are supported. R, Python, and Java on the Windows and Linux platforms are supported in SQL Server 2019 and later. On Azure SQL Managed Instance, R and Python are supported.<br>\n</p></div><br>\n## sys.external_libraries<br>\nThe catalog view sys.external_libraries lists a row for each external library that has been uploaded into the database.<br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-libraries-transact-sql\">sys.external_libraries</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLibraryFile.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLibraryFile.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ExternalLibraryFile",
      "Summary": "<p><strong>sys.external_library_files (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2017 (14.x) and later √ Azure SQL Managed Instance</p>\n<p>Lists a row for each file that makes up an external library.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-library-files-transact-sql\">sys.external_library_files</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ForeignKey.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ForeignKey.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ForeignKey",
      "Summary": "<p><strong>sys.foreign_keys (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row per object that is a FOREIGN KEY constraint, with <strong>sys.object.type</strong> = F.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-foreign-keys-transact-sql\">sys.foreign_keys</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ForeignKeyColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ForeignKeyColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ForeignKeyColumn",
      "Summary": "<p><strong>sys.foreign_key_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each column, or set of columns, that comprise a foreign key.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-foreign-key-columns-transact-sql\">sys.foreign_key_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.FunctionOrderColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.FunctionOrderColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.FunctionOrderColumn",
      "Summary": "<p><strong>sys.function_order_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns one row per column that is a part of an <strong>ORDER</strong> expression of a common language runtime (CLR) table-valued function.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-function-order-columns-transact-sql\">sys.function_order_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.HashIndex.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.HashIndex.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.HashIndex",
      "Summary": "<p><strong>sys.hash_indexes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Shows the current hash indexes and the hash index properties. Hash indexes are supported only on <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/overview-and-usage-scenarios\">In-Memory OLTP (In-Memory Optimization)</a>.<br>\n The sys.hash_indexes view contains the same columns as the sys.indexes view and an additional column named <strong>bucket_count</strong>. For more information about the other columns in the sys.hash_indexes view, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql\">sys.indexes (Transact-SQL)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-hash-indexes-transact-sql\">sys.hash_indexes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.IdentityColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.IdentityColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.IdentityColumn",
      "Summary": "<p><strong>sys.identity_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each column that is an identity column.<br>\n The <strong>sys.identity_columns</strong> view inherits rows from the <strong>sys.columns</strong> view. The <strong>sys.identity_columns</strong> view returns the columns in the <strong>sys.columns</strong> view, plus the <strong>seed_value</strong>, <strong>increment_value</strong>, <strong>last_value</strong>, and <strong>is_not_for_replication</strong> columns. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/catalog-views-transact-sql\">Catalog Views (Transact-SQL)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-identity-columns-transact-sql\">sys.identity_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Index.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Index.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Index",
      "Summary": "<p><strong>sys.indexes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row per index or heap of a tabular object, such as a table, view, or table-valued function.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql\">sys.indexes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.IndexColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.IndexColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.IndexColumn",
      "Summary": "<p><strong>sys.index_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains one row per column that is part of a <strong>sys.indexes</strong> index or unordered table (heap).</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-index-columns-transact-sql\">sys.index_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.IndexResumableOperation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.IndexResumableOperation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.IndexResumableOperation",
      "Summary": "<p><strong>sys.index_resumable_operations (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2017 (14.x) and later  √ Azure SQL Database</p>\n<p><strong>sys.index_resumable_operations</strong> is a system view that monitors and checks the current execution status for resumable Index rebuild or creation.<br>\n<strong>Applies to</strong>: SQL Server (2017 and newer), and Azure SQL Database</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-index-resumable-operations\">sys.index_resumable_operations</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.InternalPartition.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.InternalPartition.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.InternalPartition",
      "Summary": "<p><strong>sys.internal_partitions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns one row for each rowset that tracks internal data for columnstore indexes on disk-based tables. These rowsets are internal to columnstore indexes and track deleted rows, rowgroup mappings, and delta store rowgroups. They track data for each for each table partition; every table has at least one partition. SQL Server re-creates the rowsets each time it rebuilds the columnstore index.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-internal-partitions-transact-sql\">sys.internal_partitions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.InternalTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.InternalTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.InternalTable",
      "Summary": "<p><strong>sys.internal_tables (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns one row for each object that is an internal table. Internal tables are automatically generated by SQL Server to support various features. For example, when you create a primary XML index, SQL Server automatically creates an internal table to persist the shredded XML document data. Internal tables appear in the <strong>sys</strong> schema of every database and have unique, system-generated names that indicate their function, for example, <strong>xml_index_nodes_2021582240_32001</strong> or <strong>queue_messages_1977058079</strong><br>\n Internal tables do not contain user-accessible data, and their schema are fixed and unalterable. You cannot reference internal table names in Transact\\-SQL statements. For example, you cannot execute a statement such as SELECT \\* FROM *\\&lt;sys.internal_table_name&gt;*. However, you can query catalog views to see the metadata of internal tables.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-internal-tables-transact-sql\">sys.internal_tables</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.KeyConstraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.KeyConstraint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.KeyConstraint",
      "Summary": "<p><strong>sys.key_constraints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each object that is a primary key or unique constraint. Includes <strong>sys.objects.type</strong> PK and UQ.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-key-constraints-transact-sql\">sys.key_constraints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.MaskedColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.MaskedColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.MaskedColumn",
      "Summary": "<p><strong>sys.masked_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Use the <strong>sys.masked_columns</strong> view to query for table-columns that have a dynamic data masking function applied to them. This view inherits from the <strong>sys.columns</strong> view. It returns all columns in the <strong>sys.columns</strong> view, plus the <strong>is_masked</strong> and <strong>masking_function</strong> columns, indicating if the column is masked, and if so, what masking function is defined. This view only shows the columns on which there is a masking function applied.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-masked-columns-transact-sql\">sys.masked_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.MemoryOptimizedTablesInternalAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.MemoryOptimizedTablesInternalAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.MemoryOptimizedTablesInternalAttribute",
      "Summary": "<p><strong>sys.memory_optimized_tables_internal_attributes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Contains a row for each internal memory-optimized table used for storing user memory-optimized tables. Each user table corresponds to one or more internal tables. A single table is used for the core data storage. Additional internal tables are used to support features such as temporal, columnstore index and off-row (LOB) storage for memory-optimized tables.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-memory-optimized-tables-internal-attributes-transact-sql\">sys.memory_optimized_tables_internal_attributes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ModuleAssemblyUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ModuleAssemblyUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ModuleAssemblyUsage",
      "Summary": "<p><strong>sys.module_assembly_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each module-to-assembly reference.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-module-assembly-usages-transact-sql\">sys.module_assembly_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.NumberedProcedure.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.NumberedProcedure.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.NumberedProcedure",
      "Summary": "<p><strong>sys.numbered_procedures (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each SQL Server stored procedure that was created as a numbered procedure. This does not show a row for the base (number = 1) stored procedure. Entries for the base stored procedures can be found in views such as <strong>sys.objects</strong> and <strong>sys.procedures</strong>.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nNumbered procedures are deprecated. Use of numbered procedures is discouraged. A DEPRECATION_ANNOUNCEMENT event is fired when a query that uses this catalog view is compiled.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-numbered-procedures-transact-sql\">sys.numbered_procedures</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.NumberedProcedureParameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.NumberedProcedureParameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.NumberedProcedureParameter",
      "Summary": "<p><strong>sys.numbered_procedure_parameters (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each parameter of a numbered procedure. When you create a numbered stored procedure, the base procedure is number 1. All subsequent procedures have numbers 2, 3, and so forth. <strong>sys.numbered_procedure_parameters</strong> contains the parameter definitions for all subsequent procedures, numbered 2 and greater. This view does not show parameters for the base stored procedure (number = 1). The base stored procedure is similar to a nonnumbered stored procedure. Therefore, its parameters are represented in <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-parameters-transact-sql\">sys.parameters (Transact-SQL)</a>.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nNumbered procedures are deprecated. Use of numbered procedures is discouraged. A DEPRECATION_ANNOUNCEMENT event is fired when a query that uses this catalog view is compiled.<br>\n</p></div><br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nXML and CLR parameters are not supported for numbered procedures.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-numbered-procedure-parameters-transact-sql\">sys.numbered_procedure_parameters</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Object.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Object.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Object",
      "Summary": "<p><strong>sys.objects (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each user-defined, schema-scoped object that is created within a database, including natively compiled scalar user-defined function.<br>\n For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/scalar-user-defined-functions-for-in-memory-oltp\">Scalar User-Defined Functions for In-Memory OLTP</a>.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nsys.objects does not show DDL triggers, because they are not schema-scoped. All triggers, both DML and DDL, are found in <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-triggers-transact-sql\">sys.triggers</a>. sys.triggers supports a mixture of name-scoping rules for the various kinds of triggers.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql\">sys.objects</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Parameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Parameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Parameter",
      "Summary": "<p><strong>sys.parameters (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each parameter of an object that accepts parameters. If the object is a scalar function, there is also a single row describing the return value. That row will have a <strong>parameter_id</strong> value of 0.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-parameters-transact-sql\">sys.parameters</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Partition.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Partition.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Partition",
      "Summary": "<p><strong>sys.partitions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each partition of all the tables and most types of indexes in the database. Special index types such as Full-Text, Spatial, and XML are not included in this view. All tables and indexes in SQL Server contain at least one partition, whether or not they are explicitly partitioned.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partitions-transact-sql\">sys.partitions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Period.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Period.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Period",
      "Summary": "<p><strong>sys.periods (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later</p>\n<p>Returns a row for each table for which periods have been defined.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-periods-transact-sql\">sys.periods</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.PlanGuide.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.PlanGuide.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.PlanGuide",
      "Summary": "<p><strong>sys.plan_guides (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row for each plan guide in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-plan-guides-transact-sql\">sys.plan_guides</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Procedure.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Procedure.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Procedure",
      "Summary": "<p><strong>sys.procedures (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each object that is a procedure of some kind, with <strong>sys.objects.type</strong> = P, X, RF, and PC.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-procedures-transact-sql\">sys.procedures</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Sequence.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Sequence.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Sequence",
      "Summary": "<p><strong>sys.sequences (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row for each sequence object in a database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sequences-transact-sql\">sys.sequences</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerAssemblyModule.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerAssemblyModule.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerAssemblyModule",
      "Summary": "<p><strong>sys.server_assembly_modules (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each assembly module for the server-level triggers of type TA. This view maps assembly triggers to the underlying CLR implementation. You can join this relation to <strong>sys.server_triggers</strong>. The assembly must be loaded into the <strong>master</strong> database. The tuple (object_id) is the key for the relation.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-assembly-modules-transact-sql\">sys.server_assembly_modules</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerEvent.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerEvent.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerEvent",
      "Summary": "<p><strong>sys.server_events (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each event for which a server-level event-notification or server-level DDL trigger fires. The columns <strong>object_id</strong> and <strong>type</strong> uniquely identify the server event.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-events-transact-sql\">sys.server_events</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerEventNotification.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerEventNotification.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerEventNotification",
      "Summary": "<p><strong>sys.server_event_notifications (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each server-level event notification object.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-notifications-transact-sql\">sys.server_event_notifications</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerSqlModule.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerSqlModule.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerSqlModule",
      "Summary": "<p><strong>sys.server_sql_modules (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains the set of SQL modules for server-level triggers of type TR. You can join this relation to sys.server_triggers. The tuple (object_id) is the key of the relation.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-sql-modules-transact-sql\">sys.server_sql_modules</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerTrigger.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerTrigger.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerTrigger",
      "Summary": "<p><strong>sys.server_triggers (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains the set of all server-level DDL triggers with object_type of TR or TA. In the case of CLR triggers, the assembly must be loaded into the <strong>master</strong> database. All server-level DDL trigger names exist in a single, global scope.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-triggers-transact-sql\">sys.server_triggers</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerTriggerEvent.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerTriggerEvent.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.ServerTriggerEvent",
      "Summary": "<p><strong>sys.server_trigger_events (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each event for which a server-level (synchronous) trigger fires.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-trigger-events-transact-sql\">sys.server_trigger_events</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SqlDependency.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SqlDependency.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SqlDependency",
      "Summary": "<p><strong>sys.sql_dependencies (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each dependency on a referenced entity as referenced in the Transact\\-SQL expression or statements that define some other referencing object.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-expression-dependencies-transact-sql\">sys.sql_expression_dependencies</a> instead.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-dependencies-transact-sql\">sys.sql_dependencies</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SqlExpressionDependency.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SqlExpressionDependency.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SqlExpressionDependency",
      "Summary": "<p><strong>sys.sql_expression_dependencies (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains one row for each by-name dependency on a user-defined entity in the current database. This includes dependences between natively compiled, scalar user-defined functions and other SQL Server modules. A dependency between two entities is created when one entity, called the *referenced entity*, appears by name in a persisted SQL expression of another entity, called the *referencing entity*. For example, when a table is referenced in the definition of a view, the view, as the referencing entity, depends on the table, the referenced entity. If the table is dropped, the view is unusable.<br>\n For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/scalar-user-defined-functions-for-in-memory-oltp\">Scalar User-Defined Functions for In-Memory OLTP</a>.<br>\n You can use this catalog view to report dependency information for the following entities:<br>\n-   Schema-bound entities.<br>\n-   Non-schema-bound entities.<br>\n-   Cross-database and cross-server entities. Entity names are reported; however, entity IDs are not resolved.<br>\n-   Column-level dependencies on schema-bound entities. Column-level dependencies for non-schema-bound objects can be returned by using <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-sql-referenced-entities-transact-sql\">sys.dm_sql_referenced_entities</a>.<br>\n-   Server-level DDL triggers when in the context of the master database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-expression-dependencies-transact-sql\">sys.sql_expression_dependencies</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SqlModule.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SqlModule.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SqlModule",
      "Summary": "<p><strong>sys.sql_modules (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns a row for each object that is an SQL language-defined module in SQL Server, including natively compiled scalar user-defined function. Objects of type P, RF, V, TR, FN, IF, TF, and R have an associated SQL module. Stand-alone defaults, objects of type D, also have an SQL module definition in this view. For a description of these types, see the <code>type</code> column in the <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql\">sys.objects</a> catalog view.<br>\n For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/scalar-user-defined-functions-for-in-memory-oltp\">Scalar User-Defined Functions for In-Memory OLTP</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-modules-transact-sql\">sys.sql_modules</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Stat.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Stat.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Stat",
      "Summary": "<p><strong>sys.stats (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each statistics object that exists for the tables, indexes, and indexed views in the database in SQL Server. Every index will have a corresponding statistics row with the same name and ID (<strong>index_id</strong> = <strong>stats_id</strong>), but not every statistics row has a corresponding index.<br>\n The catalog view <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-stats-columns-transact-sql\">sys.stats_columns</a> provides statistics information for each column in the database. For more information about statistics, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/statistics/statistics\">Statistics</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-stats-transact-sql\">sys.stats</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.StatsColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.StatsColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.StatsColumn",
      "Summary": "<p><strong>sys.stats_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each column that is part of <strong>sys.stats</strong> statistics.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-stats-columns-transact-sql\">sys.stats_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Synonym.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Synonym.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Synonym",
      "Summary": "<p><strong>sys.synonyms (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each synonym object that is <strong>sys.objects.type</strong> = SN.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-synonyms-transact-sql\">sys.synonyms</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemColumn",
      "Summary": "<p><strong>sys.system_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each column of system objects that have columns.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-columns-transact-sql\">sys.system_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemObject.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemObject.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemObject",
      "Summary": "<p><strong>sys.system_objects (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains one row for all schema-scoped system objects that are included with Microsoft SQL Server. All system objects are contained in the schemas named sys or INFORMATION_SCHEMA.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-objects-transact-sql\">sys.system_objects</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemParameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemParameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemParameter",
      "Summary": "<p><strong>sys.system_parameters (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains one row for each system object that has parameters.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-parameters-transact-sql\">sys.system_parameters</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemSqlModule.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemSqlModule.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemSqlModule",
      "Summary": "<p><strong>sys.system_sql_modules (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row per system object that contains an SQL language-defined module. System objects of type FN, IF, P, PC, TF, V have an associated SQL module. To identify the containing object, you can join this view to <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-objects-transact-sql\">sys.system_objects</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-sql-modules-transact-sql\">sys.system_sql_modules</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemView.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemView.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.SystemView",
      "Summary": "<p><strong>sys.system_views (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each system view that is shipped with SQL Server. All system views are contained in the schemas named <strong>sys</strong> or <strong>INFORMATION_SCHEMA</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-views-transact-sql\">sys.system_views</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Table.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Table.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Table",
      "Summary": "<p><strong>sys.tables (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns a row for each user table in SQL Server.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-tables-transact-sql\">sys.tables</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.TableType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.TableType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.TableType",
      "Summary": "<p><strong>sys.table_types (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Displays properties of user-defined table types in SQL Server. A table type is a type from which table variables or table-valued parameters could be declared. Each table type has a <strong>type_table_object_id</strong> that is a foreign key into the <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql\">sys.objects</a> catalog view. You can use this ID column to query various catalog views, in a way that is similar to an <strong>object_id</strong> column of a regular table, to discover the structure of the table type such as its columns and constraints.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-table-types-transact-sql\">sys.table_types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Trigger.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Trigger.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.Trigger",
      "Summary": "<p><strong>sys.triggers (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row for each object that is a trigger, with a type of TR or TA. DML trigger names are schema-scoped and, therefore, are visible in <strong>sys.objects</strong>. DDL trigger names are scoped by the parent entity and are only visible in this view.<br>\n The <strong>parent_class</strong> and <strong>name</strong> columns uniquely identify the trigger in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-triggers-transact-sql\">sys.triggers</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.TriggerEvent.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.TriggerEvent.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.TriggerEvent",
      "Summary": "<p><strong>sys.trigger_events (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Contains a row per event for which a trigger fires.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\n<strong>sys.trigger_events</strong> does not apply to event notifications.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trigger-events-transact-sql\">sys.trigger_events</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.TriggerEventType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.TriggerEventType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.TriggerEventType",
      "Summary": "<p><strong>sys.trigger_event_types (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each event or event group on which a trigger can fire.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trigger-event-types-transact-sql\">sys.trigger_event_types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.View.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.View.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.View",
      "Summary": "<p><strong>sys.views (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each view object, with <strong>sys.objects.type</strong> = V.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-views-transact-sql\">sys.views</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ObjectSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.PartitionFunction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.PartitionFunction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.PartitionFunction",
      "Summary": "<p><strong>sys.partition_functions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each partition function in SQL Server.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partition-functions-transact-sql\">sys.partition_functions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.PartitionParameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.PartitionParameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.PartitionParameter",
      "Summary": "<p><strong>sys.partition_parameters (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each parameter of a partition function.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partition-parameters-transact-sql\">sys.partition_parameters</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.PartitionRangeValue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.PartitionRangeValue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.PartitionRangeValue",
      "Summary": "<p><strong>sys.partition_range_values (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each range boundary value of a partition function of type R.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partition-range-values-transact-sql\">sys.partition_range_values</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PartitionFunctionSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.Condition.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.Condition.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.Condition",
      "Summary": "<p><strong>syspolicy_conditions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Displays one row for each Policy-Based Management condition in the instance of SQL Server. syspolicy_conditions belongs to the dbo schema in the msdb database. The following table describes the columns in the syspolicy_conditions view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-conditions-transact-sql\">dbo.syspolicy_conditions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.Policy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.Policy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.Policy",
      "Summary": "<p><strong>syspolicy_policies (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Displays one row for each Policy-Based Management policy in the instance of SQL Server. syspolicy_policies belongs to the dbo schema in the msdb database. The following table describes the columns in the syspolicy_policies view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policies-transact-sql\">dbo.syspolicy_policies</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyCategory.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyCategory.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyCategory",
      "Summary": "<p><strong>syspolicy_policy_categories (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Displays one row for each Policy-Based Management policy category in the instance of SQL Server. Policy categories help you organize policies when you have many policies. The following table describes the columns in the syspolicy_policy_groups view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policy-categories-transact-sql\">dbo.syspolicy_policy_categories</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyCategorySubscription.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyCategorySubscription.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyCategorySubscription",
      "Summary": "<p><strong>syspolicy_policy_category_subscriptions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Displays one row for each Policy-Based Management subscription in the instance of SQL Server. Each row describes a target and policy category pair. The following table describes the columns in the syspolicy_policy_group_subscriptions view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policy-category-subscriptions-transact-sql\">dbo.syspolicy_policy_category_subscriptions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyExecutionHistory.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyExecutionHistory.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyExecutionHistory",
      "Summary": "<p><strong>syspolicy_policy_execution_history (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Displays the time when policies were executed, the result of each execution, and details about errors if any occurred. The following table describes the columns in the syspolicy_policy_execution_history view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policy-execution-history-transact-sql\">dbo.syspolicy_policy_execution_history</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyExecutionHistoryDetail.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyExecutionHistoryDetail.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.PolicyExecutionHistoryDetail",
      "Summary": "<p><strong>syspolicy_policy_execution_history_details (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Displays the condition expressions that were executed, the targets of the expressions, the result of each execution, and details about errors if any occurred. The following table describes the columns in the syspolicy_execution_history_details view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policy-execution-history-details-transact-sql\">dbo.syspolicy_policy_execution_history_details</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.SystemHealthState.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.SystemHealthState.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.SystemHealthState",
      "Summary": "<p><strong>syspolicy_system_health_state (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Displays one row for each Policy-Based Management policy and target query expression combination. Use the syspolicy_system_health_state view to programmatically check the policy health of the server. The following table describes the columns in the syspolicy_system_health_state view.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-system-health-state-transact-sql\">dbo.syspolicy_system_health_state</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.PolicyBasedManagementSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.DatabaseQueryStoreOption.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.DatabaseQueryStoreOption.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.DatabaseQueryStoreOption",
      "Summary": "<p><strong>sys.database_query_store_options (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Returns the Query Store options for this database.<br>\n<strong>Applies to</strong>: SQL Server (SQL Server 2016 (13.x) and later), SQL Database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-query-store-options-transact-sql\">sys.database_query_store_options</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryContextSetting.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryContextSetting.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryContextSetting",
      "Summary": "<p><strong>sys.query_context_settings (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Contains  information about the semantics affecting context settings associated with a query. There are a number of context settings available in SQL Server that influence the query semantics (defining the correct result of the query). The same query text compiled under different settings may produce different results (depending on the underlying data).</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-context-settings-transact-sql\">sys.query_context_settings</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStorePlan.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStorePlan.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStorePlan",
      "Summary": "<p><strong>sys.query_store_plan (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Contains information about each execution plan associated with a query.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-plan-transact-sql\">sys.query_store_plan</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreQuery.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreQuery.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreQuery",
      "Summary": "<p><strong>sys.query_store_query (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Contains  information about the query and its associated overall aggregated runtime execution statistics.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-query-transact-sql\">sys.query_store_query</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreQueryHint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreQueryHint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreQueryHint",
      "Summary": "<p><strong>sys.query_store_query_hints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p> Contains query hints from the <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/performance/query-store-hints\">Query Store hints (Preview)</a> feature.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-query-hints-transact-sql\">sys.query_store_query_hints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreQueryText.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreQueryText.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreQueryText",
      "Summary": "<p><strong>sys.query_store_query_text (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Contains  the Transact\\-SQL text and the SQL handle of the query.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-query-text-transact-sql\">sys.query_store_query_text</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreRuntimeStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreRuntimeStat.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreRuntimeStat",
      "Summary": "<p><strong>sys.query_store_runtime_stats (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Contains  information about the runtime execution statistics information for the query.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-runtime-stats-transact-sql\">sys.query_store_runtime_stats</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreRuntimeStatsInterval.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreRuntimeStatsInterval.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreRuntimeStatsInterval",
      "Summary": "<p><strong>sys.query_store_runtime_stats_interval (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Contains  information about the start and end time of each interval over which runtime execution statistics information for a query has been collected.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-runtime-stats-interval-transact-sql\">sys.query_store_runtime_stats_interval</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreWaitStat.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreWaitStat.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.QueryStoreWaitStat",
      "Summary": "<p><strong>sys.query_store_wait_stats (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2017 (14.x) and later  √ Azure SQL Database</p>\n<p>Contains  information about the wait information for the query.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-wait-stats-transact-sql\">sys.query_store_wait_stats</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.QueryStoreSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.Configuration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.Configuration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.Configuration",
      "Summary": "<p><strong>sys.resource_governor_configuration (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns the stored Resource Governor state.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-governor-configuration-transact-sql\">sys.resource_governor_configuration</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.ExternalResourcePool.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.ExternalResourcePool.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.ExternalResourcePool",
      "Summary": "<p><strong>sys.resource_governor_external_resource_pools (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later</p>\n<p><strong>Applies to:</strong> SQL Server 2016 (13.x) R Services (In-Database) and SQL Server 2017 (14.x) Machine Learning Services<br>\nReturns the stored external resource pool configuration in SQL Server. Each row of the view determines the configuration of a pool.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-governor-external-resource-pools-transact-sql\">sys.resource_governor_external_resource_pools</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.ResourcePool.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.ResourcePool.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.ResourcePool",
      "Summary": "<p><strong>sys.resource_governor_resource_pools (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns the stored resource pool configuration in SQL Server. Each row of the view determines the configuration of a pool.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-governor-resource-pools-transact-sql\">sys.resource_governor_resource_pools</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.WorkloadGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.WorkloadGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.WorkloadGroup",
      "Summary": "<p><strong>sys.resource_governor_workload_groups (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns the stored workload group configuration in SQL Server. Each workload group can subscribe to one and only one resource pool.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-governor-workload-groups-transact-sql\">sys.resource_governor_workload_groups</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ResourceGovernorSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.AssemblyType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.AssemblyType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.AssemblyType",
      "Summary": "<p><strong>sys.assembly_types (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each user-defined type that is defined by a CLR assembly. The following <strong>sys.assembly_types</strong> appear in the list of inherited columns (see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql\">sys.types (Transact-SQL)</a>) after <strong>rule_object_id</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assembly-types-transact-sql\">sys.assembly_types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.ColumnTypeUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.ColumnTypeUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.ColumnTypeUsage",
      "Summary": "<p><strong>sys.column_type_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each column that is of user-defined type.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-type-usages-transact-sql\">sys.column_type_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.ParameterTypeUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.ParameterTypeUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.ParameterTypeUsage",
      "Summary": "<p><strong>sys.parameter_type_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns one row for each parameter that is of user-defined type.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nThis view does not return rows for parameters of numbered procedures.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-parameter-type-usages-transact-sql\">sys.parameter_type_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.Type.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.Type.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.Type",
      "Summary": "<p><strong>sys.types (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Contains a row for each system and user-defined type.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql\">sys.types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.TypeAssemblyUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.TypeAssemblyUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.TypeAssemblyUsage",
      "Summary": "<p><strong>sys.type_assembly_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row per type to assembly reference.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-type-assembly-usages-transact-sql\">sys.type_assembly_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ScalarTypesSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.AsymmetricKey.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.AsymmetricKey.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.AsymmetricKey",
      "Summary": "<p><strong>sys.asymmetric_keys (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns a row for each asymmetric key.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-asymmetric-keys-transact-sql\">sys.asymmetric_keys</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.Certificate.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.Certificate.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.Certificate",
      "Summary": "<p><strong>sys.certificates (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns a row for each certificate in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-certificates-transact-sql\">sys.certificates</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ColumnEncryptionKey.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ColumnEncryptionKey.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ColumnEncryptionKey",
      "Summary": "<p><strong>sys.column_encryption_keys  (Transact-SQL)</strong></p>\n<p><strong>APPLIES TO:</strong> (Yes) SQL Server 2016 and later (No) Azure SQL Database (Yes) Azure Synapse Analytics (No) Parallel Data Warehouse</p>\n<p>Returns information about column encryption keys (CEKs) created with the <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/statements/create-column-encryption-key-transact-sql\">CREATE COLUMN ENCRYPTION KEY</a> statement. Each row represents a CEK.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-encryption-keys-transact-sql\">sys.column_encryption_keys</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ColumnEncryptionKeyValue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ColumnEncryptionKeyValue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ColumnEncryptionKeyValue",
      "Summary": "<p><strong>sys.column_encryption_key_values (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns information about encrypted values of column encryption keys (CEKs) created with either the <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/statements/create-column-encryption-key-transact-sql\">CREATE COLUMN ENCRYPTION KEY</a> or the <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-column-encryption-key-transact-sql\">ALTER COLUMN ENCRYPTION KEY (Transact-SQL)</a> statement. Each row represents a value of a CEK, encrypted with a column master key (CMK).</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-encryption-key-values-transact-sql\">sys.column_encryption_key_values</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ColumnMasterKey.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ColumnMasterKey.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ColumnMasterKey",
      "Summary": "<p><strong>sys.column_master_keys (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance</p>\n<p>Returns a row for each database master key added by using the <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/statements/create-column-master-key-transact-sql\">CREATE MASTER KEY</a> statement. Each row represents a single column master key (CMK).</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-master-keys-transact-sql\">sys.column_master_keys</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.Credential.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.Credential.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.Credential",
      "Summary": "<p><strong>sys.credentials (Transact-SQL)</strong></p>\n<p><strong>APPLIES TO:</strong> (Yes) SQL Server (Yes) Azure SQL Managed Instance ![yes](media/yes-icon.png)Azure Synapse Analytics (Yes) Parallel Data Warehouse</p>\n<p>Returns one row for each server-level credential.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-credentials-transact-sql\">sys.credentials</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.CryptProperty.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.CryptProperty.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.CryptProperty",
      "Summary": "<p><strong>sys.crypt_properties (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each cryptographic property associated with a securable.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-crypt-properties-transact-sql\">sys.crypt_properties</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.CryptographicProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.CryptographicProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.CryptographicProvider",
      "Summary": "<p><strong>sys.cryptographic_providers (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns one row for each registered cryptographic provider.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-cryptographic-providers-transact-sql\">sys.cryptographic_providers</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseAuditSpecification.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseAuditSpecification.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseAuditSpecification",
      "Summary": "<p><strong>sys.database_audit_specifications (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about the database audit specifications in a SQL Server audit on a server instance. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine\">SQL Server Audit (Database Engine)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-audit-specifications-transact-sql\">sys.database_audit_specifications</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseAuditSpecificationDetail.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseAuditSpecificationDetail.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseAuditSpecificationDetail",
      "Summary": "<p><strong>sys.database_audit_specification_details (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about the database audit specifications in a SQL Server audit on a server instance for all databases. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine\">SQL Server Audit (Database Engine)</a>. For a list of all audit_action_id's and their names, query <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-audit-actions-transact-sql\">sys.dm_audit_actions (Transact-SQL)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-audit-specification-details-transact-sql\">sys.database_audit_specification_details</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseCredential.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseCredential.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseCredential",
      "Summary": "<p><strong>sys.database_credentials (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Returns one row for each database scoped credential in the database.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-scoped-credentials-transact-sql\">sys.database_scoped_credentials</a> instead.  <br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-credentials-transact-sql\">sys.database_credentials</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseLedgerBlock.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseLedgerBlock.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseLedgerBlock",
      "Summary": "<p><strong>sys.database_ledger_blocks (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database</p>\n<p>Captures the cryptographically chained blocks, each of which represents a block of transactions against ledger tables.<br>\nFor more information on database ledger, see <a href=\"https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview\">Azure SQL Database ledger</a></p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-ledger-blocks-transact-sql\">sys.database_ledger_blocks</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseLedgerDigestLocation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseLedgerDigestLocation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseLedgerDigestLocation",
      "Summary": "<p><strong>sys.database_ledger_digest_locations (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database</p>\n<p>Captures the current and the historical ledger digest storage endpoints for the ledger feature.<br>\nFor more information on database ledger, see <a href=\"https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview\">Azure SQL Database ledger</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-ledger-digest-locations-transact-sql\">sys.database_ledger_digest_locations</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseLedgerTransaction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseLedgerTransaction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseLedgerTransaction",
      "Summary": "<p><strong>sys.database_ledger_transactions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database</p>\n<p>Captures the cryptographically protected history of database transactions against ledger tables in the database. A row in this view represents a database transaction.<br>\nFor more information on database ledger, see <a href=\"https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview\">Azure SQL Database ledger</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-ledger-transactions-transact-sql\">sys.database_ledger_transactions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabasePermission.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabasePermission.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabasePermission",
      "Summary": "<p><strong>sys.database_permissions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns a row for every permission or column-exception permission in the database. For columns, there is a row for every permission that is different from the corresponding object-level permission. If the column permission is the same as the corresponding object permission, there is no row for it and the permission applied is that of the object.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nColumn-level permissions override object-level permissions on the same entity.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-permissions-transact-sql\">sys.database_permissions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabasePrincipal.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabasePrincipal.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabasePrincipal",
      "Summary": "<p><strong>sys.database_principals (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns a row for each security principal in a SQL Server database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-principals-transact-sql\">sys.database_principals</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseRoleMember.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseRoleMember.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseRoleMember",
      "Summary": "<p><strong>sys.database_role_members (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each member of each database role.  Database users, application roles, and other database roles can be members of a database role. To add members to a role, use the <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-role-transact-sql\">ALTER ROLE</a> statement with the <code>ADD MEMBER</code> option. Join with <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-principals-transact-sql\">sys.database_principals</a> to return the names of the <code>principal_id</code> values.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-role-members-transact-sql\">sys.database_role_members</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseScopedCredential.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseScopedCredential.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.DatabaseScopedCredential",
      "Summary": "<p><strong>sys.database_scoped_credentials (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Returns one row for each database scoped credential in the database.<br>\n::: moniker range='=sql-server-2016'</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-scoped-credentials-transact-sql\">sys.database_scoped_credentials</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.KeyEncryption.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.KeyEncryption.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.KeyEncryption",
      "Summary": "<p><strong>sys.key_encryptions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns a row for each symmetric key encryption specified by using the ENCRYPTION BY clause of the CREATE SYMMETRIC KEY statement.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-key-encryptions-transact-sql\">sys.key_encryptions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.LedgerColumnHistory.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.LedgerColumnHistory.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.LedgerColumnHistory",
      "Summary": "<p><strong>sys.ledger_column_history (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database</p>\n<p>Captures the cryptographically protected history of operations on columns of ledger tables: adding, renaming, and dropping columns.<br>\nFor more information on database ledger, see <a href=\"https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview\">Azure SQL Database ledger</a></p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-ledger-column-history-transact-sql\">sys.ledger_column_history</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.LedgerTableHistory.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.LedgerTableHistory.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.LedgerTableHistory",
      "Summary": "<p><strong>sys.ledger_table_history (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ Azure SQL Database</p>\n<p>Captures the cryptographically protected history of operations on ledger tables: creating ledger tables, renaming ledger tables or ledger views, and dropping ledger tables.<br>\nFor more information on database ledger, see <a href=\"https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview\">Azure SQL Database ledger</a></p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-ledger-table-history-transact-sql\">sys.ledger_table_history</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.LoginToken.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.LoginToken.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.LoginToken",
      "Summary": "<p><strong>sys.login_token (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns one row for every server principal that is part of the login token.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-login-token-transact-sql\">sys.login_token</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.MasterKeyPassword.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.MasterKeyPassword.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.MasterKeyPassword",
      "Summary": "<p><strong>sys.master_key_passwords (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance</p>\n<p>Returns a row for each database master key password added by using the <strong>sp_control_dbmasterkey_password</strong> stored procedure. The passwords that are used to protect the master keys are stored in the credential store. The credential name follows this format: ##DBMKEY_&lt;database_family_guid&gt;_&lt;random_password_guid&gt;##. The password is stored as the credential secret. For each password added by using <strong>sp_control_dbmasterkey_password</strong>, there is a row in <strong>sys.credentials</strong>.<br>\n Each row in this view shows a <strong>credential_id</strong> and the <strong>family_guid</strong> of a database the master key of which is protected by the password associated with that credential. A join with <strong>sys.credentials</strong> on the <strong>credential_id</strong> will return useful fields, such as the <strong>create_date</strong> and credential name.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-master-key-passwords-transact-sql\">sys.master_key_passwords</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.OpenKey.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.OpenKey.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.OpenKey",
      "Summary": "<p><strong>sys.openkeys (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>This catalog view returns information about encryption keys that are open in the current session.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-openkeys-transact-sql\">sys.openkeys</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SecurableClass.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SecurableClass.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SecurableClass",
      "Summary": "<p><strong>sys.securable_classes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns a list of securable classes</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-securable-classes-transact-sql\">sys.securable_classes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SecurityPolicy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SecurityPolicy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SecurityPolicy",
      "Summary": "<p><strong>sys.security_policies (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Returns a row for each security policy in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-security-policies-transact-sql\">sys.security_policies</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SecurityPredicate.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SecurityPredicate.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SecurityPredicate",
      "Summary": "<p><strong>sys.security_predicates (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Returns a row for each security predicate in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-security-predicates-transact-sql\">sys.security_predicates</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SensitivityClassification.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SensitivityClassification.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SensitivityClassification",
      "Summary": "<p><strong>sys.sensitivity_classifications (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Returns a row for each classified item in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sensitivity-classifications-transact-sql\">sys.sensitivity_classifications</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerAudit.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerAudit.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerAudit",
      "Summary": "<p><strong>sys.server_audits (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains one row for each SQL Server audit in a server instance. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine\">SQL Server Audit (Database Engine)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-audits-transact-sql\">sys.server_audits</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerAuditSpecification.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerAuditSpecification.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerAuditSpecification",
      "Summary": "<p><strong>sys.server_audit_specifications (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about the server audit specifications in a SQL Server audit on a server instance. For more information on SQL Server Audit, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine\">SQL Server Audit (Database Engine)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-audit-specifications-transact-sql\">sys.server_audit_specifications</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerAuditSpecificationDetail.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerAuditSpecificationDetail.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerAuditSpecificationDetail",
      "Summary": "<p><strong>sys.server_audit_specification_details (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains information about the server audit specification details (actions) in a SQL Server audit on a server instance. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine\">SQL Server Audit (Database Engine)</a>. For a list of all audit_action_id's and their names, query <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-audit-actions-transact-sql\">sys.dm_audit_actions (Transact-SQL)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-audit-specification-details-transact-sql\">sys.server_audit_specification_details</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerFileAudit.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerFileAudit.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerFileAudit",
      "Summary": "<p><strong>sys.server_file_audits (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains extended information about the file audit type in a SQL Server audit on a server instance. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine\">SQL Server Audit (Database Engine)</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-file-audits-transact-sql\">sys.server_file_audits</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerPermission.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerPermission.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerPermission",
      "Summary": "<p><strong>sys.server_permissions (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each server-level permission.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-permissions-transact-sql\">sys.server_permissions</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerPrincipal.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerPrincipal.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerPrincipal",
      "Summary": "<p><strong>sys.server_principals (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Analytics Platform System (PDW)</p>\n<p>Contains a row for every server-level principal.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-principals-transact-sql\">sys.server_principals</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerRoleMember.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerRoleMember.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.ServerRoleMember",
      "Summary": "<p><strong>sys.server_role_members (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Analytics Platform System (PDW)</p>\n<p>Returns one row for each member of each fixed and user-defined server role.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-role-members-transact-sql\">sys.server_role_members</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SqlLogin.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SqlLogin.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SqlLogin",
      "Summary": "<p><strong>sys.sql_logins (Transact-SQL)</strong></p>\n<p><strong>APPLIES TO:</strong> (Yes) SQL Server (Yes) Azure SQL Database (No) Azure Synapse Analytics (Yes) Parallel Data Warehouse</p>\n<p>Returns one row for every SQL Server authentication login.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-logins-transact-sql\">sys.sql_logins</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SymmetricKey.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SymmetricKey.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SymmetricKey",
      "Summary": "<p><strong>sys.symmetric_keys (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)</p>\n<p>Returns one row for every symmetric key created with the CREATE SYMMETRIC KEY statement.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-symmetric-keys-transact-sql\">sys.symmetric_keys</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SystemComponentsSurfaceAreaConfiguration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SystemComponentsSurfaceAreaConfiguration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.SystemComponentsSurfaceAreaConfiguration",
      "Summary": "<p><strong>sys.system_components_surface_area_configuration (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns one row for each executable system object that can be enabled or disabled by a surface area configuration component. For more information, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/security/surface-area-configuration\">Surface Area Configuration</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-components-surface-area-configuration-transact-sql\">sys.system_components_surface_area_configuration</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.UserToken.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.UserToken.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.UserToken",
      "Summary": "<p><strong>sys.user_token (Transact-SQL)</strong></p>\n<p><strong>APPLIES TO:</strong> (Yes) SQL Server (Yes) Azure SQL Database (Yes) Azure Synapse Analytics (No) Parallel Data Warehouse</p>\n<p>Returns one row for every database principal that is part of the user token in SQL Server.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-user-token-transact-sql\">sys.user_token</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SecuritySchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.Configuration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.Configuration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.Configuration",
      "Summary": "<p><strong>sys.configurations (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each server-wide configuration option value in the system.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-configurations-transact-sql\">sys.configurations</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TimeZoneInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TimeZoneInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TimeZoneInfo",
      "Summary": "<p><strong>sys.time_zone_info (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics</p>\n<p>Returns information about supported time zones. All time zones installed on the computer are stored in the following registry hive:<br>\n<code>KEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones</code>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-time-zone-info-transact-sql\">sys.time_zone_info</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.Trace.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.Trace.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.Trace",
      "Summary": "<p><strong>sys.traces (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>The <strong>sys.traces</strong> catalog view contains the current running traces on the system. This view is intended as a replacement for the <strong>fn_trace_getinfo</strong> function.<br>\n For a complete list of supported trace events, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference\">SQL Server Event Class Reference</a>.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-traces-transact-sql\">sys.traces</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceCategory.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceCategory.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceCategory",
      "Summary": "<p><strong>sys.trace_categories (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Similar event classes are grouped by a category. Each row in the <strong>sys.trace_categories</strong> catalog view identifies a category that is unique across the server. These categories do not change for a given version of the SQL Server Database Engine.<br>\n For a complete list of supported trace events, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference\">SQL Server Event Class Reference</a>.<br>\n> <strong>IMPORTANT!</strong> This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trace-categories-transact-sql\">sys.trace_categories</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceColumn",
      "Summary": "<p><strong>sys.trace_columns (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>The <strong>sys.trace_columns</strong> catalog view contains a list of all trace event columns. These columns do not change for a given version of the SQL Server Database Engine.<br>\n For a complete list of supported trace events, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference\">SQL Server Event Class Reference</a>.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trace-columns-transact-sql\">sys.trace_columns</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceEvent.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceEvent.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceEvent",
      "Summary": "<p><strong>sys.trace_events (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>The <strong>sys.trace_events</strong> catalog view contains a list of all SQL trace events. These trace events do not change for a given version of the SQL Server Database Engine.<br>\n> <strong>IMPORTANT!</strong> This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.<br>\n For more information about these trace events, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference\">SQL Server Event Class Reference</a>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trace-events-transact-sql\">sys.trace_events</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceEventBinding.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceEventBinding.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceEventBinding",
      "Summary": "<p><strong>sys.trace_event_bindings (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>The <strong>sys.trace_event_bindings</strong> catalog view contains a list of all possible usage combinations of events and columns. For each event listed in the <strong>trace_event_id</strong> column, all available columns are listed in the <strong>trace_column_id</strong> column. Not all available columns are populated each time a given event occurs. These values do not change for a given version of the SQL Server Database Engine.<br>\n For a complete list of supported trace events, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference\">SQL Server Event Class Reference</a>.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trace-event-bindings-transact-sql\">sys.trace_event_bindings</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceSubclassValue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceSubclassValue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.TraceSubclassValue",
      "Summary": "<p><strong>sys.trace_subclass_values (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>The <strong>sys.trace_subclass_values</strong> catalog view contains a list of named column values. These subclass values do not change for a given version of the SQL Server Database Engine.<br>\n For a complete list of supported trace events, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference\">SQL Server Event Class Reference</a>.<br>\n<div class=\"IMPORTANT\"><h5>important</h5><p><br>\nThis feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trace-subclass-values-transact-sql\">sys.trace_subclass_values</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServerWideConfigurationSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ConversationEndpoint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ConversationEndpoint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ConversationEndpoint",
      "Summary": "<p><strong>sys.conversation_endpoints (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Each side of a Service Broker conversation is represented by a conversation endpoint. This catalog view contains a row per conversation endpoint in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-conversation-endpoints-transact-sql\">sys.conversation_endpoints</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ConversationGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ConversationGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ConversationGroup",
      "Summary": "<p><strong>sys.conversation_groups (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view contains a row for each conversation group.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-conversation-groups-transact-sql\">sys.conversation_groups</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ConversationPriority.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ConversationPriority.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ConversationPriority",
      "Summary": "<p><strong>sys.conversation_priorities (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each conversation priority created in the current database, as shown in the following table:</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-conversation-priorities-transact-sql\">sys.conversation_priorities</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.MessageTypeXmlSchemaCollectionUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.MessageTypeXmlSchemaCollectionUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.MessageTypeXmlSchemaCollectionUsage",
      "Summary": "<p><strong>sys.message_type_xml_schema_collection_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view returns a row for each service message type that is validated by an XML schema collection.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-message-type-xml-schema-collection-usages-transact-sql\">sys.message_type_xml_schema_collection_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.RemoteServiceBinding.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.RemoteServiceBinding.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.RemoteServiceBinding",
      "Summary": "<p><strong>sys.remote_service_bindings (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view contains a row per remote service binding.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-remote-service-bindings-transact-sql\">sys.remote_service_bindings</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.Route.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.Route.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.Route",
      "Summary": "<p><strong>sys.routes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions) √ Azure SQL Managed Instance</p>\n<p>This catalog views contains one row per route. Service Broker uses routes to locate the network address for a service.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-routes-transact-sql\">sys.routes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.Service.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.Service.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.Service",
      "Summary": "<p><strong>sys.services (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view contains a row for each service in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-services-transact-sql\">sys.services</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceContract.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceContract.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceContract",
      "Summary": "<p><strong>sys.service_contracts (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view contains a row for each contract in the database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-contracts-transact-sql\">sys.service_contracts</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceContractMessageUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceContractMessageUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceContractMessageUsage",
      "Summary": "<p><strong>sys.service_contract_message_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view contains a row per (contract, message type) pair.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-contract-message-usages-transact-sql\">sys.service_contract_message_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceContractUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceContractUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceContractUsage",
      "Summary": "<p><strong>sys.service_contract_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view contains a row per (service, contract) pair.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-contract-usages-transact-sql\">sys.service_contract_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceMessageType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceMessageType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceMessageType",
      "Summary": "<p><strong>sys.service_message_types (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view contains a row per message type registered in the service broker.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-message-types-transact-sql\">sys.service_message_types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceQueue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceQueue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceQueue",
      "Summary": "<p><strong>sys.service_queues (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Contains a row for each object in the database that is a service queue, with <strong>sys.objects.type</strong> = SQ.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-queues-transact-sql\">sys.service_queues</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceQueueUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceQueueUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.ServiceQueueUsage",
      "Summary": "<p><strong>sys.service_queue_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view returns a row for each reference between service and service queue. A service can only be associated with one queue. A queue can be associated with multiple services.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-queue-usages-transact-sql\">sys.service_queue_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.TransmissionQueue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.TransmissionQueue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.TransmissionQueue",
      "Summary": "<p><strong>sys.transmission_queue (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>This catalog view contains a row for each message in the transmission queue, as shown in the following table:</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-transmission-queue-transact-sql\">sys.transmission_queue</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.ServiceBrokerSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.SpatialIndex.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.SpatialIndex.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.SpatialIndex",
      "Summary": "<p><strong>sys.spatial_indexes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Represents the main index information of the spatial indexes.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-spatial-indexes-transact-sql\">sys.spatial_indexes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.SpatialIndexTessellation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.SpatialIndexTessellation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.SpatialIndexTessellation",
      "Summary": "<p><strong>sys.spatial_index_tessellations (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p> Represents the information about the tessellation scheme and parameters of each of the spatial indexes.<br>\n<div class=\"NOTE\"><h5>note</h5><p><br>\nFor information about tessellation, see <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/spatial/spatial-indexes-overview\">Spatial Indexes Overview</a>.<br>\n</p></div><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-spatial-index-tessellations-transact-sql\">sys.spatial_index_tessellations</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.SpatialReferenceSystem.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.SpatialReferenceSystem.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.SpatialReferenceSystem",
      "Summary": "<p><strong>sys.spatial_reference_systems (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Lists the spatial reference systems (SRIDs) supported by SQL Server.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-spatial-reference-systems-transact-sql\">sys.spatial_reference_systems</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SpatialDataSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.RemoteDataArchiveDatabase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.RemoteDataArchiveDatabase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.RemoteDataArchiveDatabase",
      "Summary": "<p><strong>Stretch Database Catalog Views - sys.remote_data_archive_databases</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later</p>\n<p>Contains one row for each remote database that stores data from a Stretch-enabled local database.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/stretch-database-catalog-views-sys-remote-data-archive-databases\">sys.remote_data_archive_databases</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.RemoteDataArchiveTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.RemoteDataArchiveTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.RemoteDataArchiveTable",
      "Summary": "<p><strong>Stretch Database Catalog Views - sys.remote_data_archive_tables</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server 2016 (13.x) and later</p>\n<p>Contains one row for each remote table that stores data from a Stretch-enabled local table.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/stretch-database-catalog-views-sys-remote-data-archive-tables\">sys.remote_data_archive_tables</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.StretchDatabaseSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SystemDB.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SystemDB.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SystemDB",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SystemDB.yml\" sourcestartlinenumber=\"1\">Database       : master\nData Source    : .\nServer Version : 15.00.2101</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SystemSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.SystemSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.SystemSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.ColumnXmlSchemaCollectionUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.ColumnXmlSchemaCollectionUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.ColumnXmlSchemaCollectionUsage",
      "Summary": "<p><strong>sys.column_xml_schema_collection_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row for each column that is validated by an XML schema.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-xml-schema-collection-usages-transact-sql\">sys.column_xml_schema_collection_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.DataContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.ParameterXmlSchemaCollectionUsage.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.ParameterXmlSchemaCollectionUsage.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.ParameterXmlSchemaCollectionUsage",
      "Summary": "<p><strong>sys.parameter_xml_schema_collection_usages (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns a row for each parameter that is validated by an XML schema.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-parameter-xml-schema-collection-usages-transact-sql\">sys.parameter_xml_schema_collection_usages</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.SelectiveXmlIndexPath.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.SelectiveXmlIndexPath.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.SelectiveXmlIndexPath",
      "Summary": "<p><strong>sys.selective_xml_index_paths (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Available beginning in SQL Server 2012 (11.x) Service Pack 1, each row in sys.selective_xml_index_paths represents one promoted path for particular selective xml index.<br>\nIf you create a selective xml index on xmlcol of table T using following statement,<br>\n<pre><code class=\"lang-csharp\">CREATE SELECTIVE XML INDEX sxi1 ON T(xmlcol) \nFOR ( path1 = '/a/b/c' AS XQUERY 'xs:string',\n    path2 = '/a/b/d' AS XQUERY 'xs:double'\n  )</code></pre><br>\n<p sourcefile=\"api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.SelectiveXmlIndexPath.yml\" sourcestartlinenumber=\"10\">There will be two new rows in sys.selective_xml_index_paths corresponding to the index sxi1.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-selective-xml-index-paths-transact-sql\">sys.selective_xml_index_paths</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlIndex.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlIndex.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlIndex",
      "Summary": "<p><strong>sys.xml_indexes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns one row per XML index.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-indexes-transact-sql\">sys.xml_indexes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaAttribute",
      "Summary": "<p><strong>sys.xml_schema_attributes (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per XML schema component that is an attribute, <strong>symbol_space</strong> of <strong>A</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-attributes-transact-sql\">sys.xml_schema_attributes</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaCollection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaCollection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaCollection",
      "Summary": "<p><strong>sys.xml_schema_collections (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)  √ Azure SQL Database</p>\n<p>Returns a row per XML schema collection. An XML schema collection is a named set of XSD definitions. The XML schema collection itself is contained in a relational schema, and it is identified by a schema-scoped Transact\\-SQL name. The following tuples are unique: xml_collection_id, and schema_id and name.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-collections-transact-sql\">sys.xml_schema_collections</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaComponent.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaComponent.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaComponent",
      "Summary": "<p><strong>sys.xml_schema_components (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per component of an XML schema. The pair (<strong>collection_id</strong>, <strong>namespace_id</strong>) is a compound foreign key to the containing namespace. For named components, the values for <strong>symbol_space</strong>, <strong>name</strong>, <strong>scoping_xml_component_id</strong>, <strong>is_qualified</strong>, <strong>xml_namespace_id</strong>, <strong>xml_collection_id</strong> are unique.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-components-transact-sql\">sys.xml_schema_components</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaComponentPlacement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaComponentPlacement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaComponentPlacement",
      "Summary": "<p><strong>sys.xml_schema_component_placements (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per placement for XML schema components.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-component-placements-transact-sql\">sys.xml_schema_component_placements</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaElement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaElement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaElement",
      "Summary": "<p><strong>sys.xml_schema_elements (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per XML schema component that is a Type, <strong>symbol_space</strong> of <strong>E</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-elements-transact-sql\">sys.xml_schema_elements</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaFacet.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaFacet.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaFacet",
      "Summary": "<p><strong>sys.xml_schema_facets (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per facet (restriction) of an xml-type definition (corresponds to <strong>sys.xml_types</strong>).</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-facets-transact-sql\">sys.xml_schema_facets</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaModelGroup.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaModelGroup.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaModelGroup",
      "Summary": "<p><strong>sys.xml_schema_model_groups (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per XML schema component that is a Model-Group, <strong>symbol_space</strong> of <strong>M</strong>..</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-model-groups-transact-sql\">sys.xml_schema_model_groups</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaNamespace.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaNamespace.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaNamespace",
      "Summary": "<p><strong>sys.xml_schema_namespaces (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per XSD-defined XML namespace. The following tuples are unique: <strong>collection_id</strong>, <strong>namespace_id</strong>, and <strong>collection_id</strong>, and <strong>name</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-namespaces-transact-sql\">sys.xml_schema_namespaces</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaType",
      "Summary": "<p><strong>sys.xml_schema_types (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per XML schema component that is a Type, <strong>symbol_space</strong> of <strong>T</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-types-transact-sql\">sys.xml_schema_types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaWildcard.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaWildcard.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaWildcard",
      "Summary": "<p><strong>sys.xml_schema_wildcards (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per XML schema component that is an Attribute-Wildcard (<strong>kind</strong> of <strong>V</strong>) or Element-Wildcard (<strong>kind</strong> of <strong>W</strong>), both with <strong>symbol_space</strong> of <strong>N</strong>.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-wildcards-transact-sql\">sys.xml_schema_wildcards</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaWildcardNamespace.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaWildcardNamespace.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.XmlSchemaWildcardNamespace",
      "Summary": "<p><strong>sys.xml_schema_wildcard_namespaces (Transact-SQL)</strong></p>\n<p><strong>Applies to:</strong> √ SQL Server (all supported versions)</p>\n<p>Returns a row per enumerated namespace for an XML schema wildcard.</p><br>\n<p>See <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-wildcard-namespaces-transact-sql\">sys.xml_schema_wildcard_namespaces</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas.XmlSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.DataProvider.SqlServer.Schemas.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataProvider.SqlServer.Schemas",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.EntityServices.EntityMap-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.EntityServices.EntityMap-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.EntityServices.EntityMap<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.EntityServices.EntityMapEntry-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.EntityServices.EntityMapEntry-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.EntityServices.EntityMapEntry<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.EntityServices.IdentityMap.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.EntityServices.IdentityMap.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.EntityServices.IdentityMap",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.EntityServices.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.EntityServices.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.EntityServices",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.EnumerableExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.EnumerableExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.EnumerableExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.IMapperBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.IMapperBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Mapper.IMapperBuilder",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Tools.Mapper.IMapperBuilder.yml\" sourcestartlinenumber=\"1\">Builds a mapper that maps an object of <i>TFrom</i> type to an object of <i>TTo</i> type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.Map.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.Map.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Mapper.Map",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Tools.Mapper.Map.yml\" sourcestartlinenumber=\"1\">Mapper helper class.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.Mapper-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.Mapper-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Mapper.Mapper<TFrom, TTo>",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Tools.Mapper.Mapper-2.yml\" sourcestartlinenumber=\"1\">Maps an object of <i>TFrom</i> type to an object of <i>TTo</i> type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.MapperBuilder-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.MapperBuilder-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Mapper.MapperBuilder<TFrom, TTo>",
      "Summary": "<p sourcefile=\"api/linq2db.tools/LinqToDB.Tools.Mapper.MapperBuilder-2.yml\" sourcestartlinenumber=\"1\">Builds a mapper that maps an object of <i>TFrom</i> type to an object of <i>TTo</i> type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.MemberMapperInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.MemberMapperInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Mapper.MemberMapperInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.Mapper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.Mapper",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.MappingSchemaExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.MappingSchemaExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.MappingSchemaExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.Tools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.Tools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db.tools/LinqToDB.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/LinqToDB.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB",
      "Summary": null
    },
    {
      "type": "Toc",
      "source_relative_path": "api/linq2db.tools/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db.tools/toc.html"
        },
        ".json": {
          "relative_path": "api/linq2db.tools/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.AnalyticFunctions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.AnalyticFunctions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.AnalyticFunctions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Async.AsyncDbConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Async.AsyncDbConnection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Async.AsyncDbConnection",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Async.AsyncDbConnection.yml\" sourcestartlinenumber=\"1\">Implements <xref href=\"LinqToDB.Async.IAsyncDbConnection\" data-throw-if-not-resolved=\"false\"></xref> wrapper over <xref href=\"System.Data.Common.DbConnection\" data-throw-if-not-resolved=\"false\"></xref> instance with\nsynchronous implementation of asynchronous methods.\nProviders with async operations support could override its methods with asynchronous implementations.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Async.AsyncDbTransaction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Async.AsyncDbTransaction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Async.AsyncDbTransaction",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Async.AsyncDbTransaction.yml\" sourcestartlinenumber=\"1\">Basic <xref href=\"LinqToDB.Async.IAsyncDbTransaction\" data-throw-if-not-resolved=\"false\"></xref> implementation with fallback to synchronous operations if corresponding functionality\nmissing from <xref href=\"System.Data.Common.DbTransaction\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Async.AsyncFactory.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Async.AsyncFactory.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Async.AsyncFactory",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Async.AsyncFactory.yml\" sourcestartlinenumber=\"1\">Provides factory methods to create async wrappers for <xref href=\"System.Data.Common.DbConnection\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Data.Common.DbTransaction\" data-throw-if-not-resolved=\"false\"></xref> instances.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Async.IAsyncDbConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Async.IAsyncDbConnection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Async.IAsyncDbConnection",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Async.IAsyncDbConnection.yml\" sourcestartlinenumber=\"1\">Wrapper over <xref href=\"System.Data.Common.DbConnection\" data-throw-if-not-resolved=\"false\"></xref> instance which contains all operations that could have custom implementation like:</p>\n<ul><li><xref href=\"LinqToDB.Data.RetryPolicy.IRetryPolicy\" data-throw-if-not-resolved=\"false\"></xref> support</li><li>asynchronous operations, missing from <xref href=\"System.Data.Common.DbConnection\" data-throw-if-not-resolved=\"false\"></xref> but provided by data provider implementation.</li></ul>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Async.IAsyncDbTransaction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Async.IAsyncDbTransaction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Async.IAsyncDbTransaction",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Async.IAsyncDbTransaction.yml\" sourcestartlinenumber=\"1\">Wrapper over <xref href=\"System.Data.Common.DbTransaction\" data-throw-if-not-resolved=\"false\"></xref> instance with asynchronous operations, missing from <xref href=\"System.Data.Common.DbTransaction\" data-throw-if-not-resolved=\"false\"></xref>.\nIncludes only operations, used by Linq To DB.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Async.IAsyncDisposable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Async.IAsyncDisposable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Async.IAsyncDisposable",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Async.IAsyncDisposable.yml\" sourcestartlinenumber=\"1\">Provides a mechanism for releasing unmanaged resources asynchronously.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Async.IAsyncEnumerable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Async.IAsyncEnumerable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Async.IAsyncEnumerable<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Async.IAsyncEnumerable-1.yml\" sourcestartlinenumber=\"1\">This API supports the LinqToDB infrastructure and is not intended to be used  directly from your code.\nThis API may change or be removed in future releases.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Async.IAsyncEnumerator-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Async.IAsyncEnumerator-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Async.IAsyncEnumerator<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Async.IAsyncEnumerator-1.yml\" sourcestartlinenumber=\"1\">Asynchronous version of the IEnumerator&lt;T&gt; interface, allowing elements to be retrieved asynchronously.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Async.IQueryProviderAsync.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Async.IQueryProviderAsync.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Async.IQueryProviderAsync",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Async.IQueryProviderAsync.yml\" sourcestartlinenumber=\"1\">This is internal API and is not intended for use by Linq To DB applications.\nIt may change or be removed without further notice.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Async.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Async.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Async",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.AsyncExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.AsyncExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.AsyncExtensions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.AsyncExtensions.yml\" sourcestartlinenumber=\"1\">Provides helper methods for asynchronous operations.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Array-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Array-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Array<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Array-1.yml\" sourcestartlinenumber=\"1\">Empty array instance helper.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Compilation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Compilation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Compilation",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Compilation.yml\" sourcestartlinenumber=\"1\">Contains LINQ expression compilation options.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Configuration.Data.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Configuration.Data.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Configuration.Data",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Configuration.Linq.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Configuration.Linq.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Configuration.Linq",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Configuration.Linq.yml\" sourcestartlinenumber=\"1\">LINQ query settings.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Configuration.LinqService.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Configuration.LinqService.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Configuration.LinqService",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Configuration.LinqService.yml\" sourcestartlinenumber=\"1\">Linq over WCF global settings.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Configuration.RetryPolicy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Configuration.RetryPolicy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Configuration.RetryPolicy",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Configuration.RetryPolicy.yml\" sourcestartlinenumber=\"1\">Retry policy global settings.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Configuration.Sql.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Configuration.Sql.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Configuration.Sql",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Configuration.Sql.yml\" sourcestartlinenumber=\"1\">SQL generation global settings.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Configuration.SqlServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Configuration.SqlServer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Configuration.SqlServer",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Configuration.SqlServer.yml\" sourcestartlinenumber=\"1\">SqlServer specific global settings.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Configuration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Configuration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Configuration",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Configuration.yml\" sourcestartlinenumber=\"1\">Contains global linq2db settings.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.ConversionType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.ConversionType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.ConversionType",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.ConversionType.yml\" sourcestartlinenumber=\"1\">Defines conversion type such as to database / from database conversion direction.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Convert-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Convert-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Convert<TFrom, TTo>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Convert-2.yml\" sourcestartlinenumber=\"1\">Converters provider for value conversion from <code class=\"typeparamref\">TFrom</code> to <code class=\"typeparamref\">TTo</code> type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.ConvertBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.ConvertBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.ConvertBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.ConvertTo-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.ConvertTo-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.ConvertTo<TTo>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.ConvertTo-1.yml\" sourcestartlinenumber=\"1\">Value converter to <code class=\"typeparamref\">TTo</code> type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Converter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Converter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Converter",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Converter.yml\" sourcestartlinenumber=\"1\">Type conversion manager.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.DbDataType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.DbDataType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.DbDataType",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.DbDataType.yml\" sourcestartlinenumber=\"1\">Stores database type attributes.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.DefaultValue-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.DefaultValue-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.DefaultValue<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.DefaultValue-1.yml\" sourcestartlinenumber=\"1\">Default value provider for specific type.\nDefault value used for mapping from NULL database value to C# value.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.DefaultValue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.DefaultValue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.DefaultValue",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.DefaultValue.yml\" sourcestartlinenumber=\"1\">Default value provider.\nDefault value used for mapping from NULL database value to C# value.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.EnumerableHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.EnumerableHelper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.EnumerableHelper",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.IOptionSet.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.IOptionSet.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.IOptionSet",
      "Summary": "<p>\nInterface for extensions that are stored in <xref href=\"LinqToDB.Common.IOptionsContainer.OptionSets\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nThis interface is typically used by database providers (and other extensions).\nIt is generally not used in application code.\n</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.IValueConverter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.IValueConverter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.IValueConverter",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.IValueConverter.yml\" sourcestartlinenumber=\"1\">Defines conversions from an object of one type in a model to an object of the same or\ndifferent type in the database.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.CacheEntryExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.CacheEntryExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.CacheEntryExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.CacheExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.CacheExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.CacheExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.CacheItemPriority.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.CacheItemPriority.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.CacheItemPriority",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.Cache.CacheItemPriority.yml\" sourcestartlinenumber=\"1\">Specifies how items are prioritized for preservation during a memory pressure triggered cleanup.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.EvictionReason.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.EvictionReason.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.EvictionReason",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.ICacheEntry-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.ICacheEntry-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.ICacheEntry<TKey, TEntity>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.Cache.ICacheEntry-2.yml\" sourcestartlinenumber=\"1\">Represents an entry in the <xref href=\"LinqToDB.Common.Internal.Cache.IMemoryCache%602\" data-throw-if-not-resolved=\"false\"></xref> implementation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.IChangeToken.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.IChangeToken.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.IChangeToken",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.Cache.IChangeToken.yml\" sourcestartlinenumber=\"1\">Propagates notifications that a change has occurred.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.IMemoryCache-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.IMemoryCache-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.IMemoryCache<TKey, TEntry>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.Cache.IMemoryCache-2.yml\" sourcestartlinenumber=\"1\">Represents a local in-memory cache whose values are not serialized.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.ISystemClock.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.ISystemClock.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.ISystemClock",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.Cache.ISystemClock.yml\" sourcestartlinenumber=\"1\">Abstracts the system clock to facilitate testing.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.MemoryCache-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.MemoryCache-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.MemoryCache<TKey, TEntry>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.Cache.MemoryCache-2.yml\" sourcestartlinenumber=\"1\">An implementation of <xref href=\"LinqToDB.Common.Internal.Cache.IMemoryCache%602\" data-throw-if-not-resolved=\"false\"></xref> using a dictionary to\nstore its entries.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.MemoryCacheEntryExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.MemoryCacheEntryExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.MemoryCacheEntryExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.MemoryCacheEntryOptions-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.MemoryCacheEntryOptions-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.MemoryCacheEntryOptions<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.Cache.MemoryCacheEntryOptions-1.yml\" sourcestartlinenumber=\"1\">Represents the cache options applied to an entry of the <xref href=\"LinqToDB.Common.Internal.Cache.IMemoryCache%602\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.MemoryCacheOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.MemoryCacheOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.MemoryCacheOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.PostEvictionCallbackRegistration-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.PostEvictionCallbackRegistration-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.PostEvictionCallbackRegistration<TKey>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.PostEvictionDelegate-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.PostEvictionDelegate-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.PostEvictionDelegate<TKey>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.Cache.PostEvictionDelegate-1.yml\" sourcestartlinenumber=\"1\">Signature of the callback which gets called when a cache entry expires.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.SystemClock.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.SystemClock.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache.SystemClock",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.Cache.SystemClock.yml\" sourcestartlinenumber=\"1\">Provides access to the normal system clock.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.Cache.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.Cache",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.IConfigurationID.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.IConfigurationID.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.IConfigurationID",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.IConfigurationID.yml\" sourcestartlinenumber=\"1\">For internal use.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.IdentifierBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.IdentifierBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.IdentifierBuilder",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Internal.IdentifierBuilder.yml\" sourcestartlinenumber=\"1\">Internal infrastructure API.\nProvides functionality for <xref href=\"LinqToDB.Common.Internal.IConfigurationID.ConfigurationID\" data-throw-if-not-resolved=\"false\"></xref> generation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.TypeExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.TypeExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal.TypeExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Internal.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Internal.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Internal",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.LinqToDBConvertException.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.LinqToDBConvertException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.LinqToDBConvertException",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.LinqToDBConvertException.yml\" sourcestartlinenumber=\"1\">Defines the base class for the namespace exceptions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Logging.LoggingExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Logging.LoggingExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Logging.LoggingExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Logging.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Logging.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Logging",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.MemberInfoEqualityComparer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.MemberInfoEqualityComparer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.MemberInfoEqualityComparer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Option-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Option-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Option<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Option-1.yml\" sourcestartlinenumber=\"1\">Option type implementation.\n<a href=\"https://en.wikipedia.org/wiki/Option_type\">Option type</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.OptionsContainer-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.OptionsContainer-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.OptionsContainer<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.OptionsContainer-1.yml\" sourcestartlinenumber=\"1\">Base class for options.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.RawSqlString.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.RawSqlString.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.RawSqlString",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.RawSqlString.yml\" sourcestartlinenumber=\"1\">A string representing a raw SQL query. This type enables overload resolution between\nthe regular and interpolated <xref href=\"LinqToDB.DataExtensions.FromSql%60%601(LinqToDB.IDataContext%2cLinqToDB.Common.RawSqlString%2cSystem.Object%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.StringBuilderExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.StringBuilderExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.StringBuilderExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Tools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Tools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Tools",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Common.Tools.yml\" sourcestartlinenumber=\"1\">Various general-purpose helpers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.TypeHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.TypeHelper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.TypeHelper",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Utils.ObjectReferenceEqualityComparer-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Utils.ObjectReferenceEqualityComparer-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Utils.ObjectReferenceEqualityComparer<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.Utils.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.Utils.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.Utils",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.ValueConverter-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.ValueConverter-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.ValueConverter<TModel, TProvider>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.ValueConverterFunc-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.ValueConverterFunc-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common.ValueConverterFunc<TModel, TProvider>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Common.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Common.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Common",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.CompiledQuery.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.CompiledQuery.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.CompiledQuery",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.CompiledQuery.yml\" sourcestartlinenumber=\"1\">Provides API for compilation and caching of queries for reuse.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Concurrency.ConcurrencyExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Concurrency.ConcurrencyExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Concurrency.ConcurrencyExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Concurrency.OptimisticLockPropertyAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Concurrency.OptimisticLockPropertyAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Concurrency.OptimisticLockPropertyAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Concurrency.OptimisticLockPropertyAttribute.yml\" sourcestartlinenumber=\"1\">Implements built-in optimistic lock value generation strategies for updates.\nSee <xref href=\"LinqToDB.Concurrency.VersionBehavior\" data-throw-if-not-resolved=\"false\"></xref> for supported strategies.\nUsed with <xref href=\"LinqToDB.Concurrency.ConcurrencyExtensions\" data-throw-if-not-resolved=\"false\"></xref> extensions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Concurrency.OptimisticLockPropertyBaseAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Concurrency.OptimisticLockPropertyBaseAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Concurrency.OptimisticLockPropertyBaseAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Concurrency.OptimisticLockPropertyBaseAttribute.yml\" sourcestartlinenumber=\"1\">Defines optimistic lock column value generation strategy for update.\nUsed with <xref href=\"LinqToDB.Concurrency.ConcurrencyExtensions\" data-throw-if-not-resolved=\"false\"></xref> extensions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Concurrency.VersionBehavior.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Concurrency.VersionBehavior.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Concurrency.VersionBehavior",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Concurrency.VersionBehavior.yml\" sourcestartlinenumber=\"1\">Defines optimistic lock column value generation strategy on record update.\nUsed with <xref href=\"LinqToDB.Concurrency.OptimisticLockPropertyAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"LinqToDB.Concurrency.ConcurrencyExtensions\" data-throw-if-not-resolved=\"false\"></xref> extensions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Concurrency.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Concurrency.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Concurrency",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.ConnectionStringSettings.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.ConnectionStringSettings.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.ConnectionStringSettings",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.ConnectionStringSettings.yml\" sourcestartlinenumber=\"1\">Provides explicitly-defined <xref href=\"LinqToDB.Configuration.IConnectionStringSettings\" data-throw-if-not-resolved=\"false\"></xref> implementation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.DataProviderElement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.DataProviderElement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.DataProviderElement",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.DataProviderElement.yml\" sourcestartlinenumber=\"1\">Data provider configuration element.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.DataProviderElementCollection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.DataProviderElementCollection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.DataProviderElementCollection",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.DataProviderElementCollection.yml\" sourcestartlinenumber=\"1\">Collection of data provider configuration elements.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.ElementBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.ElementBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.ElementBase",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.ElementBase.yml\" sourcestartlinenumber=\"1\">Configuration section element.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.ElementCollectionBase-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.ElementCollectionBase-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.ElementCollectionBase<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.ElementCollectionBase-1.yml\" sourcestartlinenumber=\"1\">Collection of configuration section elements.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.IConnectionStringSettings.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.IConnectionStringSettings.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.IConnectionStringSettings",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.IConnectionStringSettings.yml\" sourcestartlinenumber=\"1\">Connection string configuration provider.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.IDataProviderSettings.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.IDataProviderSettings.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.IDataProviderSettings",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.IDataProviderSettings.yml\" sourcestartlinenumber=\"1\">Data provider configuration provider.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.ILinqToDBSettings.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.ILinqToDBSettings.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.ILinqToDBSettings",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.ILinqToDBSettings.yml\" sourcestartlinenumber=\"1\">Settings provider interface.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.LinqToDBSection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.LinqToDBSection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.LinqToDBSection",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.LinqToDBSection.yml\" sourcestartlinenumber=\"1\">Implementation of custom configuration section.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.LinqToDBSettings.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.LinqToDBSettings.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.LinqToDBSettings",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.LinqToDBSettings.yml\" sourcestartlinenumber=\"1\">Provides explicitly-defined <xref href=\"LinqToDB.Configuration.ILinqToDBSettings\" data-throw-if-not-resolved=\"false\"></xref> implementation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.NamedValue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.NamedValue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration.NamedValue",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Configuration.NamedValue.yml\" sourcestartlinenumber=\"1\">Name-value pair.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Configuration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Configuration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Configuration",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.BulkCopyOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.BulkCopyOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.BulkCopyOptions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Data.BulkCopyOptions.yml\" sourcestartlinenumber=\"1\">Defines behavior of <xref href=\"LinqToDB.Data.DataConnectionExtensions.BulkCopy%60%601(LinqToDB.Data.DataConnection%2cLinqToDB.Data.BulkCopyOptions%2cSystem.Collections.Generic.IEnumerable%7b%60%600%7d)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.BulkCopyRowsCopied.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.BulkCopyRowsCopied.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.BulkCopyRowsCopied",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.BulkCopyType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.BulkCopyType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.BulkCopyType",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Data.BulkCopyType.yml\" sourcestartlinenumber=\"1\">Bulk copy implementation type.\nFor more details on support level by provider see\n<a href=\"https://github.com/linq2db/linq2db/wiki/Bulk-Copy\">this article</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.CommandInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.CommandInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.CommandInfo",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Data.CommandInfo.yml\" sourcestartlinenumber=\"1\">Provides database connection command abstraction.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.ConnectionOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.ConnectionOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.ConnectionOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.DataConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.DataConnection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.DataConnection",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Data.DataConnection.yml\" sourcestartlinenumber=\"1\">Implements persistent database connection abstraction over different database engines.\nCould be initialized using connection string name or connection string,\nor attached to existing connection or transaction.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.DataConnectionExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.DataConnectionExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.DataConnectionExtensions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Data.DataConnectionExtensions.yml\" sourcestartlinenumber=\"1\">Contains extension methods for <xref href=\"LinqToDB.Data.DataConnection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.DataConnectionTransaction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.DataConnectionTransaction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.DataConnectionTransaction",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Data.DataConnectionTransaction.yml\" sourcestartlinenumber=\"1\">Data connection transaction controller.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.DataParameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.DataParameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.DataParameter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.DataReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.DataReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.DataReader",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.DataReaderAsync.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.DataReaderAsync.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.DataReaderAsync",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.DataReaderWrapper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.DataReaderWrapper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.DataReaderWrapper",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Data.DataReaderWrapper.yml\" sourcestartlinenumber=\"1\">Disposable wrapper over <xref href=\"System.Data.Common.DbDataReader\" data-throw-if-not-resolved=\"false\"></xref> instance, which properly disposes associated objects.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.QueryTraceOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.QueryTraceOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.QueryTraceOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.RetryPolicy.IRetryPolicy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.RetryPolicy.IRetryPolicy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.RetryPolicy.IRetryPolicy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.RetryPolicy.RetryLimitExceededException.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.RetryPolicy.RetryLimitExceededException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.RetryPolicy.RetryLimitExceededException",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.RetryPolicy.RetryPolicyBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.RetryPolicy.RetryPolicyBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.RetryPolicy.RetryPolicyBase",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.RetryPolicy.RetryPolicyOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.RetryPolicy.RetryPolicyOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.RetryPolicy.RetryPolicyOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.RetryPolicy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.RetryPolicy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.RetryPolicy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.TraceInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.TraceInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.TraceInfo",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Data.TraceInfo.yml\" sourcestartlinenumber=\"1\">Tracing information for the <xref href=\"LinqToDB.Data.TraceInfo.DataConnection\" data-throw-if-not-resolved=\"false\"></xref> events.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.TraceInfoStep.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.TraceInfoStep.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.TraceInfoStep",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Data.TraceInfoStep.yml\" sourcestartlinenumber=\"1\">Tracing steps for the <xref href=\"LinqToDB.Data.DataConnection\" data-throw-if-not-resolved=\"false\"></xref> trace events.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.TraceOperation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.TraceOperation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data.TraceOperation",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Data.TraceOperation.yml\" sourcestartlinenumber=\"1\">Type of operation associated with specific trace event.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Data.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Data.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Data",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataContext",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataContext.yml\" sourcestartlinenumber=\"1\">Implements abstraction over non-persistent database connection that could be released after query or transaction execution.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataContextOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataContextOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataContextOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataContextTransaction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataContextTransaction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataContextTransaction",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataContextTransaction.yml\" sourcestartlinenumber=\"1\">Explicit data context <xref href=\"LinqToDB.DataContextTransaction.DataContext\" data-throw-if-not-resolved=\"false\"></xref> transaction wrapper.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataExtensions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataExtensions.yml\" sourcestartlinenumber=\"1\">Data context extension methods.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataOptions-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataOptions-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataOptions<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataOptions-1.yml\" sourcestartlinenumber=\"1\">Typed <xref href=\"LinqToDB.DataOptions\" data-throw-if-not-resolved=\"false\"></xref> wrapper to support multiple option objects registration in DI containers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataOptions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataOptions.yml\" sourcestartlinenumber=\"1\">Immutable context configuration object.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataOptionsExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataOptionsExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataOptionsExtensions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataOptionsExtensions.yml\" sourcestartlinenumber=\"1\">Set of extensions for <xref href=\"LinqToDB.DataOptions\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessHints.Query.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessHints.Query.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Access.AccessHints.Query",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessHints.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessHints.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Access.AccessHints",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessODBCDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessODBCDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Access.AccessODBCDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessOleDbDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessOleDbDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Access.AccessOleDbDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Access.AccessOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Access.AccessTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Access.AccessTools",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.Access.AccessTools.yml\" sourcestartlinenumber=\"1\">Contains Access provider management tools.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Access.IAccessSpecificQueryable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Access.IAccessSpecificQueryable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Access.IAccessSpecificQueryable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Access.IAccessSpecificTable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Access.IAccessSpecificTable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Access.IAccessSpecificTable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Access.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Access.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Access",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.BasicBulkCopy.ProviderConnections.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.BasicBulkCopy.ProviderConnections.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.BasicBulkCopy.ProviderConnections",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.BasicBulkCopy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.BasicBulkCopy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.BasicBulkCopy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.BulkCopyReader-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.BulkCopyReader-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.BulkCopyReader<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.BulkCopyReader.Parameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.BulkCopyReader.Parameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.BulkCopyReader.Parameter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.BulkCopyReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.BulkCopyReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.BulkCopyReader",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseConfiguration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseConfiguration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseConfiguration",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseHints.Join.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseHints.Join.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseHints.Join",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseHints.Query.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseHints.Query.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseHints.Query",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseHints.Table.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseHints.Table.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseHints.Table",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseHints.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseHints.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseHints",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseProvider",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProvider.yml\" sourcestartlinenumber=\"1\">Defines supported ClickHouse ADO.NET provider implementation libraries.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.OctonicaWrappers.ClickHouseColumnSettings.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.OctonicaWrappers.ClickHouseColumnSettings.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.OctonicaWrappers.ClickHouseColumnSettings",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.OctonicaWrappers.ClickHouseColumnWriter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.OctonicaWrappers.ClickHouseColumnWriter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.OctonicaWrappers.ClickHouseColumnWriter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.OctonicaWrappers.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.OctonicaWrappers.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.OctonicaWrappers",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.OctonicaWrappers.yml\" sourcestartlinenumber=\"1\">Octonica.ClicHouseClient wappers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseRetryPolicy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseRetryPolicy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseRetryPolicy",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseRetryPolicy.yml\" sourcestartlinenumber=\"1\">Retry policy handles only following exceptions:</p>\n<ul><li>Octonica client ClickHouseException with codes ClickHouseErrorCodes.InvalidConnectionState, ClickHouseErrorCodes.ConnectionClosed, ClickHouseErrorCodes.NetworkError</li><li>MySqlConnector <code>MySqlException.IsTransient == true</code> (requires .NET 6+ and MySqlConnector 1.3.0 or greater)</li></ul>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseTransientExceptionDetector.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseTransientExceptionDetector.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.ClickHouseTransientExceptionDetector",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.ClickHouse.ClickHouseTransientExceptionDetector.yml\" sourcestartlinenumber=\"1\">Detects the exceptions caused by transient failures.\nCurrently handles only:</p>\n<ul><li>Octonica client ClickHouseException with codes ClickHouseErrorCodes.InvalidConnectionState, ClickHouseErrorCodes.ConnectionClosed, ClickHouseErrorCodes.NetworkError</li></ul>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.IClickHouseSpecificQueryable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.IClickHouseSpecificQueryable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.IClickHouseSpecificQueryable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.IClickHouseSpecificTable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.IClickHouseSpecificTable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse.IClickHouseSpecificTable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ClickHouse.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ClickHouse",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2BulkCopyShared.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2BulkCopyShared.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2BulkCopyShared",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2DataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2DataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2DataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2IdentifierQuoteMode.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2IdentifierQuoteMode.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2IdentifierQuoteMode",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.DB2.DB2IdentifierQuoteMode.yml\" sourcestartlinenumber=\"1\">Identifier quotation logic for SQL generation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2Options.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2Options.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2Options",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.BulkCopyAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.BulkCopyAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter.BulkCopyAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopyColumnMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopyColumnMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopyColumnMapping",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopyColumnMappingCollection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopyColumnMappingCollection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopyColumnMappingCollection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopyOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopyOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2BulkCopyOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2Connection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2Connection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2RowsCopiedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2RowsCopiedEventArgs.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2RowsCopiedEventArgs",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2RowsCopiedEventHandler.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2RowsCopiedEventHandler.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2RowsCopiedEventHandler",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2ServerTypes.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2ServerTypes.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2ServerTypes",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2Type.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2Type.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter.DB2Type",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2ProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2ProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2Tools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2Tools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2Tools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2Version.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.DB2Version.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2.DB2Version",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DB2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DB2",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DataProviderBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DataProviderBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DataProviderBase",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DataProviderOptions-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DataProviderOptions-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DataProviderOptions<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DataTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DataTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DataTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.DynamicDataProviderBase-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.DynamicDataProviderBase-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.DynamicDataProviderBase<TProviderMappings>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdConfiguration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdConfiguration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.FirebirdConfiguration",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.FirebirdDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.FirebirdExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdIdentifierQuoteMode.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdIdentifierQuoteMode.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.FirebirdIdentifierQuoteMode",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdIdentifierQuoteMode.yml\" sourcestartlinenumber=\"1\">Possible modes for Firebird identifier quotes. This enumeration covers only identifier quotation logic\nand don't handle identifier length limits.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.FirebirdOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdProviderAdapter.FbDbType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdProviderAdapter.FbDbType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.FirebirdProviderAdapter.FbDbType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.FirebirdProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdSqlBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdSqlBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.FirebirdSqlBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdSqlOptimizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdSqlOptimizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.FirebirdSqlOptimizer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.FirebirdTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.FirebirdTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.IFirebirdExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.IFirebirdExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird.IFirebirdExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Firebird.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Firebird",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.IDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.IDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.IDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.IDataProviderFactory.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.IDataProviderFactory.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.IDataProviderFactory",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.IDynamicProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.IDynamicProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.IDynamicProviderAdapter",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.IDynamicProviderAdapter.yml\" sourcestartlinenumber=\"1\">Contains base information about ADO.NET provider.\nCould be extended by specific implementation to expose additional provider-specific services.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.IQueryParametersNormalizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.IQueryParametersNormalizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.IQueryParametersNormalizer",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.IQueryParametersNormalizer.yml\" sourcestartlinenumber=\"1\">Interface, implemented by query parameter name normalization policy for specific provider/database.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixConfiguration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixConfiguration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixConfiguration",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.BulkCopyAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.BulkCopyAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixProviderAdapter.BulkCopyAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopyColumnMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopyColumnMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopyColumnMapping",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopyColumnMappingCollection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopyColumnMappingCollection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopyColumnMappingCollection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopyOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopyOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxBulkCopyOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxConnection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxConnection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxRowsCopiedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxRowsCopiedEventArgs.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxRowsCopiedEventArgs",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxRowsCopiedEventHandler.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxRowsCopiedEventHandler.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxRowsCopiedEventHandler",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixProviderAdapter.IfxType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.InformixTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix.InformixTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Informix.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Informix",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MultipleRowsHelper-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MultipleRowsHelper-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MultipleRowsHelper<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MultipleRowsHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MultipleRowsHelper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MultipleRowsHelper",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.IMySqlExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.IMySqlExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.IMySqlExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.IMySqlSpecificQueryable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.IMySqlSpecificQueryable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.IMySqlSpecificQueryable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.IMySqlSpecificTable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.IMySqlSpecificTable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.IMySqlSpecificTable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlExtensions.MatchModifier.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlExtensions.MatchModifier.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlExtensions.MatchModifier",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.MySql.MySqlExtensions.MatchModifier.yml\" sourcestartlinenumber=\"1\">Search modifier for MATCH AGAINST full-text search predicate.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlHints.Query.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlHints.Query.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlHints.Query",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlHints.SubQuery.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlHints.SubQuery.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlHints.SubQuery",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlHints.Table.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlHints.Table.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlHints.Table",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlHints.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlHints.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlHints",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlProviderAdapter.BulkCopyAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlProviderAdapter.BulkCopyAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlProviderAdapter.BulkCopyAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlProviderAdapter.MySqlProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlProviderAdapter.MySqlProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlProviderAdapter.MySqlProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.MySqlTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql.MySqlTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.MySql.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.MySql",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.NoopQueryParametersNormalizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.NoopQueryParametersNormalizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.NoopQueryParametersNormalizer",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.NoopQueryParametersNormalizer.yml\" sourcestartlinenumber=\"1\">No-op query parameter normalization policy.\nCould be used for providers with positional nameless parameters or providers without database support.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.OdbcProviderAdapter.OdbcType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.OdbcProviderAdapter.OdbcType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.OdbcProviderAdapter.OdbcType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.OdbcProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.OdbcProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.OdbcProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.OleDbProviderAdapter.ColumnFlags.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.OleDbProviderAdapter.ColumnFlags.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.OleDbProviderAdapter.ColumnFlags",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.OleDbProviderAdapter.ColumnFlags.yml\" sourcestartlinenumber=\"1\">DBCOLUMNFLAGS OLE DB enumeration.\n<a href=\"https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ms722704(v=vs.85)\" sourcefile=\"api/linq2db/LinqToDB.DataProvider.OleDbProviderAdapter.ColumnFlags.yml\" sourcestartlinenumber=\"2\">https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ms722704(v=vs.85)</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.OleDbProviderAdapter.OleDbType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.OleDbProviderAdapter.OleDbType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.OleDbProviderAdapter.OleDbType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.OleDbProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.OleDbProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.OleDbProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.AlternativeBulkCopy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.AlternativeBulkCopy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.AlternativeBulkCopy",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.Oracle.AlternativeBulkCopy.yml\" sourcestartlinenumber=\"1\">Defines type of multi-row INSERT operation to generate for <xref href=\"LinqToDB.Data.BulkCopyType.RowByRow\" data-throw-if-not-resolved=\"false\"></xref> bulk copy mode.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.IOracleSpecificQueryable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.IOracleSpecificQueryable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.IOracleSpecificQueryable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.IOracleSpecificTable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.IOracleSpecificTable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.IOracleSpecificTable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.Oracle11ParametersNormalizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.Oracle11ParametersNormalizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.Oracle11ParametersNormalizer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.Oracle11SqlOptimizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.Oracle11SqlOptimizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.Oracle11SqlOptimizer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.Oracle122ParametersNormalizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.Oracle122ParametersNormalizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.Oracle122ParametersNormalizer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.Oracle12SqlOptimizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.Oracle12SqlOptimizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.Oracle12SqlOptimizer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleHints.Hint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleHints.Hint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleHints.Hint",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleHints.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleHints.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleHints",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.Devart11MappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.Devart11MappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleMappingSchema.Devart11MappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.DevartMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.DevartMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleMappingSchema.DevartMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.Managed11MappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.Managed11MappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleMappingSchema.Managed11MappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.ManagedMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.ManagedMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleMappingSchema.ManagedMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.Native11MappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.Native11MappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleMappingSchema.Native11MappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.NativeMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.NativeMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleMappingSchema.NativeMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleProvider",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.Oracle.OracleProvider.yml\" sourcestartlinenumber=\"1\">Lists supported Oracle ADO.NET providers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleProviderAdapter.BulkCopyOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleProviderAdapter.BulkCopyOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleProviderAdapter.BulkCopyOptions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.Oracle.OracleProviderAdapter.BulkCopyOptions.yml\" sourcestartlinenumber=\"1\">Intermediate enum to expose from adapter instead of two incompatible provider-specific enums.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleVersion.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.OracleVersion.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle.OracleVersion",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.Oracle.OracleVersion.yml\" sourcestartlinenumber=\"1\">Supported Oracle SQL dialects.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Oracle.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Oracle",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.IPostgreSQLExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.IPostgreSQLExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.IPostgreSQLExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.IPostgreSQLSpecificQueryable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.IPostgreSQLSpecificQueryable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.IPostgreSQLSpecificQueryable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.IPostgreSQLSpecificTable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.IPostgreSQLSpecificTable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.IPostgreSQLSpecificTable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.NpgsqlBinaryImporter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.NpgsqlBinaryImporter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.NpgsqlBinaryImporter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.NpgsqlConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.NpgsqlConnection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.NpgsqlConnection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.NpgsqlDbType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.NpgsqlDbType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.NpgsqlDbType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.NpgsqlProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.PostgreSQLDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.PostgreSQLExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLHints.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLHints.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.PostgreSQLHints",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLIdentifierQuoteMode.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLIdentifierQuoteMode.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.PostgreSQLIdentifierQuoteMode",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLIdentifierQuoteMode.yml\" sourcestartlinenumber=\"1\">Identifier quotation logic for SQL generation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.PostgreSQLOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLSchemaProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLSchemaProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.PostgreSQLSchemaProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLSql15Builder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLSql15Builder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.PostgreSQLSql15Builder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLSqlBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLSqlBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.PostgreSQLSqlBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.PostgreSQLTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLVersion.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLVersion.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL.PostgreSQLVersion",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.PostgreSQL.PostgreSQLVersion.yml\" sourcestartlinenumber=\"1\">PostgreSQL language dialect. Version defines minimal PostgreSQL version to use this dialect.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.PostgreSQL.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.PostgreSQL",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.ReaderInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.ReaderInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.ReaderInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.ISQLiteExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.ISQLiteExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.ISQLiteExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.ISQLiteSpecificTable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.ISQLiteSpecificTable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.ISQLiteSpecificTable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteHints.Hint.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteHints.Hint.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteHints.Hint",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteHints.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteHints.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteHints",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteMappingSchema.ClassicMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteMappingSchema.ClassicMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteMappingSchema.ClassicMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteMappingSchema.MicrosoftMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteMappingSchema.MicrosoftMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteMappingSchema.MicrosoftMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteSqlBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteSqlBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteSqlBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.SQLiteTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite.SQLiteTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SQLite.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SQLite",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.CalculationViewInputParametersExpressionAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.CalculationViewInputParametersExpressionAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.CalculationViewInputParametersExpressionAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.GetHanaSchemaOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.GetHanaSchemaOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.GetHanaSchemaOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaMappingSchema.NativeMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaMappingSchema.NativeMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaMappingSchema.NativeMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaMappingSchema.OdbcMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaMappingSchema.OdbcMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaMappingSchema.OdbcMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaOdbcDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaOdbcDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaOdbcDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopyColumnMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopyColumnMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopyColumnMapping",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopyColumnMappingCollection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopyColumnMappingCollection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopyColumnMappingCollection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopyOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopyOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaBulkCopyOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaConnection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaConnection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaDbType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaDbType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaDbType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaRowsCopiedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaRowsCopiedEventArgs.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaRowsCopiedEventArgs",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaRowsCopiedEventHandler.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaRowsCopiedEventHandler.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaRowsCopiedEventHandler",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaTransaction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaTransaction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.HanaTransaction",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.SapHanaTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.SapHanaTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.ViewWithParametersTableSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.ViewWithParametersTableSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana.ViewWithParametersTableSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SapHana.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SapHana",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.ISqlCeSpecificQueryable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.ISqlCeSpecificQueryable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.ISqlCeSpecificQueryable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.ISqlCeSpecificTable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.ISqlCeSpecificTable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.ISqlCeSpecificTable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeConfiguration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeConfiguration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.SqlCeConfiguration",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.SqlCeDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeHints.Table.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeHints.Table.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.SqlCeHints.Table",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeHints.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeHints.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.SqlCeHints",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.SqlCeMappingSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.SqlCeOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeProviderAdapter.SqlCeEngine.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeProviderAdapter.SqlCeEngine.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.SqlCeProviderAdapter.SqlCeEngine",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.SqlCeProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlCeTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.SqlCeTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlServerTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.SqlServerTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe.SqlServerTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlCe.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlCe",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.ISqlServerExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.ISqlServerExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.ISqlServerExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.ISqlServerSpecificQueryable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.ISqlServerSpecificQueryable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.ISqlServerSpecificQueryable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.ISqlServerSpecificTable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.ISqlServerSpecificTable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.ISqlServerSpecificTable<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.ColumnPropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.ColumnPropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.ColumnPropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.ConnectionPropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.ConnectionPropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.ConnectionPropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.DatabasePropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.DatabasePropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.DatabasePropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.DateParts.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.DateParts.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.DateParts",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.FileGroupPropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.FileGroupPropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.FileGroupPropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.FilePropertyExName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.FilePropertyExName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.FilePropertyExName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.FilePropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.FilePropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.FilePropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.FullTextCatalogPropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.FullTextCatalogPropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.FullTextCatalogPropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.FullTextServicePropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.FullTextServicePropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.FullTextServicePropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.IndexKeyPropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.IndexKeyPropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.IndexKeyPropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.IndexPropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.IndexPropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.IndexPropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.JsonData.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.JsonData.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.JsonData",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.ObjectPropertyExName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.ObjectPropertyExName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.ObjectPropertyExName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.ObjectPropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.ObjectPropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.ObjectPropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.ServerPropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.ServerPropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.ServerPropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.TypePropertyName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.TypePropertyName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn.TypePropertyName",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlFn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlFn",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerConfiguration.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerConfiguration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerConfiguration",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerExtensions.FreeTextKey-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerExtensions.FreeTextKey-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerExtensions.FreeTextKey<TKey>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.Join.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.Join.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerHints.Join",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.Query.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.Query.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerHints.Query",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.Table.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.Table.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerHints.Table",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.TemporalTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.TemporalTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerHints.TemporalTable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerHints",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.yml\" sourcestartlinenumber=\"1\"><a href=\"https://docs.microsoft.com/en-us/sql/t-sql/queries/hints-transact-sql\" sourcefile=\"api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerHints.yml\" sourcestartlinenumber=\"1\">https://docs.microsoft.com/en-us/sql/t-sql/queries/hints-transact-sql</a></p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProvider",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProvider.yml\" sourcestartlinenumber=\"1\">SQL Server database provider.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopyColumnMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopyColumnMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopyColumnMapping",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopyColumnMappingCollection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopyColumnMappingCollection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopyColumnMappingCollection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopyOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopyOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlBulkCopyOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlConnection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlConnection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlConnectionStringBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlConnectionStringBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlConnectionStringBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlRowsCopiedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlRowsCopiedEventArgs.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlRowsCopiedEventArgs",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlRowsCopiedEventHandler.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlRowsCopiedEventHandler.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlRowsCopiedEventHandler",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlTransaction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlTransaction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.SqlTransaction",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerRetryPolicy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerRetryPolicy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerRetryPolicy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerTransientExceptionDetector.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerTransientExceptionDetector.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerTransientExceptionDetector",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerTransientExceptionDetector.yml\" sourcestartlinenumber=\"1\">Detects the exceptions caused by SQL Server transient failures.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerVersion.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerVersion.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlServerVersion",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.SqlServer.SqlServerVersion.yml\" sourcestartlinenumber=\"1\">SQL Server dialect for SQL generation.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlType-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlType-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlType<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.SqlServer.SqlType-1.yml\" sourcestartlinenumber=\"1\">See <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql\">Data types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.SqlType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer.SqlType",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.SqlServer.SqlType.yml\" sourcestartlinenumber=\"1\">See <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql\">Data types</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.SqlServer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.SqlServer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseDataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseDataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseDataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseParametersNormalizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseParametersNormalizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseParametersNormalizer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopyColumnMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopyColumnMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopyColumnMapping",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopyColumnMappingCollection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopyColumnMappingCollection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopyColumnMappingCollection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopyOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopyOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseBulkCopyOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseConnection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseConnection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseConnection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseDbType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseDbType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseDbType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseRowsCopiedEventArgs.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseRowsCopiedEventArgs.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseRowsCopiedEventArgs",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseRowsCopiedEventHandler.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseRowsCopiedEventHandler.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseRowsCopiedEventHandler",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseTransaction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseTransaction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.AseTransaction",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.BulkCopyAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.BulkCopyAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.BulkCopyAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseProviderAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseProviderAdapter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseTools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.SybaseTools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase.SybaseTools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.Sybase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.Sybase",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.UniqueParametersNormalizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.UniqueParametersNormalizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider.UniqueParametersNormalizer",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataProvider.UniqueParametersNormalizer.yml\" sourcestartlinenumber=\"1\">Parameter name rules, implemented by this policy:</p>\n<ul><li>duplicate name check is case-insensitive</li><li>max name length: 50 characters</li><li>allowed characters: ASCII digits, ASCII letters, _ (underscore).</li><li>allowed first character: ASCII letter.</li><li>default name if name missing/invalid: \"p\"</li><li>duplicates resolved by adding \"_counter\" suffix</li></ul>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.DataType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.DataType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.DataType",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.DataType.yml\" sourcestartlinenumber=\"1\">List of data types, supported by linq2db.\nProvider-level support depends on database capabilities and current implementation\nsupport level and could vary for different providers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.ExprParameterAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.ExprParameterAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.ExprParameterAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.ExpressionMethodAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.ExpressionMethodAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.ExpressionMethodAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.ExpressionMethodAttribute.yml\" sourcestartlinenumber=\"1\">When applied to method or property, tells linq2db to replace them in queryable LINQ expression with another expression,\nreturned by method, specified in this attribute.</p>\n<p sourcefile=\"api/linq2db/LinqToDB.ExpressionMethodAttribute.yml\" sourcestartlinenumber=\"4\">Requirements to expression method:</p>\n<p>\n- expression method should be in the same class and replaced property of method;\n- method could be private.\n</p>\n<p>\nWhen applied to property, expression:\n- method should return function expression with the same return type as property type;\n- expression method could take up to two parameters in any order - current object parameter and database connection context object.\n</p>\n<p>\nWhen applied to method:\n- expression method should return function expression with the same return type as method return type;\n- method cannot have void return type;\n- parameters in expression method should go in the same order as in substituted method;\n- expression could take method instance object as first parameter;\n- expression could take database connection context object as last parameter;\n- last method parameters could be ommited from expression method, but only if you don't add database connection context parameter.\n</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.CustomMapperAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.CustomMapperAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.CustomMapperAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.DefaultValueExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.DefaultValueExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.DefaultValueExpression",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.ExpressionEvaluator.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.ExpressionEvaluator.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.ExpressionEvaluator",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Expressions.ExpressionEvaluator.yml\" sourcestartlinenumber=\"1\">Internal API.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.ExpressionExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.ExpressionExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.ExpressionExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.ExpressionGenerator.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.ExpressionGenerator.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.ExpressionGenerator",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.ExpressionHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.ExpressionHelper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.ExpressionHelper",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.ExpressionInstances.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.ExpressionInstances.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.ExpressionInstances",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Expressions.ExpressionInstances.yml\" sourcestartlinenumber=\"1\">Contains pre-created instances of <xref href=\"System.Linq.Expressions.ConstantExpression\" data-throw-if-not-resolved=\"false\"></xref> object for often used constants.\nUsing those instances we avoid unnecessary allocations of same constant instances and avoid boxing for\nvalue constants (e.g. booleans, integers).</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.ICustomMapper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.ICustomMapper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.ICustomMapper",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.IGenericInfoProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.IGenericInfoProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.IGenericInfoProvider",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Expressions.IGenericInfoProvider.yml\" sourcestartlinenumber=\"1\">Generic conversions provider.\nImplementation class must be generic, as type parameters will be used for conversion initialization in\n<xref href=\"LinqToDB.Expressions.IGenericInfoProvider.SetInfo(LinqToDB.Mapping.MappingSchema)\" data-throw-if-not-resolved=\"false\"></xref> method.\n<example></example></p>\n<pre><code class=\"lang-csharp\">// this conversion provider adds conversion from IEnumerable&lt;T&gt; to ImmutableList&lt;T&gt; for specific T type parameter\nclass EnumerableToImmutableListConvertProvider&lt;T&gt; : IGenericInfoProvider\n{\n    public void SetInfo(MappingSchema mappingSchema)\n    {\n        mappingSchema.SetConvertExpression&lt;IEnumerable&lt;T&gt;,ImmutableList&lt;T&gt;&gt;(\n            t =&gt; ImmutableList.Create(t.ToArray()));\n    }\n}</code></pre>\n\n<xref href=\"LinqToDB.Mapping.MappingSchema.SetGenericConvertProvider(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> for more details.\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.IsQueryableAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.IsQueryableAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.IsQueryableAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Expressions.IsQueryableAttribute.yml\" sourcestartlinenumber=\"1\">Used to define queryable members.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.MemberHelper.MemberInfoWithType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.MemberHelper.MemberInfoWithType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.MemberHelper.MemberInfoWithType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.MemberHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.MemberHelper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.MemberHelper",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.SqlQueryDependentAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.SqlQueryDependentAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.SqlQueryDependentAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Expressions.SqlQueryDependentAttribute.yml\" sourcestartlinenumber=\"1\">Used for controlling query caching of custom SQL Functions.\nParameter with this attribute will be evaluated on client side before generating SQL.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.SqlQueryDependentParamsAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.SqlQueryDependentParamsAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.SqlQueryDependentParamsAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Expressions.SqlQueryDependentParamsAttribute.yml\" sourcestartlinenumber=\"1\">Used for controlling query caching of custom SQL Functions.\nParameter with this attribute will be evaluated on client side before generating SQL.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.TransformInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.TransformInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.TransformInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.TypeMapper.MemberBuilder-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.TypeMapper.MemberBuilder-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.TypeMapper.MemberBuilder<T, TV>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.TypeMapper.TypeBuilder-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.TypeMapper.TypeBuilder-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.TypeMapper.TypeBuilder<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.TypeMapper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.TypeMapper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.TypeMapper",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Expressions.TypeMapper.yml\" sourcestartlinenumber=\"1\">Implements typed mappings support for dynamically loaded types.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.TypeWrapper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.TypeWrapper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.TypeWrapper",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Expressions.TypeWrapper.yml\" sourcestartlinenumber=\"1\">Implements base class for typed wrappers over provider-specific type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.TypeWrapperNameAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.TypeWrapperNameAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.TypeWrapperNameAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.ValueTaskToTaskMapper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.ValueTaskToTaskMapper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.ValueTaskToTaskMapper",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.WrapperAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.WrapperAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions.WrapperAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Expressions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Expressions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Expressions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.ExtensionBuilderExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.ExtensionBuilderExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.ExtensionBuilderExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Extensions.AttributesExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Extensions.AttributesExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Extensions.AttributesExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Extensions.ReflectionExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Extensions.ReflectionExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Extensions.ReflectionExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Extensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Extensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Extensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.IDataContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.IDataContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.IDataContext",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.IDataContext.yml\" sourcestartlinenumber=\"1\">Database connection abstraction interface.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.IExtensionsAdapter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.IExtensionsAdapter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.IExtensionsAdapter",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.IExtensionsAdapter.yml\" sourcestartlinenumber=\"1\">Interface to override default implementation of LINQ To DB async operations.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.ILoadWithQueryable-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.ILoadWithQueryable-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.ILoadWithQueryable<TEntity, TProperty>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.ILoadWithQueryable-2.yml\" sourcestartlinenumber=\"1\">Provides support for queryable LoadWith/ThenLoad chaining operators.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.ITable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.ITable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.ITable<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.ITable-1.yml\" sourcestartlinenumber=\"1\">Table-like queryable source, e.g. table, view or table-valued function.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.ITableMutable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.ITableMutable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.ITableMutable<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.ITableMutable-1.yml\" sourcestartlinenumber=\"1\">This is internal API and is not intended for use by Linq To DB applications.\nIt may change or be removed without further notice.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.InsertColumnFilter-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.InsertColumnFilter-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.InsertColumnFilter<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.InsertColumnFilter-1.yml\" sourcestartlinenumber=\"1\">Defines signature for column filter for insert operations.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.InsertOrUpdateColumnFilter-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.InsertOrUpdateColumnFilter-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.InsertOrUpdateColumnFilter<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.InsertOrUpdateColumnFilter-1.yml\" sourcestartlinenumber=\"1\">Defines signature for column filter for insert or update/replace operations.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.InterceptorExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.InterceptorExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.InterceptorExtensions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.InterceptorExtensions.yml\" sourcestartlinenumber=\"1\">Contains extensions that add one-time interceptors to connection.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.CommandEventData.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.CommandEventData.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.CommandEventData",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Interceptors.CommandEventData.yml\" sourcestartlinenumber=\"1\">Event arguments for <xref href=\"LinqToDB.Interceptors.ICommandInterceptor\" data-throw-if-not-resolved=\"false\"></xref> events.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.CommandInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.CommandInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.CommandInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.ConnectionEventData.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.ConnectionEventData.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.ConnectionEventData",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Interceptors.ConnectionEventData.yml\" sourcestartlinenumber=\"1\">Event arguments for <xref href=\"LinqToDB.Interceptors.IConnectionInterceptor\" data-throw-if-not-resolved=\"false\"></xref> events.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.ConnectionInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.ConnectionInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.ConnectionInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.ConnectionOptionsConnectionInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.ConnectionOptionsConnectionInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.ConnectionOptionsConnectionInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.DataContextEventData.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.DataContextEventData.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.DataContextEventData",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Interceptors.DataContextEventData.yml\" sourcestartlinenumber=\"1\">Event arguments for <xref href=\"LinqToDB.Interceptors.IDataContextInterceptor\" data-throw-if-not-resolved=\"false\"></xref> events.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.DataContextInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.DataContextInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.DataContextInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.EntityCreatedEventData.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.EntityCreatedEventData.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.EntityCreatedEventData",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Interceptors.EntityCreatedEventData.yml\" sourcestartlinenumber=\"1\">Event arguments for <xref href=\"LinqToDB.Interceptors.IEntityServiceInterceptor.EntityCreated(LinqToDB.Interceptors.EntityCreatedEventData%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> event.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.EntityServiceInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.EntityServiceInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.EntityServiceInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.ICommandInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.ICommandInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.ICommandInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.IConnectionInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.IConnectionInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.IConnectionInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.IDataContextInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.IDataContextInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.IDataContextInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.IEntityServiceInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.IEntityServiceInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.IEntityServiceInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.IInterceptable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.IInterceptable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.IInterceptable<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.IInterceptable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.IInterceptable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.IInterceptable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.IInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.IInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.IInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.IUnwrapDataObjectInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.IUnwrapDataObjectInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.IUnwrapDataObjectInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.UnwrapDataObjectInterceptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.UnwrapDataObjectInterceptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors.UnwrapDataObjectInterceptor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Interceptors.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Interceptors.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Interceptors",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.KeepConnectionAliveScope.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.KeepConnectionAliveScope.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.KeepConnectionAliveScope",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.KeepConnectionAliveScope.yml\" sourcestartlinenumber=\"1\">Explicit <xref href=\"LinqToDB.DataContext\" data-throw-if-not-resolved=\"false\"></xref> connection reuse scope.\nSee <xref href=\"LinqToDB.DataContext.KeepConnectionAlive\" data-throw-if-not-resolved=\"false\"></xref> for more details.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.AccessorMember.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.AccessorMember.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.AccessorMember",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Builder.ConvertFlags.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Builder.ConvertFlags.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Builder.ConvertFlags",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Builder.ExpressionTreeOptimizationContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Builder.ExpressionTreeOptimizationContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Builder.ExpressionTreeOptimizationContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Builder.IToSqlConverter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Builder.IToSqlConverter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Builder.IToSqlConverter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Builder.RequestFor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Builder.RequestFor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Builder.RequestFor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Builder.SequenceConvertInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Builder.SequenceConvertInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Builder.SequenceConvertInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Builder.SequenceConvertPath.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Builder.SequenceConvertPath.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Builder.SequenceConvertPath",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Builder.SqlInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Builder.SqlInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Builder.SqlInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Builder.SqlQueryExtensionData.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Builder.SqlQueryExtensionData.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Builder.SqlQueryExtensionData",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Builder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Builder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Builder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Expressions.LazyExpressionInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Expressions.LazyExpressionInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Expressions.LazyExpressionInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Expressions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Expressions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Expressions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IDataReaderAsync.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IDataReaderAsync.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IDataReaderAsync",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IExpressionInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IExpressionInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IExpressionInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IExpressionPreprocessor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IExpressionPreprocessor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IExpressionPreprocessor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IExpressionQuery-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IExpressionQuery-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IExpressionQuery<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IExpressionQuery.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IExpressionQuery.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IExpressionQuery",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IMergeable-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IMergeable-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IMergeable<TTarget, TSource>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Linq.IMergeable-2.yml\" sourcestartlinenumber=\"1\">Merge command builder that have target table, source, match (ON) condition and at least one operation configured.\nYou can add more operations to this type of builder or execute command.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IMergeableOn-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IMergeableOn-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IMergeableOn<TTarget, TSource>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Linq.IMergeableOn-2.yml\" sourcestartlinenumber=\"1\">Merge command builder that have only target table and source configured.\nOnly operation available for this type of builder is match (ON) condition configuration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IMergeableSource-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IMergeableSource-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IMergeableSource<TTarget, TSource>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Linq.IMergeableSource-2.yml\" sourcestartlinenumber=\"1\">Merge command builder that have target table, source and match (ON) condition configured.\nYou can only add operations to this type of builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IMergeableUsing-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IMergeableUsing-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IMergeableUsing<TTarget>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Linq.IMergeableUsing-1.yml\" sourcestartlinenumber=\"1\">Merge command builder that have only target table configured.\nOnly operation available for this type of builder is source configuration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IQueryContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IQueryContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IQueryContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IQueryRunner.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IQueryRunner.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IQueryRunner",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.ISelectInsertable-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.ISelectInsertable-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.ISelectInsertable<TSource, TTarget>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IUpdatable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IUpdatable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IUpdatable<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.IValueInsertable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.IValueInsertable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.IValueInsertable<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Internal.ColumnReaderAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Internal.ColumnReaderAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Internal.ColumnReaderAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Linq.Internal.ColumnReaderAttribute.yml\" sourcestartlinenumber=\"1\">Internal API.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Internal.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Internal.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Internal",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Internals.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Internals.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Internals",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Linq.Internals.yml\" sourcestartlinenumber=\"1\">This is internal API and is not intended for use by Linq To DB applications.\nIt may change or be removed without further notice.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.LinqException.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.LinqException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.LinqException",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Linq.LinqException.yml\" sourcestartlinenumber=\"1\">Defines the base class for the namespace exceptions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.MethodHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.MethodHelper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.MethodHelper",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.NoLinqCache.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.NoLinqCache.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.NoLinqCache",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Linq.NoLinqCache.yml\" sourcestartlinenumber=\"1\">Provides a scope, in which LINQ queries will not be added to a LINQ query cache. This could be used to tell\nlinq2db to not cache queries that operate with big parametes.\nMore details could be found <a href=\"https://github.com/linq2db/linq2db/issues/256\">here</a>.\nTake into account that this class only disables adding of new query, created in its scope, to a cache.\nIf query already present in cache - linq2db will use cached query.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Query-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Query-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Query<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.Query.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.Query.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.Query",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.QueryInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.QueryInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq.QueryInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Linq.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Linq.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Linq",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.LinqExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.LinqExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.LinqExtensions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.LinqExtensions.yml\" sourcestartlinenumber=\"1\">Contains extension methods for LINQ queries.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.LinqOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.LinqOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.LinqOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.LinqToDBConstants.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.LinqToDBConstants.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.LinqToDBConstants",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.LinqToDBException.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.LinqToDBException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.LinqToDBException",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.LinqToDBException.yml\" sourcestartlinenumber=\"1\">Defines the base class for the namespace exceptions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.AssociationAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.AssociationAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.AssociationAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.AssociationAttribute.yml\" sourcestartlinenumber=\"1\">Defines relation between tables or views.\nCould be applied to:</p>\n<ul sourcefile=\"api/linq2db/LinqToDB.Mapping.AssociationAttribute.yml\" sourcestartlinenumber=\"3\">\n<li sourcefile=\"api/linq2db/LinqToDB.Mapping.AssociationAttribute.yml\" sourcestartlinenumber=\"3\">instance properties and fields;</li>\n<li sourcefile=\"api/linq2db/LinqToDB.Mapping.AssociationAttribute.yml\" sourcestartlinenumber=\"4\">instance and static methods.</li>\n</ul>\n<p sourcefile=\"api/linq2db/LinqToDB.Mapping.AssociationAttribute.yml\" sourcestartlinenumber=\"6\">For associations, defined using static methods, <code>this</code> mapping side defined by type of first parameter.\nAlso, optionally, you can pass data context object as extra method parameter.</p>\n<p sourcefile=\"api/linq2db/LinqToDB.Mapping.AssociationAttribute.yml\" sourcestartlinenumber=\"9\">Based on association type - to one or to multiple records - result type should be target record's mapping type or\n<xref href=\"System.IEquatable%601\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n<p sourcefile=\"api/linq2db/LinqToDB.Mapping.AssociationAttribute.yml\" sourcestartlinenumber=\"12\">By default associations are used only for joins generation in LINQ queries and will have <code>null</code> value for loaded\nrecords. To load data into association, you should explicitly specify it in your query using <xref href=\"LinqToDB.LinqExtensions.LoadWith%60%602(System.Linq.IQueryable%7b%60%600%7d%2cSystem.Linq.Expressions.Expression%7bSystem.Func%7b%60%600%2c%60%601%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.AssociationDescriptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.AssociationDescriptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.AssociationDescriptor",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.AssociationDescriptor.yml\" sourcestartlinenumber=\"1\">Stores association descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.ColumnAliasAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.ColumnAliasAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.ColumnAliasAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.ColumnAliasAttribute.yml\" sourcestartlinenumber=\"1\">Specifies that current field or property is just an alias to another property or field.\nCurrently this attribute has several issues:</p>\n<ul sourcefile=\"api/linq2db/LinqToDB.Mapping.ColumnAliasAttribute.yml\" sourcestartlinenumber=\"3\">\n<li sourcefile=\"api/linq2db/LinqToDB.Mapping.ColumnAliasAttribute.yml\" sourcestartlinenumber=\"3\">you can apply it to class or interface - such attribute will be ignored by linq2db;</li>\n<li sourcefile=\"api/linq2db/LinqToDB.Mapping.ColumnAliasAttribute.yml\" sourcestartlinenumber=\"4\">it is possible to define attribute without setting  <xref href=\"LinqToDB.Mapping.ColumnAliasAttribute.MemberName\" data-throw-if-not-resolved=\"false\"></xref> value;</li>\n<li sourcefile=\"api/linq2db/LinqToDB.Mapping.ColumnAliasAttribute.yml\" sourcestartlinenumber=\"5\">you can define alias to another alias property or field and potentially create loop.</li>\n</ul>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.ColumnAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.ColumnAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.ColumnAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.ColumnAttribute.yml\" sourcestartlinenumber=\"1\">Configures mapping of mapping class member to database column.\nCould be applied directly to a property or field or to mapping class/interface.\nIn latter case you should specify member name using <xref href=\"LinqToDB.Mapping.ColumnAttribute.MemberName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.ColumnDescriptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.ColumnDescriptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.ColumnDescriptor",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.ColumnDescriptor.yml\" sourcestartlinenumber=\"1\">Stores mapping entity column descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.DataTypeAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.DataTypeAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.DataTypeAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.DataTypeAttribute.yml\" sourcestartlinenumber=\"1\">This attribute allows to override default types, defined in mapping schema, for current column.\nAlso see <xref href=\"LinqToDB.Mapping.ColumnAttribute.DataType\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"LinqToDB.Mapping.ColumnAttribute.DbType\" data-throw-if-not-resolved=\"false\"></xref>.\nApplying this attribute to class or interface will have no effect.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.DynamicColumnAccessorAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.DynamicColumnAccessorAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.DynamicColumnAccessorAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.DynamicColumnAccessorAttribute.yml\" sourcestartlinenumber=\"1\">Configure setter and getter methods for dynamic columns.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.DynamicColumnInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.DynamicColumnInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.DynamicColumnInfo",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.DynamicColumnInfo.yml\" sourcestartlinenumber=\"1\">Discovers the attributes of a property and provides access to property metadata.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.DynamicColumnsStoreAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.DynamicColumnsStoreAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.DynamicColumnsStoreAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.DynamicColumnsStoreAttribute.yml\" sourcestartlinenumber=\"1\">Marks target member as dynamic columns store.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.EntityDescriptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.EntityDescriptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.EntityDescriptor",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.EntityDescriptor.yml\" sourcestartlinenumber=\"1\">Stores mapping entity descriptor.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.EntityMappingBuilder-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.EntityMappingBuilder-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.EntityMappingBuilder<TEntity>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.EntityMappingBuilder-1.yml\" sourcestartlinenumber=\"1\">Fluent mapping entity builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.FluentMappingBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.FluentMappingBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.FluentMappingBuilder",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.FluentMappingBuilder.yml\" sourcestartlinenumber=\"1\">Fluent mapping builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.IColumnChangeDescriptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.IColumnChangeDescriptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.IColumnChangeDescriptor",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.IColumnChangeDescriptor.yml\" sourcestartlinenumber=\"1\">Mapping entity column descriptor change interface.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.IEntityChangeDescriptor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.IEntityChangeDescriptor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.IEntityChangeDescriptor",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.IEntityChangeDescriptor.yml\" sourcestartlinenumber=\"1\">Mapping entity descriptor change interface.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.IdentityAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.IdentityAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.IdentityAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.IdentityAttribute.yml\" sourcestartlinenumber=\"1\">Marks target column as identity column with value, generated on database side during insert operations.\nIdentity columns will be ignored for insert and update operations with implicit column list like\n<xref href=\"LinqToDB.DataExtensions.Insert%60%601(LinqToDB.IDataContext%2c%60%600%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.String%2cLinqToDB.TableOptions)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"LinqToDB.DataExtensions.Update%60%601(LinqToDB.IDataContext%2c%60%600%2cSystem.String%2cSystem.String%2cSystem.String%2cSystem.String%2cLinqToDB.TableOptions)\" data-throw-if-not-resolved=\"false\"></xref> methods.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.InheritanceMapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.InheritanceMapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.InheritanceMapping",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.InheritanceMapping.yml\" sourcestartlinenumber=\"1\">Stores inheritance mapping information for single discriminator value.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.InheritanceMappingAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.InheritanceMappingAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.InheritanceMappingAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.InheritanceMappingAttribute.yml\" sourcestartlinenumber=\"1\">Defines to which type linq2db should map record based on discriminator value. You can apply this attribute to\na base class or insterface, implemented by all child classes.\nDon't forget to define discriminator value storage column using <xref href=\"LinqToDB.Mapping.ColumnAttribute.IsDiscriminator\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.LockedMappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.LockedMappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.LockedMappingSchema",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.LockedMappingSchema.yml\" sourcestartlinenumber=\"1\">Locked mapping schema.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.MapValue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.MapValue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.MapValue",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.MapValue.yml\" sourcestartlinenumber=\"1\">Stores enum mapping information for single enum value.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.MapValueAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.MapValueAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.MapValueAttribute",
      "Summary": "<p>\nDefines bidirectional mapping between enum field value, used on client and database value, stored in database and\nused in queries.\nEnumeration field could have multiple <xref href=\"LinqToDB.Mapping.MapValueAttribute\" data-throw-if-not-resolved=\"false\"></xref> attributes.\n</p>\n<p>\nMapping from database value to enumeration performed when you load data from database. Linq2db will search for\nenumeration field with <xref href=\"LinqToDB.Mapping.MapValueAttribute\" data-throw-if-not-resolved=\"false\"></xref> with required value. If attribute with such value is not\nfound, you will receive <xref href=\"LinqToDB.LinqToDBException\" data-throw-if-not-resolved=\"false\"></xref> error. If you cannot specify all possible values using\n<xref href=\"LinqToDB.Mapping.MapValueAttribute\" data-throw-if-not-resolved=\"false\"></xref>, you can specify custom mapping using methods like\n<xref href=\"LinqToDB.Mapping.MappingSchema.SetConvertExpression%60%602(System.Linq.Expressions.Expression%7bSystem.Func%7b%60%600%2c%60%601%7d%7d%2cSystem.Boolean%2cLinqToDB.Common.ConversionType)\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nMapping from enumeration value performed when you save it to database or use in query. If your enum field has\nmultiple <xref href=\"LinqToDB.Mapping.MapValueAttribute\" data-throw-if-not-resolved=\"false\"></xref> attributes, you should mark one of them as default using <xref href=\"LinqToDB.Mapping.MapValueAttribute.IsDefault\" data-throw-if-not-resolved=\"false\"></xref> property.\n</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.MappingAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.MappingAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.MappingAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.MappingSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.MappingSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.MappingSchema",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.MappingSchema.yml\" sourcestartlinenumber=\"1\">Mapping schema.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.NotColumnAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.NotColumnAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.NotColumnAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.NotColumnAttribute.yml\" sourcestartlinenumber=\"1\">Marks current property or column to be ignored for mapping when explicit column mapping disabled.\nSee <xref href=\"LinqToDB.Mapping.TableAttribute.IsColumnAttributeRequired\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.NotNullAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.NotNullAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.NotNullAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.NotNullAttribute.yml\" sourcestartlinenumber=\"1\">Sets nullability flag for current column to <code>false</code>.\nSee <xref href=\"LinqToDB.Mapping.NullableAttribute\" data-throw-if-not-resolved=\"false\"></xref> for more details.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.NullableAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.NullableAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.NullableAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.NullableAttribute.yml\" sourcestartlinenumber=\"1\">Explicitly specifies that associated column could contain <code>NULL</code> values.\nOverrides default nullability flag from current mapping schema for property/field type.\nHas lower priority over <xref href=\"LinqToDB.Mapping.ColumnAttribute.CanBeNull\" data-throw-if-not-resolved=\"false\"></xref>.\nUsing this attribute, you can allow <code>NULL</code> values for identity columns.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.PrimaryKeyAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.PrimaryKeyAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.PrimaryKeyAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.PrimaryKeyAttribute.yml\" sourcestartlinenumber=\"1\">Marks property or field as a member of primary key for current mapping type.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.PropertyMappingBuilder-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.PropertyMappingBuilder-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.PropertyMappingBuilder<TEntity, TProperty>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.PropertyMappingBuilder-2.yml\" sourcestartlinenumber=\"1\">Column or association fluent mapping builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.QueryFilterAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.QueryFilterAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.QueryFilterAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.QueryFilterAttribute.yml\" sourcestartlinenumber=\"1\">Contains reference to filter function defined by <xref href=\"LinqToDB.Mapping.EntityMappingBuilder%601.HasQueryFilter(System.Func%7bSystem.Linq.IQueryable%7b%600%7d%2cLinqToDB.IDataContext%2cSystem.Linq.IQueryable%7b%600%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.ResultSetIndexAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.ResultSetIndexAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.ResultSetIndexAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.ResultSetIndexAttribute.yml\" sourcestartlinenumber=\"1\">Used to mark the index of a result set when multiple result sets need to be processed for a command.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.ScalarTypeAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.ScalarTypeAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.ScalarTypeAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.ScalarTypeAttribute.yml\" sourcestartlinenumber=\"1\">Overrides default scalar detection for target class or structure.\nBy default linq2db treats primitives and structs as scalar types.\nThis attribute allows you to mark class or struct as scalar type or mark struct as non-scalar type.\nAlso see <xref href=\"LinqToDB.Common.Configuration.IsStructIsScalarType\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that if you marks some type as scalar, you will need to define custom mapping logic between object of\nthat type and data parameter using <xref href=\"LinqToDB.Mapping.MappingSchema.SetConvertExpression(System.Type%2cSystem.Type%2cSystem.Linq.Expressions.LambdaExpression%2cSystem.Boolean%2cLinqToDB.Common.ConversionType)\" data-throw-if-not-resolved=\"false\"></xref> methods.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.SequenceNameAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.SequenceNameAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.SequenceNameAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.SequenceNameAttribute.yml\" sourcestartlinenumber=\"1\">Specifies value generation sequence for mapped property of field.\nCurrently it supported only for:</p>\n<ul><li>Firebird generators</li><li>Oracle sequences</li><li>PostgreSQL serial pseudotypes/sequences</li></ul>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.SkipBaseAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.SkipBaseAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.SkipBaseAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.SkipBaseAttribute.yml\" sourcestartlinenumber=\"1\">Abstract Attribute to be used for skipping values</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.SkipModification.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.SkipModification.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.SkipModification",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.SkipModification.yml\" sourcestartlinenumber=\"1\">Flags for specifying skip modifications used for Attributes based on <xref href=\"LinqToDB.Mapping.SkipBaseAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.SkipValuesByListAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.SkipValuesByListAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.SkipValuesByListAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.SkipValuesByListAttribute.yml\" sourcestartlinenumber=\"1\">Abstract Attribute to be used for skipping value for\n<xref href=\"LinqToDB.Mapping.SkipValuesOnInsertAttribute\" data-throw-if-not-resolved=\"false\"></xref> based on <xref href=\"LinqToDB.Mapping.SkipModification.Insert\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"LinqToDB.Mapping.SkipValuesOnUpdateAttribute\" data-throw-if-not-resolved=\"false\"></xref> based on <xref href=\"LinqToDB.Mapping.SkipModification.Update\" data-throw-if-not-resolved=\"false\"></xref>/&gt; or a\ncustom Attribute derived from this to override <xref href=\"LinqToDB.Mapping.SkipBaseAttribute.ShouldSkip(System.Object%2cLinqToDB.Mapping.EntityDescriptor%2cLinqToDB.Mapping.ColumnDescriptor)\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.SkipValuesOnInsertAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.SkipValuesOnInsertAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.SkipValuesOnInsertAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.SkipValuesOnInsertAttribute.yml\" sourcestartlinenumber=\"1\">Attribute for skipping specific values on insert.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.SkipValuesOnUpdateAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.SkipValuesOnUpdateAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.SkipValuesOnUpdateAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.SkipValuesOnUpdateAttribute.yml\" sourcestartlinenumber=\"1\">Attribute for skipping specific values on update.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.TableAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.TableAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.TableAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Mapping.TableAttribute.yml\" sourcestartlinenumber=\"1\">Maps databse table or view to a class or interface.\nYou can apply it to any class including non-public, nester or abstract classes.\nApplying it to interfaces will allow you to perform queries against target table, but you need to specify\nprojection in your query explicitly, if you want to select data from such mapping.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.ValueConverterAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.ValueConverterAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping.ValueConverterAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Mapping.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Mapping.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Mapping",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.MergeDefinition-2.Operation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.MergeDefinition-2.Operation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.MergeDefinition<TTarget, TSource>.Operation",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.MergeDefinition-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.MergeDefinition-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.MergeDefinition<TTarget, TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.MergeOperationType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.MergeOperationType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.MergeOperationType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Metadata.AttributeReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Metadata.AttributeReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.AttributeReader",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Metadata.FluentMetadataReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Metadata.FluentMetadataReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.FluentMetadataReader",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Metadata.IMetadataReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Metadata.IMetadataReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.IMetadataReader",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Metadata.MetadataException.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Metadata.MetadataException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.MetadataException",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Metadata.MetadataException.yml\" sourcestartlinenumber=\"1\">Defines the base class for the namespace exceptions.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Metadata.MetadataReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Metadata.MetadataReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.MetadataReader",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Metadata.MetadataReader.yml\" sourcestartlinenumber=\"1\">Aggregation metadata reader, that just delegates all calls to nested readers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Metadata.SystemComponentModelDataAnnotationsSchemaAttributeReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Metadata.SystemComponentModelDataAnnotationsSchemaAttributeReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.SystemComponentModelDataAnnotationsSchemaAttributeReader",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Metadata.SystemComponentModelDataAnnotationsSchemaAttributeReader.yml\" sourcestartlinenumber=\"1\">Metadata provider using mapping attributes from <xref href=\"System.ComponentModel.DataAnnotations.Schema\" data-throw-if-not-resolved=\"false\"></xref> namespace:</p>\n<ul><li><xref href=\"System.ComponentModel.DataAnnotations.Schema.TableAttribute\" data-throw-if-not-resolved=\"false\"></xref></li><li><xref href=\"System.ComponentModel.DataAnnotations.Schema.ColumnAttribute\" data-throw-if-not-resolved=\"false\"></xref></li></ul>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Metadata.SystemDataLinqAttributeReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Metadata.SystemDataLinqAttributeReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.SystemDataLinqAttributeReader",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Metadata.SystemDataLinqAttributeReader.yml\" sourcestartlinenumber=\"1\">Metadata provider using mapping attributes from <xref href=\"System.Data.Linq.Mapping\" data-throw-if-not-resolved=\"false\"></xref> namespace:</p>\n<ul><li><xref href=\"System.Data.Linq.Mapping.TableAttribute\" data-throw-if-not-resolved=\"false\"></xref></li><li><xref href=\"System.Data.Linq.Mapping.DatabaseAttribute\" data-throw-if-not-resolved=\"false\"></xref></li><li><xref href=\"System.Data.Linq.Mapping.ColumnAttribute\" data-throw-if-not-resolved=\"false\"></xref></li><li><xref href=\"System.Data.Linq.Mapping.AssociationAttribute\" data-throw-if-not-resolved=\"false\"></xref></li></ul>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Metadata.SystemDataSqlServerAttributeReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Metadata.SystemDataSqlServerAttributeReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.SystemDataSqlServerAttributeReader",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Metadata.SystemDataSqlServerAttributeReader.yml\" sourcestartlinenumber=\"1\">Adds support for types and functions, defined in Microsoft.SqlServer.Types spatial types\n(or any other types and methods, that use SqlMethodAttribute or SqlUserDefinedTypeAttribute mapping attributes).\nCheck <a href=\"https://linq2db.github.io/articles/FAQ.html#how-can-i-use-sql-server-spatial-types\" sourcefile=\"api/linq2db/LinqToDB.Metadata.SystemDataSqlServerAttributeReader.yml\" sourcestartlinenumber=\"3\">https://linq2db.github.io/articles/FAQ.html#how-can-i-use-sql-server-spatial-types</a>\nfor additional required configuration steps to support SQL Server spatial types.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Metadata.XmlAttributeReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Metadata.XmlAttributeReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata.XmlAttributeReader",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Metadata.XmlAttributeReader.yml\" sourcestartlinenumber=\"1\">Metadata atributes provider. Uses XML document to describe attributes and their bindings.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Metadata.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Metadata.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Metadata",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.MultiInsertExtensions.IMultiInsertElse-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.MultiInsertExtensions.IMultiInsertElse-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.MultiInsertExtensions.IMultiInsertElse<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.MultiInsertExtensions.IMultiInsertInto-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.MultiInsertExtensions.IMultiInsertInto-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.MultiInsertExtensions.IMultiInsertInto<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.MultiInsertExtensions.IMultiInsertSource-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.MultiInsertExtensions.IMultiInsertSource-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.MultiInsertExtensions.IMultiInsertSource<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.MultiInsertExtensions.IMultiInsertWhen-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.MultiInsertExtensions.IMultiInsertWhen-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.MultiInsertExtensions.IMultiInsertWhen<TSource>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.MultiInsertExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.MultiInsertExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.MultiInsertExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.ProviderName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.ProviderName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.ProviderName",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.ProviderName.yml\" sourcestartlinenumber=\"1\">Default names for providers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.IObjectFactory.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.IObjectFactory.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.IObjectFactory",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.MemberAccessor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.MemberAccessor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.MemberAccessor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.ADONet.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.ADONet.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.ADONet",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.Enumerable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.Enumerable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.Enumerable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.ColumnReader.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.ColumnReader.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.ColumnReader",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.DataParameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.DataParameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.DataParameter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Delete.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Delete.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Delete",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.GroupBy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.GroupBy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.GroupBy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.DC.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.DC.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Insert.DC",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.Q.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.Q.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Insert.Q",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.SI.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.SI.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Insert.SI",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.T.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.T.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Insert.T",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.VI.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.VI.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Insert.VI",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Insert.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Insert",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Merge.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Merge.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Merge",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.MultiInsert.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.MultiInsert.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.MultiInsert",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.SqlExt.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.SqlExt.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.SqlExt",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Table.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Table.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Table",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Tools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Tools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Tools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Update.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.Update.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB.Update",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.LinqToDB.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.LinqToDB",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.Queryable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.Queryable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.Queryable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.System.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.System.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods.System",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.Methods.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.Methods.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.Methods",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Reflection.Methods.yml\" sourcestartlinenumber=\"1\">This API supports the LinqToDB infrastructure and is not intended to be used  directly from your code.\nThis API may change or be removed in future releases.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.ObjectFactoryAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.ObjectFactoryAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.ObjectFactoryAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.TypeAccessor-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.TypeAccessor-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.TypeAccessor<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.TypeAccessor.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.TypeAccessor.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection.TypeAccessor",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Reflection.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Reflection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Reflection",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Remote.DataService-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Remote.DataService-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.DataService<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Remote.ILinqService.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Remote.ILinqService.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.ILinqService",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Remote.LinqService.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Remote.LinqService.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.LinqService",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Remote.LinqServiceInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Remote.LinqServiceInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.LinqServiceInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Remote.LinqServiceQuery.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Remote.LinqServiceQuery.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.LinqServiceQuery",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Remote.LinqServiceResult.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Remote.LinqServiceResult.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.LinqServiceResult",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Remote.RemoteDataContextBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Remote.RemoteDataContextBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote.RemoteDataContextBase",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Remote.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Remote.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Remote",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.AssociationType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.AssociationType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.AssociationType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.ColumnInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.ColumnInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.ColumnInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.ColumnSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.ColumnSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.ColumnSchema",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.ColumnSchema.yml\" sourcestartlinenumber=\"1\">Describes table column.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.DataTypeInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.DataTypeInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.DataTypeInfo",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.DataTypeInfo.yml\" sourcestartlinenumber=\"1\">Database data type descriptor.\nImplements subset of DataTypes schema collection:\n<a href=\"https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/common-schema-collections\" sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.DataTypeInfo.yml\" sourcestartlinenumber=\"3\">https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/common-schema-collections</a>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.DatabaseSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.DatabaseSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.DatabaseSchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.ForeignKeyInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.ForeignKeyInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.ForeignKeyInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.ForeignKeySchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.ForeignKeySchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.ForeignKeySchema",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.GetSchemaOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.GetSchemaOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.GetSchemaOptions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.GetSchemaOptions.yml\" sourcestartlinenumber=\"1\">Defines schema load options.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.ISchemaProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.ISchemaProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.ISchemaProvider",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.ISchemaProvider.yml\" sourcestartlinenumber=\"1\">Database schema provider.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.LoadTableData.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.LoadTableData.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.LoadTableData",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.LoadTableData.yml\" sourcestartlinenumber=\"1\">Contains table information, passed to <xref href=\"LinqToDB.SchemaProvider.GetSchemaOptions.LoadTable\" data-throw-if-not-resolved=\"false\"></xref> delegate.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.ParameterSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.ParameterSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.ParameterSchema",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.ParameterSchema.yml\" sourcestartlinenumber=\"1\">Describes database procedure or function parameter.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.PrimaryKeyInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.PrimaryKeyInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.PrimaryKeyInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.ProcedureInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.ProcedureInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.ProcedureInfo",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.ProcedureInfo.yml\" sourcestartlinenumber=\"1\">Database procedure or function description.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.ProcedureParameterInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.ProcedureParameterInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.ProcedureParameterInfo",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.ProcedureParameterInfo.yml\" sourcestartlinenumber=\"1\">Database procedure or function parameter description.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.ProcedureSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.ProcedureSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.ProcedureSchema",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.ProcedureSchema.yml\" sourcestartlinenumber=\"1\">Describes database procedure or function.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.SchemaProviderBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.SchemaProviderBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.SchemaProviderBase",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.TableInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.TableInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.TableInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.TableSchema.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.TableSchema.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider.TableSchema",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SchemaProvider.TableSchema.yml\" sourcestartlinenumber=\"1\">Describes table-like objects such as tables, views, procedure or function results.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SchemaProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SchemaProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SchemaProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.AggregateFunctionNotOrderedImpl-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.AggregateFunctionNotOrderedImpl-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.AggregateFunctionNotOrderedImpl<T, TR>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.AggregateModifier.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.AggregateModifier.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.AggregateModifier",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.ConvertTo-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.ConvertTo-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.ConvertTo<TTo>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.DateParts.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.DateParts.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.DateParts",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.EnumAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.EnumAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.EnumAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.ExpressionAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.ExpressionAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.ExpressionAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Sql.ExpressionAttribute.yml\" sourcestartlinenumber=\"1\">An Attribute that allows custom Expressions to be defined\nfor a Method used within a Linq Expression.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.ExtensionAttribute.ExtensionBuilder-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.ExtensionAttribute.ExtensionBuilder-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.ExtensionAttribute.ExtensionBuilder<TContext>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.ExtensionAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.ExtensionAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.ExtensionAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.From.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.From.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.From",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.FunctionAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.FunctionAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.FunctionAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Sql.FunctionAttribute.yml\" sourcestartlinenumber=\"1\">Defines an SQL server-side Function with parameters passed in.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.IAggregateFunction-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.IAggregateFunction-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.IAggregateFunction<T, TR>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.IAggregateFunctionNotOrdered-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.IAggregateFunctionNotOrdered-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.IAggregateFunctionNotOrdered<T, TR>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.IAggregateFunctionOrdered-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.IAggregateFunctionOrdered-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.IAggregateFunctionOrdered<T, TR>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.IExtensionCallBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.IExtensionCallBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.IExtensionCallBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.IGroupBy.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.IGroupBy.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.IGroupBy",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.IQueryableContainer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.IQueryableContainer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.IQueryableContainer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.ISqExtensionBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.ISqExtensionBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.ISqExtensionBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.ISqlExtension.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.ISqlExtension.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.ISqlExtension",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.IsNullableType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.IsNullableType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.IsNullableType",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Sql.IsNullableType.yml\" sourcestartlinenumber=\"1\">Provides information when function or expression could return null.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.Nulls.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.Nulls.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.Nulls",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.NullsPosition.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.NullsPosition.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.NullsPosition",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.PropertyAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.PropertyAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.PropertyAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Sql.PropertyAttribute.yml\" sourcestartlinenumber=\"1\">An attribute used to define a static value or\na Database side property/method that takes no parameters.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.QueryExtensionAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.QueryExtensionAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.QueryExtensionAttribute",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Sql.QueryExtensionAttribute.yml\" sourcestartlinenumber=\"1\">Defines custom query extension builder.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.QueryExtensionScope.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.QueryExtensionScope.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.QueryExtensionScope",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.SqlExtension.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.SqlExtension.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.SqlExtension",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.SqlExtensionParam.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.SqlExtensionParam.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.SqlExtensionParam",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.SqlID.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.SqlID.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.SqlID",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.SqlIDType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.SqlIDType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.SqlIDType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.SqlRow-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.SqlRow-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.SqlRow<T1, T2>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.TableExpressionAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.TableExpressionAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.TableExpressionAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.TableFunctionAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.TableFunctionAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.TableFunctionAttribute",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.TableQualification.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.TableQualification.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.TableQualification",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.Types.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.Types.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql.Types",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Sql.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Sql.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Sql",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlJoinType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlJoinType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlJoinType",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SqlJoinType.yml\" sourcestartlinenumber=\"1\">Defines join type. Used with join LINQ helpers.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.BasicSqlBuilder-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.BasicSqlBuilder-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.BasicSqlBuilder<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.BasicSqlBuilder.Step.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.BasicSqlBuilder.Step.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.BasicSqlBuilder.Step",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.BasicSqlBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.BasicSqlBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.BasicSqlBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.BasicSqlOptimizer.RunOptimizationContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.BasicSqlOptimizer.RunOptimizationContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.BasicSqlOptimizer.RunOptimizationContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.BasicSqlOptimizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.BasicSqlOptimizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.BasicSqlOptimizer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.ConvertType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.ConvertType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.ConvertType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.ISqlBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.ISqlBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.ISqlBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.ISqlOptimizer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.ISqlOptimizer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.ISqlOptimizer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.OptimizationContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.OptimizationContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.OptimizationContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.RowFeature.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.RowFeature.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.RowFeature",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SqlProvider.RowFeature.yml\" sourcestartlinenumber=\"1\">ROW constructor (tuple) feature support flags.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.SqlProviderFlags.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.SqlProviderFlags.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.SqlProviderFlags",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.TableIDInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.TableIDInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.TableIDInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.ValueToSqlConverter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.ValueToSqlConverter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider.ValueToSqlConverter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlProvider.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlProvider.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlProvider",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.AliasesContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.AliasesContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.AliasesContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ClauseBase-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ClauseBase-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ClauseBase<T1, T2>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ClauseBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ClauseBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ClauseBase",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.CloneVisitor-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.CloneVisitor-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.CloneVisitor<TContext>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ConditionBase-2.Expr_.Op_.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ConditionBase-2.Expr_.Op_.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ConditionBase<T1, T2>.Expr_.Op_",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ConditionBase-2.Expr_.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ConditionBase-2.Expr_.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ConditionBase<T1, T2>.Expr_",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ConditionBase-2.Not_.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ConditionBase-2.Not_.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ConditionBase<T1, T2>.Not_",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ConditionBase-2.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ConditionBase-2.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ConditionBase<T1, T2>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ConvertVisitor-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ConvertVisitor-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ConvertVisitor<TContext>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.CteClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.CteClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.CteClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.DefaultNullable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.DefaultNullable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.DefaultNullable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.EvaluationContext.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.EvaluationContext.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.EvaluationContext",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.GroupingType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.GroupingType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.GroupingType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.IInvertibleElement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.IInvertibleElement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.IInvertibleElement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.IQueryElement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.IQueryElement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.IQueryElement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.IReadOnlyParameterValues.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.IReadOnlyParameterValues.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.IReadOnlyParameterValues",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ISqlExpression",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlExpressionWalkable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlExpressionWalkable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ISqlExpressionWalkable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlExtensionBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlExtensionBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ISqlExtensionBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlPredicate.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlPredicate.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ISqlPredicate",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlQueryExtensionBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlQueryExtensionBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ISqlQueryExtensionBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlTableExtensionBuilder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlTableExtensionBuilder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ISqlTableExtensionBuilder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlTableSource.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ISqlTableSource.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ISqlTableSource",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.JoinExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.JoinExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.JoinExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.JoinType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.JoinType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.JoinType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.MultiInsertType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.MultiInsertType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.MultiInsertType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.Precedence.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.Precedence.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.Precedence",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.PseudoFunctions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.PseudoFunctions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.PseudoFunctions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SqlQuery.PseudoFunctions.yml\" sourcestartlinenumber=\"1\">Contains names and create helpers for pseudo-functions, generated by linq2db and then converted to database-specific SQL by provider-specific SQL optimizer.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryElementType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryElementType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.QueryElementType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryFindVisitor-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryFindVisitor-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.QueryFindVisitor<TContext>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryHelper.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.QueryHelper",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryInformation.HierarchyInfo.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryInformation.HierarchyInfo.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.QueryInformation.HierarchyInfo",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryInformation.HierarchyType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryInformation.HierarchyType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.QueryInformation.HierarchyType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryInformation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryInformation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.QueryInformation",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SqlQuery.QueryInformation.yml\" sourcestartlinenumber=\"1\">This is internal API and is not intended for use by Linq To DB applications.\nIt may change or be removed without further notice.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryParentVisitor-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryParentVisitor-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.QueryParentVisitor<TContext>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.QueryType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryVisitor-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryVisitor-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.QueryVisitor<TContext>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryVisitorExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.QueryVisitorExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.QueryVisitorExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.ReservedWords.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.ReservedWords.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.ReservedWords",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SelectQuery.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SelectQuery.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SelectQuery",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SetOperation.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SetOperation.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SetOperation",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlAliasPlaceholder.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlAliasPlaceholder.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlAliasPlaceholder",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlBinaryExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlBinaryExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlBinaryExpression",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlColumn.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlColumn.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlColumn",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlComment.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlComment.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlComment",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlCondition.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlCondition.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlCondition",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlConditionalInsertClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlConditionalInsertClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlConditionalInsertClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlCreateTableStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlCreateTableStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlCreateTableStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlCteTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlCteTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlCteTable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlDataType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlDataType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlDataType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlDeleteStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlDeleteStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlDeleteStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlDropTableStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlDropTableStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlDropTableStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlException.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlException.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlException",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlExpression",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlExtensions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SqlQuery.SqlExtensions.yml\" sourcestartlinenumber=\"1\">This is internal API and is not intended for use by Linq To DB applications.\nIt may change or be removed without further notice.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlField.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlField.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlField",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlFlags.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlFlags.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlFlags",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlFromClause.Join.Next.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlFromClause.Join.Next.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlFromClause.Join.Next",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlFromClause.Join.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlFromClause.Join.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlFromClause.Join",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlFromClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlFromClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlFromClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlFunction.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlFunction.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlFunction",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlGroupByClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlGroupByClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlGroupByClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlGroupingSet.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlGroupingSet.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlGroupingSet",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlInsertClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlInsertClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlInsertClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlInsertOrUpdateStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlInsertOrUpdateStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlInsertOrUpdateStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlInsertStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlInsertStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlInsertStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlInsertWithIdentity.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlInsertWithIdentity.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlInsertWithIdentity",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlJoinedTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlJoinedTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlJoinedTable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlMergeOperationClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlMergeOperationClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlMergeOperationClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlMergeStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlMergeStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlMergeStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlMultiInsertStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlMultiInsertStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlMultiInsertStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlObjectExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlObjectExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlObjectExpression",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlObjectName.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlObjectName.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlObjectName",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.SqlQuery.SqlObjectName.yml\" sourcestartlinenumber=\"1\">Represents full name of database object (e.g. table, view, function or procedure) split into components.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlObjectNameComparer.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlObjectNameComparer.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlObjectNameComparer",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlOrderByClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlOrderByClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlOrderByClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlOrderByItem.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlOrderByItem.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlOrderByItem",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlOutputClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlOutputClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlOutputClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlParameter.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlParameter.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlParameter",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlParameterValue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlParameterValue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlParameterValue",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlParameterValues.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlParameterValues.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlParameterValues",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.BaseNotExpr.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.BaseNotExpr.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.BaseNotExpr",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.Between.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.Between.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.Between",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.Expr.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.Expr.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.Expr",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.ExprExpr.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.ExprExpr.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.ExprExpr",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.FuncLike.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.FuncLike.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.FuncLike",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.InList.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.InList.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.InList",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.InSubQuery.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.InSubQuery.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.InSubQuery",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.IsDistinct.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.IsDistinct.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.IsDistinct",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.IsNull.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.IsNull.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.IsNull",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.IsTrue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.IsTrue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.IsTrue",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.Like.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.Like.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.Like",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.NotExpr.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.NotExpr.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.NotExpr",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.Operator.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.Operator.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.Operator",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.SearchString.SearchKind.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.SearchString.SearchKind.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.SearchString.SearchKind",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.SearchString.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.SearchString.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate.SearchString",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlPredicate.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlPredicate",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlQueryExtension.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlQueryExtension.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlQueryExtension",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlRawSqlTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlRawSqlTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlRawSqlTable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlRow.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlRow.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlRow",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSearchCondition.Next.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSearchCondition.Next.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlSearchCondition.Next",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSearchCondition.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSearchCondition.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlSearchCondition",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSelectClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSelectClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlSelectClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSelectStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSelectStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlSelectStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSetExpression.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSetExpression.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlSetExpression",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSetOperator.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlSetOperator.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlSetOperator",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlStatementWithQueryBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlStatementWithQueryBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlStatementWithQueryBase",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlTable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlTableLikeSource.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlTableLikeSource.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlTableLikeSource",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlTableSource.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlTableSource.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlTableSource",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlTableType.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlTableType.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlTableType",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlTruncateTableStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlTruncateTableStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlTruncateTableStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlUpdateClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlUpdateClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlUpdateClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlUpdateStatement.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlUpdateStatement.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlUpdateStatement",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlValue.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlValue.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlValue",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlValuesTable.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlValuesTable.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlValuesTable",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlWhereClause.Next.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlWhereClause.Next.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlWhereClause.Next",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlWhereClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlWhereClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlWhereClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlWithClause.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.SqlWithClause.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.SqlWithClause",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.WalkOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.WalkOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery.WalkOptions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.SqlQuery.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.SqlQuery.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.SqlQuery",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.StringAggregateExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.StringAggregateExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.StringAggregateExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.TableExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.TableExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.TableExtensions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.TableExtensions.yml\" sourcestartlinenumber=\"1\">Contains extension methods for LINQ queries.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.TableOptions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.TableOptions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.TableOptions",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.TableOptions.yml\" sourcestartlinenumber=\"1\">Provides table mapping flags to specify temporary table kind if mapped table is temporary table\nand Create/Drop Table API behavior when target table exists/not exists.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.TakeHints.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.TakeHints.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.TakeHints",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.TakeHints.yml\" sourcestartlinenumber=\"1\">Hints for Take\n<xref href=\"LinqToDB.LinqExtensions.Take%60%601(System.Linq.IQueryable%7b%60%600%7d%2cSystem.Int32%2cLinqToDB.TakeHints)\" data-throw-if-not-resolved=\"false\"></xref>\n<xref href=\"LinqToDB.LinqExtensions.Take%60%601(System.Linq.IQueryable%7b%60%600%7d%2cSystem.Linq.Expressions.Expression%7bSystem.Func%7bSystem.Int32%7d%7d%2cLinqToDB.TakeHints)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.TempTable-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.TempTable-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.TempTable<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.TempTable-1.yml\" sourcestartlinenumber=\"1\">Temporary table. Temporary table is a table, created when you create instance of this class and deleted when\nyou dispose it. It uses regular tables even if underlying database supports temporary tables concept.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Tools.ActivityBase.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Tools.ActivityBase.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.ActivityBase",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Tools.ActivityBase.yml\" sourcestartlinenumber=\"1\">Provides a basic implementation of the <xref href=\"LinqToDB.Tools.IActivity\" data-throw-if-not-resolved=\"false\"></xref> interface.\nYou do not have to use this class.\nHowever, it can help you to avoid incompatibility issues in the future if the <xref href=\"LinqToDB.Tools.IActivity\" data-throw-if-not-resolved=\"false\"></xref> interface is extended.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Tools.ActivityID.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Tools.ActivityID.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.ActivityID",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Tools.ActivityID.yml\" sourcestartlinenumber=\"1\">Activity Service event ID.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Tools.ActivityService.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Tools.ActivityService.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.ActivityService",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Tools.ActivityService.yml\" sourcestartlinenumber=\"1\">Provides API to register factory methods that return an Activity object or <code>null</code> for provided <xref href=\"LinqToDB.Tools.ActivityID\" data-throw-if-not-resolved=\"false\"></xref> event.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Tools.DataExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Tools.DataExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.DataExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Tools.IActivity.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Tools.IActivity.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.IActivity",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.Tools.IActivity.yml\" sourcestartlinenumber=\"1\">Represents a user-defined operation with context to be used for Activity Service events.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Tools.SqlExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Tools.SqlExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools.SqlExtensions",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.Tools.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.Tools.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.Tools",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.UpdateColumnFilter-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.UpdateColumnFilter-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.UpdateColumnFilter<T>",
      "Summary": "<p sourcefile=\"api/linq2db/LinqToDB.UpdateColumnFilter-1.yml\" sourcestartlinenumber=\"1\">Defines signature for column filter for update operations.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.UpdateOutput-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.UpdateOutput-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB.UpdateOutput<T>",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/LinqToDB.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/LinqToDB.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "LinqToDB",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/linq2db.IExecutionScope.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/linq2db.IExecutionScope.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "IExecutionScope",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/linq2db/linq2db.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/linq2db.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "",
      "Summary": null
    },
    {
      "type": "Toc",
      "source_relative_path": "api/linq2db/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/linq2db/toc.html"
        },
        ".json": {
          "relative_path": "api/linq2db/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/CLI.md",
      "output": {
        ".html": {
          "relative_path": "articles/CLI.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/FAQ.md",
      "output": {
        ".html": {
          "relative_path": "articles/FAQ.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/T4.md",
      "output": {
        ".html": {
          "relative_path": "articles/T4.html"
        }
      },
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "articles/cli-help.txt",
      "output": {
        "resource": {
          "relative_path": "articles/cli-help.txt"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/general/Managing-data-connection.md",
      "output": {
        ".html": {
          "relative_path": "articles/general/Managing-data-connection.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/general/Video.md",
      "output": {
        ".html": {
          "relative_path": "articles/general/Video.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/general/databases.md",
      "output": {
        ".html": {
          "relative_path": "articles/general/databases.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/general/interceptors.md",
      "output": {
        ".html": {
          "relative_path": "articles/general/interceptors.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/general/metrics.md",
      "output": {
        ".html": {
          "relative_path": "articles/general/metrics.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "articles/general/toc.yml",
      "output": {
        ".html": {
          "relative_path": "articles/general/toc.html"
        },
        ".json": {
          "relative_path": "articles/general/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/get-started/asp-dotnet-core/index.md",
      "output": {
        ".html": {
          "relative_path": "articles/get-started/asp-dotnet-core/index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/get-started/full-dotnet/existing-db.md",
      "output": {
        ".html": {
          "relative_path": "articles/get-started/full-dotnet/existing-db.html"
        }
      },
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "articles/get-started/full-dotnet/static/output-existing-db.png",
      "output": {
        "resource": {
          "relative_path": "articles/get-started/full-dotnet/static/output-existing-db.png"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/get-started/install/index.md",
      "output": {
        ".html": {
          "relative_path": "articles/get-started/install/index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "articles/get-started/toc.yml",
      "output": {
        ".html": {
          "relative_path": "articles/get-started/toc.html"
        },
        ".json": {
          "relative_path": "articles/get-started/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/how-to/teach-linq2db-convert-custom-net-code-to-sql.md",
      "output": {
        ".html": {
          "relative_path": "articles/how-to/teach-linq2db-convert-custom-net-code-to-sql.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "articles/how-to/toc.yml",
      "output": {
        ".html": {
          "relative_path": "articles/how-to/toc.html"
        },
        ".json": {
          "relative_path": "articles/how-to/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/how-to/using-mapvalue-attribute-to-control-mapping.md",
      "output": {
        ".html": {
          "relative_path": "articles/how-to/using-mapvalue-attribute-to-control-mapping.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/links.md",
      "output": {
        ".html": {
          "relative_path": "articles/links.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/project/Issue-reporting.md",
      "output": {
        ".html": {
          "relative_path": "articles/project/Issue-reporting.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/project/contrib.md",
      "output": {
        ".html": {
          "relative_path": "articles/project/contrib.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "articles/project/toc.yml",
      "output": {
        ".html": {
          "relative_path": "articles/project/toc.html"
        },
        ".json": {
          "relative_path": "articles/project/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/sql/Bulk-Copy.md",
      "output": {
        ".html": {
          "relative_path": "articles/sql/Bulk-Copy.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/sql/CTE.md",
      "output": {
        ".html": {
          "relative_path": "articles/sql/CTE.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/sql/Join-Operators.md",
      "output": {
        ".html": {
          "relative_path": "articles/sql/Join-Operators.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/sql/Query-Extensions.md",
      "output": {
        ".html": {
          "relative_path": "articles/sql/Query-Extensions.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/sql/Window-Functions-(Analytic-Functions).md",
      "output": {
        ".html": {
          "relative_path": "articles/sql/Window-Functions-(Analytic-Functions).html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/sql/merge/Merge-API-Background.md",
      "output": {
        ".html": {
          "relative_path": "articles/sql/merge/Merge-API-Background.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/sql/merge/Merge-API-Description.md",
      "output": {
        ".html": {
          "relative_path": "articles/sql/merge/Merge-API-Description.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/sql/merge/Merge-API-Migration.md",
      "output": {
        ".html": {
          "relative_path": "articles/sql/merge/Merge-API-Migration.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/sql/merge/Merge-API.md",
      "output": {
        ".html": {
          "relative_path": "articles/sql/merge/Merge-API.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "articles/sql/merge/toc.yml",
      "output": {
        ".html": {
          "relative_path": "articles/sql/merge/toc.html"
        },
        ".json": {
          "relative_path": "articles/sql/merge/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "articles/sql/toc.yml",
      "output": {
        ".html": {
          "relative_path": "articles/sql/toc.html"
        },
        ".json": {
          "relative_path": "articles/sql/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "articles/toc.yml",
      "output": {
        ".html": {
          "relative_path": "articles/toc.html"
        },
        ".json": {
          "relative_path": "articles/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/Icon.ico",
      "output": {
        "resource": {
          "relative_path": "images/Icon.ico"
        }
      },
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/icon.png",
      "output": {
        "resource": {
          "relative_path": "images/icon.png"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html"
        },
        ".json": {
          "relative_path": "toc.json"
        }
      },
      "version": ""
    }
  ],
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}